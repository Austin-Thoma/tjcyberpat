"use strict";var THREE=THREE||{REVISION:"56"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(e,t){if(Object.keys)for(var i=Object.keys(t),r=0,n=i.length;r<n;r++){var o=i[r];Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}else for(o in i={}.hasOwnProperty,t)i.call(t,o)&&(e[o]=t[o]);return e},function(){for(var n=0,e=["ms","moz","webkit","o"],t=0;t<e.length&&!window.requestAnimationFrame;++t)window.requestAnimationFrame=window[e[t]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[t]+"CancelAnimationFrame"]||window[e[t]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(e){var t=Date.now(),i=Math.max(0,16-(t-n)),r=window.setTimeout(function(){e(t+i)},i);return n=t+i,r}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.extend(THREE.Color.prototype,{r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSV:function(e,t,i){return console.log("DEPRECATED: Color's .setHSV() will be removed. Use .setHSL( h, s, l ) instead."),this.setHSL(e,t*i/((e=(2-t)*i)<1?e:2-e),e/2)},setHSL:function(e,t,i){var r;return 0===t?this.r=this.g=this.b=i:(r=function(e,t,i){return i<0&&(i+=1),1<i&&--i,i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e},i=2*i-(t=i<=.5?i*(1+t):i+t-i*t),this.r=r(i,t,e+1/3),this.g=r(i,t,e),this.b=r(i,t,e-1/3)),this},setStyle:function(e){return/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)?(e=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var h={h:0,s:0,l:0};return function(){var e,t=this.r,i=this.g,r=this.b,n=Math.max(t,i,r),o=((s=Math.min(t,i,r))+n)/2;if(s===n)s=e=0;else{var a=n-s,s=o<=.5?a/(n+s):a/(2-n-s);switch(n){case t:e=(i-r)/a+(i<r?6:0);break;case i:e=(r-t)/a+2;break;case r:e=(t-i)/a+4}e/=6}return h.h=e,h.s=s,h.l=o,h}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}}),THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.extend(THREE.Quaternion.prototype,{set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var i=Math.cos(e.x/2),r=Math.cos(e.y/2),n=Math.cos(e.z/2),o=Math.sin(e.x/2),a=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n-o*a*s):"YXZ"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n+o*a*s):"ZXY"===t?(this.x=o*r*n-i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n-o*a*s):"ZYX"===t?(this.x=o*r*n-i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n+o*a*s):"YZX"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n-o*a*s):"XZY"===t&&(this.x=o*r*n-i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n+o*a*s),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(i),this},setFromRotationMatrix:function(e){var t=e.elements,i=t[0],e=t[4],r=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],l=i+o+(t=t[10]);return 0<l?(i=.5/Math.sqrt(l+1),this.w=.25/i,this.x=(h-a)*i,this.y=(r-s)*i,this.z=(n-e)*i):o<i&&t<i?(i=2*Math.sqrt(1+i-o-t),this.w=(h-a)/i,this.x=.25*i,this.y=(e+n)/i,this.z=(r+s)/i):t<o?(i=2*Math.sqrt(1+o-i-t),this.w=(r-s)/i,this.x=(e+n)/i,this.y=.25*i,this.z=(a+h)/i):(i=2*Math.sqrt(1+t-i-o),this.w=(n-e)/i,this.x=(r+s)/i,this.y=(a+h)/i,this.z=.25*i),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.z=this.y=this.x=0,this.w=1):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e.x,r=e.y,n=e.z,o=e.w,a=t.x,s=t.y,h=t.z,l=t.w;return this.x=i*l+o*a+r*h-n*s,this.y=r*l+o*s+n*a-i*h,this.z=n*l+o*h+i*s-r*a,this.w=o*l-i*a-r*s-n*h,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this.x,r=this.y,n=this.z,o=this.w,a=o*e.w+i*e.x+r*e.y+n*e.z;if(a<0?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,a=-a):this.copy(e),1<=a)return this.w=o,this.x=i,this.y=r,this.z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return Math.abs(h)<.001?(this.w=.5*(o+this.w),this.x=.5*(i+this.x),this.y=.5*(r+this.y),this.z=.5*(n+this.z)):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this.w=o*a+this.w*s,this.x=i*a+this.x*s,this.y=r*a+this.y*s,this.z=n*a+this.z*s),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}}),THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.extend(THREE.Vector2.prototype,{set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return t*t+(e=this.y-e.y)*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}}),THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.extend(THREE.Vector3.prototype,{set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*i+e[6]*r,this.y=e[1]*t+e[4]*i+e[7]*r,this.z=e[2]*t+e[5]*i+e[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12],this.y=e[1]*t+e[5]*i+e[9]*r+e[13],this.z=e[2]*t+e[6]*i+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z,n=1/((e=e.elements)[3]*t+e[7]*i+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*i+e[8]*r+e[12])*n,this.y=(e[1]*t+e[5]*i+e[9]*r+e[13])*n,this.z=(e[2]*t+e[6]*i+e[10]*r+e[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z,s=(e=e.w)*t+o*r-a*i,h=e*i+a*t-n*r,l=e*r+n*i-o*t,t=-n*t-o*i-a*r;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},applyEuler:function(){var r=new THREE.Quaternion;return function(e,t){var i=r.setFromEuler(e,t);return this.applyQuaternion(i),this}}(),applyAxisAngle:function(){var r=new THREE.Quaternion;return function(e,t){var i=r.setFromAxisAngle(e,t);return this.applyQuaternion(i),this}}(),transformDirection:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r,this.y=e[1]*t+e[5]*i+e[9]*r,this.z=e[2]*t+e[6]*i+e[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},projectOnVector:function(){var t=new THREE.Vector3;return function(e){return t.copy(e).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t=new THREE.Vector3;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=new THREE.Vector3;return function(e){return t.copy(this).projectOnVector(e).multiplyScalar(2),this.subVectors(t,this)}}(),angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return t*t+i*i+(e=this.z-e.z)*e},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=(p=e.elements)[0],n=p[4],o=p[8],a=p[1],s=p[5],h=p[9],l=p[2],c=p[6],p=p[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(i(o)),Math.abs(o)<.99999?(this.x=Math.atan2(-h,p),this.z=Math.atan2(-n,r)):(this.x=Math.atan2(c,s),this.z=0)):"YXZ"===t?(this.x=Math.asin(-i(h)),Math.abs(h)<.99999?(this.y=Math.atan2(o,p),this.z=Math.atan2(a,s)):(this.y=Math.atan2(-l,r),this.z=0)):"ZXY"===t?(this.x=Math.asin(i(c)),Math.abs(c)<.99999?(this.y=Math.atan2(-l,p),this.z=Math.atan2(-n,s)):(this.y=0,this.z=Math.atan2(a,r))):"ZYX"===t?(this.y=Math.asin(-i(l)),Math.abs(l)<.99999?(this.x=Math.atan2(c,p),this.z=Math.atan2(a,r)):(this.x=0,this.z=Math.atan2(-n,s))):"YZX"===t?(this.z=Math.asin(i(a)),Math.abs(a)<.99999?(this.x=Math.atan2(-h,s),this.y=Math.atan2(-l,r)):(this.x=0,this.y=Math.atan2(o,p))):"XZY"===t&&(this.z=Math.asin(-i(n)),Math.abs(n)<.99999?(this.x=Math.atan2(c,s),this.y=Math.atan2(o,r)):(this.x=Math.atan2(-h,p),this.y=0)),this},setEulerFromQuaternion:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.x*e.x,n=e.y*e.y,o=e.z*e.z,a=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),a-r-n+o),this.y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a+r-n-o)):"YXZ"===t?(this.x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a-r-n+o),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a-r+n-o)):"ZXY"===t?(this.x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),a-r-n+o),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a-r+n-o)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),a-r-n+o),this.y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a+r-n-o)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),a-r+n-o),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),a+r-n-o),this.z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),a-r+n-o),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a+r-n-o),this.z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=i,this.z=e,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}}),THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.extend(THREE.Vector4.prototype,{set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12]*n,this.y=e[1]*t+e[5]*i+e[9]*r+e[13]*n,this.z=e[2]*t+e[6]*i+e[10]*r+e[14]*n,this.w=e[3]*t+e[7]*i+e[11]*r+e[15]*n,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t=(e=e.elements)[0],i=e[4],r=e[8],n=e[1],o=e[5],a=e[9],s=e[2],h=e[6],l=e[10];return Math.abs(i-n)<.01&&Math.abs(r-s)<.01&&Math.abs(a-h)<.01?Math.abs(i+n)<.1&&Math.abs(r+s)<.1&&Math.abs(a+h)<.1&&Math.abs(t+o+l-3)<.1?this.set(1,0,0,0):(e=Math.PI,l=(l+1)/2,i=(i+n)/4,r=(r+s)/4,a=(a+h)/4,(o=(o+1)/2)<(t=(t+1)/2)&&l<t?i=t<.01?(h=0,s=.707106781):(s=i/(h=Math.sqrt(t)),r/h):l<o?i=o<.01?(s=0,h=.707106781):(h=i/(s=Math.sqrt(o)),a/s):l<.01?(s=h=.707106781,i=0):(h=r/(i=Math.sqrt(l)),s=a/i),this.set(h,s,i,e)):(e=Math.sqrt((h-a)*(h-a)+(r-s)*(r-s)+(n-i)*(n-i)),Math.abs(e)<.001&&(e=1),this.x=(h-a)/e,this.y=(r-s)/e,this.z=(n-i)/e,this.w=Math.acos((t+o+l-1)/2)),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}}),THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.extend(THREE.Line3.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var r=new THREE.Vector3,n=new THREE.Vector3;return function(e,t){r.subVectors(e,this.start),n.subVectors(this.end,this.start);var i=n.dot(n),i=n.dot(r)/i;return t&&(i=THREE.Math.clamp(i,0,1)),i}}(),closestPointToPoint:function(e,t,i){return e=this.closestPointToPointParameter(e,t),i=i||new THREE.Vector3,this.delta(i).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}}),THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.extend(THREE.Box2.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;i<r;i++)(t=e[i]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var r=new THREE.Vector2;return function(e,t){var i=r.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector2;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}}),THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.extend(THREE.Box3.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;i<r;i++)(t=e[i]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var r=new THREE.Vector3;return function(e,t){var i=r.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new THREE.Vector3;return function(e){return(e=e||new THREE.Sphere).center=this.center(),e.radius=.5*this.size(t).length(),e}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var t=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(e){return t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(t),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}}),THREE.Matrix3=function(e,t,i,r,n,o,a,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==n?n:1,o||0,a||0,s||0,void 0!==h?h:1)},THREE.extend(THREE.Matrix3.prototype,{set:function(e,t,i,r,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=i,l[1]=r,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var r=new THREE.Vector3;return function(e){for(var t=0,i=e.length;t<i;t+=3)r.x=e[t],r.y=e[t+1],r.z=e[t+2],r.applyMatrix3(this),e[t]=r.x,e[t+1]=r.y,e[t+2]=r.z;return e}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7];return t*o*(e=e[8])-t*a*h-i*n*e+i*a*s+r*n*h-r*o*s},getInverse:function(e,t){var i=e.elements,r=this.elements;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],0!=(i=i[0]*r[0]+i[1]*r[3]+i[2]*r[6]))return this.multiplyScalar(1/i),this;if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this},transpose:function(){var e=this.elements,t=e[1];return e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}}),THREE.Matrix4=function(e,t,i,r,n,o,a,s,h,l,c,p,u,f,d,E){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=i||0,m[12]=r||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=p||0,m[3]=u||0,m[7]=f||0,m[11]=d||0,m[15]=void 0!==E?E:1},THREE.extend(THREE.Matrix4.prototype,{set:function(e,t,i,r,n,o,a,s,h,l,c,p,u,f,d,E){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=p,m[3]=u,m[7]=f,m[11]=d,m[15]=E,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},setRotationFromEuler:function(e,t){var i,r,n,o,a=this.elements,s=e.x,h=e.y,l=e.z,c=Math.cos(s),s=Math.sin(s),p=Math.cos(h),h=Math.sin(h),u=Math.cos(l),l=Math.sin(l);return void 0===t||"XYZ"===t?(i=c*u,r=c*l,n=s*u,o=s*l,a[0]=p*u,a[4]=-p*l,a[8]=h,a[1]=r+n*h,a[5]=i-o*h,a[9]=-s*p,a[2]=o-i*h,a[6]=n+r*h,a[10]=c*p):"YXZ"===t?(i=p*u,r=p*l,n=h*u,o=h*l,a[0]=i+o*s,a[4]=n*s-r,a[8]=c*h,a[1]=c*l,a[5]=c*u,a[9]=-s,a[2]=r*s-n,a[6]=o+i*s,a[10]=c*p):"ZXY"===t?(i=p*u,r=p*l,n=h*u,o=h*l,a[0]=i-o*s,a[4]=-c*l,a[8]=n+r*s,a[1]=r+n*s,a[5]=c*u,a[9]=o-i*s,a[2]=-c*h,a[6]=s,a[10]=c*p):"ZYX"===t?(i=c*u,r=c*l,n=s*u,o=s*l,a[0]=p*u,a[4]=n*h-r,a[8]=i*h+o,a[1]=p*l,a[5]=o*h+i,a[9]=r*h-n,a[2]=-h,a[6]=s*p,a[10]=c*p):"YZX"===t?(i=c*p,r=c*h,n=s*p,o=s*h,a[0]=p*u,a[4]=o-i*l,a[8]=n*l+r,a[1]=l,a[5]=c*u,a[9]=-s*u,a[2]=-h*u,a[6]=r*l+n,a[10]=i-o*l):"XZY"===t&&(i=c*p,r=c*h,n=s*p,o=s*h,a[0]=p*u,a[4]=-l,a[8]=h*u,a[1]=i*l+o,a[5]=c*u,a[9]=r*l-n,a[2]=n*l-r,a[6]=s*u,a[10]=o*l+i),this},setRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,o=e.w,a=n+n,e=i*(l=i+i),s=i*(c=r+r),i=i*a,h=r*c,r=r*a,n=n*a,l=o*l,c=o*c,o=o*a;return t[0]=1-(h+n),t[4]=s-o,t[8]=i+c,t[1]=s+o,t[5]=1-(e+n),t[9]=r-l,t[2]=i-c,t[6]=r+l,t[10]=1-(e+h),this},lookAt:function(){var n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3;return function(e,t,i){var r=this.elements;return a.subVectors(e,t).normalize(),0===a.length()&&(a.z=1),n.crossVectors(i,a).normalize(),0===n.length()&&(a.x+=1e-4,n.crossVectors(i,a).normalize()),o.crossVectors(a,n),r[0]=n.x,r[4]=o.x,r[8]=a.x,r[1]=n.y,r[5]=o.y,r[9]=a.y,r[2]=n.z,r[6]=o.z,r[10]=a.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],p=i[9],u=i[13],f=i[2],d=i[6],E=i[10],m=i[14],g=i[3],T=i[7],v=i[11],i=i[15],y=r[0],R=r[4],x=r[8],H=r[12],w=r[1],_=r[5],b=r[9],S=r[13],M=r[2],A=r[6],C=r[10],P=r[14],L=r[3],D=r[7],F=r[11],r=r[15];return n[0]=o*y+a*w+s*M+h*L,n[4]=o*R+a*_+s*A+h*D,n[8]=o*x+a*b+s*C+h*F,n[12]=o*H+a*S+s*P+h*r,n[1]=l*y+c*w+p*M+u*L,n[5]=l*R+c*_+p*A+u*D,n[9]=l*x+c*b+p*C+u*F,n[13]=l*H+c*S+p*P+u*r,n[2]=f*y+d*w+E*M+m*L,n[6]=f*R+d*_+E*A+m*D,n[10]=f*x+d*b+E*C+m*F,n[14]=f*H+d*S+E*P+m*r,n[3]=g*y+T*w+v*M+i*L,n[7]=g*R+T*_+v*A+i*D,n[11]=g*x+T*b+v*C+i*F,n[15]=g*H+T*S+v*P+i*r,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var r=new THREE.Vector3;return function(e){for(var t=0,i=e.length;t<i;t+=3)r.x=e[t],r.y=e[t+1],r.z=e[t+2],r.applyProjection(this),e[t]=r.x,e[t+1]=r.y,e[t+2]=r.z;return e}}(),rotateAxis:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z;return e.x=i*t[0]+r*t[4]+n*t[8],e.y=i*t[1]+r*t[5]+n*t[9],e.z=i*t[2]+r*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,i=new THREE.Vector4;return i.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,i.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,i.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,i.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,i},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],p=e[10],u=e[14];return e[3]*(n*s*c-r*h*c-n*a*p+i*h*p+r*a*u-i*s*u)+e[7]*(t*s*u-t*h*p+n*o*p-r*o*u+r*h*l-n*s*l)+e[11]*(t*h*c-t*a*u-n*o*c+i*o*u+n*a*l-i*h*l)+e[15]*(-r*a*l-t*s*c+t*a*p+r*o*c-i*o*p+i*s*l)},transpose:function(){var e=this.elements,t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var t=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var e=this.elements;return t.set(e[12],e[13],e[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],o=r[4],a=r[8],s=r[12],h=r[1],l=r[5],c=r[9],p=r[13],u=r[2],f=r[6],d=r[10],E=r[14],m=r[3],g=r[7],T=r[11],v=r[15];if(i[0]=c*E*g-p*d*g+p*f*T-l*E*T-c*f*v+l*d*v,i[4]=s*d*g-a*E*g-s*f*T+o*E*T+a*f*v-o*d*v,i[8]=a*p*g-s*c*g+s*l*T-o*p*T-a*l*v+o*c*v,i[12]=s*c*f-a*p*f-s*l*d+o*p*d+a*l*E-o*c*E,i[1]=p*d*m-c*E*m-p*u*T+h*E*T+c*u*v-h*d*v,i[5]=a*E*m-s*d*m+s*u*T-n*E*T-a*u*v+n*d*v,i[9]=s*c*m-a*p*m-s*h*T+n*p*T+a*h*v-n*c*v,i[13]=a*p*u-s*c*u+s*h*d-n*p*d-a*h*E+n*c*E,i[2]=l*E*m-p*f*m+p*u*g-h*E*g-l*u*v+h*f*v,i[6]=s*f*m-o*E*m-s*u*g+n*E*g+o*u*v-n*f*v,i[10]=o*p*m-s*l*m+s*h*g-n*p*g-o*h*v+n*l*v,i[14]=s*l*u-o*p*u-s*h*f+n*p*f+o*h*E-n*l*E,i[3]=c*f*m-l*d*m-c*u*g+h*d*g+l*u*T-h*f*T,i[7]=o*d*m-a*f*m+a*u*g-n*d*g-o*u*T+n*f*T,i[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,i[15]=o*c*u-a*l*u+a*h*f-n*c*f-o*h*d+n*l*d,0!=(i=r[0]*i[0]+r[1]*i[4]+r[2]*i[8]+r[3]*i[12]))return this.multiplyScalar(1/i),this;if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this},compose:function(){var n=new THREE.Matrix4,o=new THREE.Matrix4;return function(e,t,i){var r=this.elements;return n.identity(),n.setRotationFromQuaternion(t),o.makeScale(i.x,i.y,i.z),this.multiplyMatrices(n,o),r[12]=e.x,r[13]=e.y,r[14]=e.z,this}}(),decompose:function(){var n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Matrix4;return function(e,t,i){var r=this.elements;return n.set(r[0],r[1],r[2]),o.set(r[4],r[5],r[6]),a.set(r[8],r[9],r[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,(i=i instanceof THREE.Vector3?i:new THREE.Vector3).x=n.length(),i.y=o.length(),i.z=a.length(),e.x=r[12],e.y=r[13],e.z=r[14],s.copy(this),s.elements[0]/=i.x,s.elements[1]/=i.x,s.elements[2]/=i.x,s.elements[4]/=i.y,s.elements[5]/=i.y,s.elements[6]/=i.y,s.elements[8]/=i.z,s.elements[9]/=i.z,s.elements[10]/=i.z,t.setFromRotationMatrix(s),[e,t,i]}}(),extractPosition:function(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(){var o=new THREE.Vector3;return function(e){var t=this.elements,e=e.elements,i=1/o.set(e[0],e[1],e[2]).length(),r=1/o.set(e[4],e[5],e[6]).length(),n=1/o.set(e[8],e[9],e[10]).length();return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[4]=e[4]*r,t[5]=e[5]*r,t[6]=e[6]*r,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,this}}(),translate:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[12]=t[0]*i+t[4]*r+t[8]*e+t[12],t[13]=t[1]*i+t[5]*r+t[9]*e+t[13],t[14]=t[2]*i+t[6]*r+t[10]*e+t[14],t[15]=t[3]*i+t[7]*r+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,i=t[4],r=t[5],n=t[6],o=t[7],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e),e=Math.sin(e);return t[4]=c*i+e*a,t[5]=c*r+e*s,t[6]=c*n+e*h,t[7]=c*o+e*l,t[8]=c*a-e*i,t[9]=c*s-e*r,t[10]=c*h-e*n,t[11]=c*l-e*o,this},rotateY:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],o=t[3],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e),e=Math.sin(e);return t[0]=c*i-e*a,t[1]=c*r-e*s,t[2]=c*n-e*h,t[3]=c*o-e*l,t[8]=c*a+e*i,t[9]=c*s+e*r,t[10]=c*h+e*n,t[11]=c*l+e*o,this},rotateZ:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],o=t[3],a=t[4],s=t[5],h=t[6],l=t[7],c=Math.cos(e),e=Math.sin(e);return t[0]=c*i+e*a,t[1]=c*r+e*s,t[2]=c*n+e*h,t[3]=c*o+e*l,t[4]=c*a-e*i,t[5]=c*s-e*r,t[6]=c*h-e*n,t[7]=c*l-e*o,this},rotateByAxis:function(e,t){var i=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,n=e.y,o=e.z,n=n/(a=Math.sqrt(r*r+n*n+o*o)),o=o/a,a=(r=r/a)*r,s=n*n,h=o*o,l=r*n*(p=1-(d=Math.cos(t))),c=r*o*p,p=n*o*p,r=r*(f=Math.sin(t)),u=n*f,f=o*f,o=a+(1-a)*d,a=l+f,n=c-u,l=l-f,s=s+(1-s)*d,f=p+r,c=c+u,p=p-r,h=h+(1-h)*d,d=i[0],r=i[1],u=i[2],E=i[3],m=i[4],g=i[5],T=i[6],v=i[7],y=i[8],R=i[9],x=i[10],H=i[11];return i[0]=o*d+a*m+n*y,i[1]=o*r+a*g+n*R,i[2]=o*u+a*T+n*x,i[3]=o*E+a*v+n*H,i[4]=l*d+s*m+f*y,i[5]=l*r+s*g+f*R,i[6]=l*u+s*T+f*x,i[7]=l*E+s*v+f*H,i[8]=c*d+p*m+h*y,i[9]=c*r+p*g+h*R,i[10]=c*u+p*T+h*x,i[11]=c*E+p*v+h*H,this},scale:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[0]*=i,t[4]*=r,t[8]*=e,t[1]*=i,t[5]*=r,t[9]*=e,t[2]*=i,t[6]*=r,t[10]*=e,t[3]*=i,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*o,0,h*s-r*a,l*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeFrustum:function(e,t,i,r,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){var n=-(e=i*Math.tan(THREE.Math.degToRad(.5*e)));return this.makeFrustum(n*t,e*t,n,e,i,r)},makeOrthographic:function(e,t,i,r,n,o){var a=this.elements,s=t-e,h=i-r,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-(t+e)/s,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-(i+r)/h,a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-(o+n)/l,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}}),THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.extend(THREE.Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var t=new THREE.Vector3;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var i=new THREE.Vector3;return function(e){var t=i.subVectors(e,this.origin).dot(this.direction);return i.copy(this.direction).multiplyScalar(t).add(this.origin),i.distanceTo(e)}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){return 0!=e.normal.dot(this.direction)||0==e.distanceToPoint(this.origin)},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0!=t?-(this.origin.dot(e.normal)+e.constant)/t:0==e.distanceToPoint(this.origin)?0:void 0},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return void 0===i?void 0:this.at(i,t)},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}}),THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.extend(THREE.Sphere.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var i=0,r=0,n=t.length;r<n;r++)var o=e.distanceToSquared(t[r]),i=Math.max(i,o);return this.center=e,this.radius=Math.sqrt(i),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return(e=e||new THREE.Box3).set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}}),THREE.Frustum=function(e,t,i,r,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.extend(THREE.Frustum.prototype,{set:function(e,t,i,r,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,i=0;i<6;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,e=(m=e.elements)[0],i=m[1],r=m[2],n=m[3],o=m[4],a=m[5],s=m[6],h=m[7],l=m[8],c=m[9],p=m[10],u=m[11],f=m[12],d=m[13],E=m[14],m=m[15];return t[0].setComponents(n-e,h-o,u-l,m-f).normalize(),t[1].setComponents(n+e,h+o,u+l,m+f).normalize(),t[2].setComponents(n+i,h+a,u+c,m+d).normalize(),t[3].setComponents(n-i,h-a,u-c,m-d).normalize(),t[4].setComponents(n-r,h-s,u-p,m-E).normalize(),t[5].setComponents(n+r,h+s,u+p,m+E).normalize(),this},intersectsObject:function(){var r=new THREE.Vector3;return function(e){var t=e.matrixWorld,i=this.planes,e=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis();for(r.getPositionFromMatrix(t),t=0;t<6;t++)if(i[t].distanceToPoint(r)<e)return!1;return!0}}(),intersectsSphere:function(e){for(var t=this.planes,i=e.center,e=-e.radius,r=0;r<6;r++)if(t[r].distanceToPoint(i)<e)return!1;return!0},containsPoint:function(e){for(var t=this.planes,i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}}),THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.extend(THREE.Plane.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var r=new THREE.Vector3,n=new THREE.Vector3;return function(e,t,i){return t=r.subVectors(i,t).cross(n.subVectors(e,t)).normalize(),this.setFromNormalAndCoplanarPoint(t,e),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t},intersectLine:function(){var o=new THREE.Vector3;return function(e,t){var i=t||new THREE.Vector3,r=e.delta(o),n=this.normal.dot(r);return 0!=n?(n=-(e.start.dot(this.normal)+this.constant)/n)<0||1<n?void 0:i.copy(r).multiplyScalar(n).add(e.start):0==this.distanceToPoint(e.start)?i.copy(e.start):void 0}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var n=new THREE.Vector3,o=new THREE.Vector3;return function(e,t){var t=t||(new THREE.Matrix3).getInverse(e).transpose(),i=n.copy(this.normal).applyMatrix3(t),r=this.coplanarPoint(o);return r.applyMatrix4(e),this.setFromNormalAndCoplanarPoint(i,r),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}}),THREE.Math={clamp:function(e,t,i){return e<t?t:i<e?i:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},smoothstep:function(e,t,i){return e<=t?0:i<=e?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:i<=e?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:0<e?1:0},degToRad:function(){var t=Math.PI/180;return function(e){return e*t}}(),radToDeg:function(){var t=180/Math.PI;return function(e){return e*t}}()},THREE.Spline=function(e){function t(e,t,i,r,n,o,a){return(2*(t-i)+(e=.5*(i-e))+(r=.5*(r-t)))*a+(-3*(t-i)-2*e-r)*o+e*n+t}this.points=e;var i,r,n,o,a,s,h,l,c,p=[],u={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,r=Math.floor(i),n=i-r,p[0]=0===r?r:r-1,p[1]=r,p[2]=r>this.points.length-2?this.points.length-1:r+1,p[3]=r>this.points.length-3?this.points.length-1:r+2,s=this.points[p[0]],h=this.points[p[1]],l=this.points[p[2]],c=this.points[p[3]],a=n*(o=n*n),u.x=t(s.x,h.x,l.x,c.x,n,o,a),u.y=t(s.y,h.y,l.y,c.y,n,o,a),u.z=t(s.z,h.z,l.z,c.z,n,o,a),u},this.getControlPointsArray=function(){for(var e,t=this.points.length,i=[],r=0;r<t;r++)e=this.points[r],i[r]=[e.x,e.y,e.z];return i},this.getLength=function(e){var t,i,r,n=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e=e||100,i=this.points.length*e,o.copy(this.points[0]),e=1;e<i;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(o),o.copy(r),t*=this.points.length-1,(t=Math.floor(t))!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(i=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*i/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),i=1;i<a-1;i++)r=n+i*(1/a)*(o-n),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==i?i:new THREE.Vector3},THREE.Triangle.normal=function(){var n=new THREE.Vector3;return function(e,t,i,r){return(r=r||new THREE.Vector3).subVectors(i,t),n.subVectors(e,t),r.cross(n),0<(e=r.lengthSq())?r.multiplyScalar(1/Math.sqrt(e)):r.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3;return function(e,t,i,r,n){s.subVectors(r,t),h.subVectors(i,t),l.subVectors(e,t);var e=s.dot(s),t=s.dot(h),i=s.dot(l),o=h.dot(h),r=h.dot(l),a=e*o-t*t,n=n||new THREE.Vector3;return 0==a?n.set(-2,-1,-1):(o=(o*i-t*r)*(a=1/a),e=(e*r-t*i)*a,n.set(1-o-e,e,o))}}(),THREE.Triangle.containsPoint=function(){var n=new THREE.Vector3;return function(e,t,i,r){return 0<=(e=THREE.Triangle.barycoordFromPoint(e,t,i,r,n)).x&&0<=e.y&&e.x+e.y<=1}}(),THREE.extend(THREE.Triangle.prototype,{constructor:THREE.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}}),THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0===e||e,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.extend(THREE.Clock.prototype,{start:function(){this.oldTime=this.startTime=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e,t=0;return this.autoStart&&!this.running&&this.start(),this.running&&(t=.001*((e=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now())-this.oldTime),this.oldTime=e,this.elapsedTime+=t),t}}),THREE.EventDispatcher=function(){var n={};this.addEventListener=function(e,t){void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},this.removeEventListener=function(e,t){var i=n[e].indexOf(t);-1!==i&&n[e].splice(i,1)},this.dispatchEvent=function(e){var t=n[e.type];if(void 0!==t){e.target=this;for(var i=0,r=t.length;i<r;i++)t[i].call(this,e)}}},function(m){m.Raycaster=function(e,t,i,r){this.ray=new m.Ray(e,t),0<this.ray.direction.lengthSq()&&this.ray.direction.normalize(),this.near=i||0,this.far=r||1/0};function o(e,t){return e.distance-t.distance}function a(e,t,i){if(e instanceof m.Particle){if(R.getPositionFromMatrix(e.matrixWorld),(t=t.ray.distanceToPoint(R))>e.scale.x)return i;i.push({distance:t,point:e.position,face:null,object:e})}else if(e instanceof m.Mesh){if(R.getPositionFromMatrix(e.matrixWorld),g.set(R,e.geometry.boundingSphere.radius*e.matrixWorld.getMaxScaleOnAxis()),!t.ray.isIntersectionSphere(g))return i;var r,n,o,a=e.geometry,s=a.vertices,h=e.material instanceof m.MeshFaceMaterial,l=!0==h?e.material.materials:null,c=e.material.side,p=t.precision;e.matrixRotationWorld.extractRotation(e.matrixWorld),x.getInverse(e.matrixWorld),T.copy(t.ray).applyMatrix4(x);for(var u=0,f=a.faces.length;u<f;u++){var d=a.faces[u];if(void 0!==(c=!0==h?l[d.materialIndex]:e.material)){v.setFromNormalAndCoplanarPoint(d.normal,s[d.a]);var E=T.distanceToPlane(v);if(!(Math.abs(E)<p||E<0)){if((c=c.side)!==m.DoubleSide&&(r=T.direction.dot(v.normal),!(c===m.FrontSide?r<0:0<r)))continue;if(!(E<t.near||E>t.far)){if(y=T.at(E,y),d instanceof m.Face3){if(c=s[d.a],r=s[d.b],n=s[d.c],!m.Triangle.containsPoint(y,c,r,n))continue}else{if(!(d instanceof m.Face4))throw Error("face type not supported");if(c=s[d.a],r=s[d.b],n=s[d.c],o=s[d.d],!m.Triangle.containsPoint(y,c,r,o)&&!m.Triangle.containsPoint(y,r,n,o))continue}i.push({distance:E,point:t.ray.at(E),face:d,faceIndex:u,object:e})}}}}}}function s(e,t,i){for(var r=0,n=(e=e.getDescendants()).length;r<n;r++)a(e[r],t,i)}var g=new m.Sphere,T=new m.Ray,v=new m.Plane,y=new m.Vector3,R=new m.Vector3,x=new m.Matrix4;m.Raycaster.prototype.precision=1e-4,m.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),0<this.ray.direction.length()&&this.ray.direction.normalize()},m.Raycaster.prototype.intersectObject=function(e,t){var i=[];return!0===t&&s(e,this,i),a(e,this,i),i.sort(o),i},m.Raycaster.prototype.intersectObjects=function(e,t){for(var i=[],r=0,n=e.length;r<n;r++)a(e[r],this,i),!0===t&&s(e[r],this,i);return i.sort(o),i}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),e=(new THREE.Matrix4).extractRotation(this.matrix),this.rotation.setEulerFromRotationMatrix(e,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;t<i;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var i=0,r=this.children.length;i<r;i++){var n=this.children[i];if(n.name===e||!0===t&&void 0!==(n=n.getChildByName(e,t)))return n}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;t<i;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),1===this.scale.x&&1===this.scale.y&&1===this.scale.z||this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e=!(this.matrixWorldNeedsUpdate=!1));for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++)e.add(this.children[t].clone());return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function A(){if(D!==i)return t[D++];var e=new THREE.RenderableObject;return t.push(e),i++,D++,e}function C(){if(U!==r)return W[U++];var e=new THREE.RenderableVertex;return W.push(e),r++,U++,e}function P(e,t){return t.z-e.z}var L,D,F,U,z,V,N,B,I,O,G,k,t=[],i=0,W=[],r=0,j=[],X=0,Y=[],q=0,K=[],Q=0,Z=[],J=0,$={objects:[],sprites:[],lights:[],elements:[]},ee=new THREE.Vector3,te=new THREE.Vector4,ie=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),re=new THREE.Box3,ne=Array(3),oe=Array(4),ae=new THREE.Matrix4,se=new THREE.Matrix4,he=new THREE.Matrix4,le=new THREE.Matrix3,ce=new THREE.Matrix3,pe=new THREE.Vector3,ue=new THREE.Frustum,fe=new THREE.Vector4,de=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),se.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(se)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),se.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(se)},this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)},this.projectScene=function(e,t,i,r){var n,o,a,s,h,l,c,p,u,f,d,E,m,g=!1;G=I=N=V=0,$.elements.length=0,e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),ae.copy(t.matrixWorldInverse.getInverse(t.matrixWorld)),se.multiplyMatrices(t.projectionMatrix,ae),ce.getInverse(ae),ce.transpose(),ue.setFromMatrix(se),D=0,$.objects.length=0,$.sprites.length=0,$.lights.length=0;var T,v,y,R,x,H,w,_,b=function(e){for(var t=0,i=e.children.length;t<i;t++){var r=e.children[t];!1!==r.visible&&(r instanceof THREE.Light?$.lights.push(r):r instanceof THREE.Mesh||r instanceof THREE.Line?!1!==r.frustumCulled&&!0!==ue.intersectsObject(r)||(null!==((L=A()).object=r).renderDepth?L.z=r.renderDepth:(ee.getPositionFromMatrix(r.matrixWorld),ee.applyProjection(se),L.z=ee.z),$.objects.push(L)):r instanceof THREE.Sprite||r instanceof THREE.Particle?(null!==((L=A()).object=r).renderDepth?L.z=r.renderDepth:(ee.getPositionFromMatrix(r.matrixWorld),ee.applyProjection(se),L.z=ee.z),$.sprites.push(L)):(null!==((L=A()).object=r).renderDepth?L.z=r.renderDepth:(ee.getPositionFromMatrix(r.matrixWorld),ee.applyProjection(se),L.z=ee.z),$.objects.push(L)),b(r))}};for(b(e),!0===i&&$.objects.sort(P),e=0,i=$.objects.length;e<i;e++)if(p=$.objects[e].object,k=p.matrixWorld,U=0,p instanceof THREE.Mesh){for(a=(u=p.geometry).vertices,f=u.faces,u=u.faceVertexUvs,le.getInverse(k),le.transpose(),m=!0==(E=p.material instanceof THREE.MeshFaceMaterial)?p.material:null,n=0,o=a.length;n<o;n++)(F=C()).positionWorld.copy(a[n]).applyMatrix4(k),F.positionScreen.copy(F.positionWorld).applyMatrix4(se),F.positionScreen.x/=F.positionScreen.w,F.positionScreen.y/=F.positionScreen.w,F.positionScreen.z/=F.positionScreen.w,F.visible=!(F.positionScreen.x<-1||1<F.positionScreen.x||F.positionScreen.y<-1||1<F.positionScreen.y||F.positionScreen.z<-1||1<F.positionScreen.z);for(a=0,n=f.length;a<n;a++){o=f[a];var S,M=!0==E?m.materials[o.materialIndex]:p.material;if(void 0!==M){if(l=M.side,o instanceof THREE.Face3){if(s=W[o.a],h=W[o.b],c=W[o.c],ne[0]=s.positionScreen,ne[1]=h.positionScreen,ne[2]=c.positionScreen,!0!==s.visible&&!0!==h.visible&&!0!==c.visible&&!ie.isIntersectionBox(re.setFromPoints(ne)))continue;if(g=(c.positionScreen.x-s.positionScreen.x)*(h.positionScreen.y-s.positionScreen.y)-(c.positionScreen.y-s.positionScreen.y)*(h.positionScreen.x-s.positionScreen.x)<0,l!==THREE.DoubleSide&&g!==(l===THREE.FrontSide))continue;(z=V===X?(d=new THREE.RenderableFace3,j.push(d),X++,V++,d):j[V++]).v1.copy(s),z.v2.copy(h),z.v3.copy(c)}else if(o instanceof THREE.Face4){if(s=W[o.a],h=W[o.b],c=W[o.c],d=W[o.d],oe[0]=s.positionScreen,oe[1]=h.positionScreen,oe[2]=c.positionScreen,oe[3]=d.positionScreen,!0!==s.visible&&!0!==h.visible&&!0!==c.visible&&!0!==d.visible&&!ie.isIntersectionBox(re.setFromPoints(oe)))continue;if(g=(d.positionScreen.x-s.positionScreen.x)*(h.positionScreen.y-s.positionScreen.y)-(d.positionScreen.y-s.positionScreen.y)*(h.positionScreen.x-s.positionScreen.x)<0||(h.positionScreen.x-c.positionScreen.x)*(d.positionScreen.y-c.positionScreen.y)-(h.positionScreen.y-c.positionScreen.y)*(d.positionScreen.x-c.positionScreen.x)<0,l!==THREE.DoubleSide&&g!==(l===THREE.FrontSide))continue;(z=N===q?(S=new THREE.RenderableFace4,Y.push(S),q++,N++,S):Y[N++]).v1.copy(s),z.v2.copy(h),z.v3.copy(c),z.v4.copy(d)}for(z.normalModel.copy(o.normal),!1!==g||l!==THREE.BackSide&&l!==THREE.DoubleSide||z.normalModel.negate(),z.normalModel.applyMatrix3(le).normalize(),z.normalModelView.copy(z.normalModel).applyMatrix3(ce),z.centroidModel.copy(o.centroid).applyMatrix4(k),s=0,h=(c=o.vertexNormals).length;s<h;s++)(d=z.vertexNormalsModel[s]).copy(c[s]),!1!==g||l!==THREE.BackSide&&l!==THREE.DoubleSide||d.negate(),d.applyMatrix3(le).normalize(),z.vertexNormalsModelView[s].copy(d).applyMatrix3(ce);for(z.vertexNormalsLength=c.length,s=0,h=u.length;s<h;s++)if(void 0!==(d=u[s][a]))for(l=0,c=d.length;l<c;l++)z.uvs[s][l]=d[l];z.color=o.color,z.material=M,pe.copy(z.centroidModel).applyProjection(se),z.z=pe.z,$.elements.push(z)}}}else if(p instanceof THREE.Line)for(he.multiplyMatrices(se,k),a=p.geometry.vertices,(s=C()).positionScreen.copy(a[0]).applyMatrix4(he),f=p.type===THREE.LinePieces?2:1,n=1,o=a.length;n<o;n++)(s=C()).positionScreen.copy(a[n]).applyMatrix4(he),0<(n+1)%f||(h=W[U-2],fe.copy(s.positionScreen),de.copy(h.positionScreen),!0==(v=de,R=y=void 0,y=0,R=1,x=(T=fe).z+T.w,H=v.z+v.w,w=-T.z+T.w,_=-v.z+v.w,0<=x&&0<=H&&0<=w&&0<=_||!(x<0&&H<0||w<0&&_<0)&&(x<0?y=Math.max(y,x/(x-H)):H<0&&(R=Math.min(R,x/(x-H))),w<0?y=Math.max(y,w/(w-_)):_<0&&(R=Math.min(R,w/(w-_))),!(R<y||(T.lerp(v,y),v.lerp(T,1-R),0))))&&(fe.multiplyScalar(1/fe.w),de.multiplyScalar(1/de.w),(B=I===Q?(u=new THREE.RenderableLine,K.push(u),Q++,I++,u):K[I++]).v1.positionScreen.copy(fe),B.v2.positionScreen.copy(de),B.z=Math.max(fe.z,de.z),B.material=p.material,$.elements.push(B)));for(e=0,i=$.sprites.length;e<i;e++)p=$.sprites[e].object,k=p.matrixWorld,p instanceof THREE.Particle&&(te.set(k.elements[12],k.elements[13],k.elements[14],1),te.applyMatrix4(se),te.z/=te.w,0<te.z&&te.z<1&&((O=G===J?(g=new THREE.RenderableParticle,Z.push(g),J++,G++,g):Z[G++]).object=p,O.x=te.x/te.w,O.y=te.y/te.w,O.z=te.z,O.rotation=p.rotation.z,O.scale.x=p.scale.x*Math.abs(O.x-(te.x+t.projectionMatrix.elements[0])/(te.w+t.projectionMatrix.elements[12])),O.scale.y=p.scale.y*Math.abs(O.y-(te.y+t.projectionMatrix.elements[5])/(te.w+t.projectionMatrix.elements[13])),O.material=p.material,$.elements.push(O)));return!0===r&&$.elements.sort(P),$}},THREE.Face3=function(e,t,i,r,n,o){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e,t,i=new THREE.Face3(this.a,this.b,this.c);for(i.normal.copy(this.normal),i.color.copy(this.color),i.centroid.copy(this.centroid),i.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)i.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)i.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)i.vertexTangents[e]=this.vertexTangents[e].clone();return i}},THREE.Face4=function(e,t,i,r,n,o,a){this.a=e,this.b=t,this.c=i,this.d=r,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e,t,i=new THREE.Face4(this.a,this.b,this.c,this.d);for(i.normal.copy(this.normal),i.color.copy(this.color),i.centroid.copy(this.centroid),i.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)i.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)i.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)i.vertexTangents[e]=this.vertexTangents[e].clone();return i}},THREE.Geometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getInverse(e).transpose(),i=0,r=this.vertices.length;i<r;i++)this.vertices[i].applyMatrix4(e);for(i=0,r=this.faces.length;i<r;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(t).normalize();n.centroid.applyMatrix4(e)}},computeCentroids:function(){for(var e,t=0,i=this.faces.length;t<i;t++)(e=this.faces[t]).centroid.set(0,0,0),e instanceof THREE.Face3?(e.centroid.add(this.vertices[e.a]),e.centroid.add(this.vertices[e.b]),e.centroid.add(this.vertices[e.c]),e.centroid.divideScalar(3)):e instanceof THREE.Face4&&(e.centroid.add(this.vertices[e.a]),e.centroid.add(this.vertices[e.b]),e.centroid.add(this.vertices[e.c]),e.centroid.add(this.vertices[e.d]),e.centroid.divideScalar(4))},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,i=0,r=this.faces.length;i<r;i++){var n=this.faces[i],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,i;if(void 0===this.__tmpVertices){for(i=this.__tmpVertices=Array(this.vertices.length),p=0,u=this.vertices.length;p<u;p++)i[p]=new THREE.Vector3;for(p=0,u=this.faces.length;p<u;p++)(t=this.faces[p])instanceof THREE.Face3?t.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:t instanceof THREE.Face4&&(t.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(i=this.__tmpVertices,p=0,u=this.vertices.length;p<u;p++)i[p].set(0,0,0);if(e)for(var r,n,o,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,p=0,u=this.faces.length;p<u;p++)(t=this.faces[p])instanceof THREE.Face3?(e=this.vertices[t.a],r=this.vertices[t.b],n=this.vertices[t.c],a.subVectors(n,r),s.subVectors(e,r),a.cross(s),i[t.a].add(a),i[t.b].add(a),i[t.c].add(a)):t instanceof THREE.Face4&&(e=this.vertices[t.a],r=this.vertices[t.b],n=this.vertices[t.c],o=this.vertices[t.d],h.subVectors(o,r),s.subVectors(e,r),h.cross(s),i[t.a].add(h),i[t.b].add(h),i[t.d].add(h),l.subVectors(o,n),c.subVectors(r,n),l.cross(c),i[t.b].add(l),i[t.c].add(l),i[t.d].add(l));else for(p=0,u=this.faces.length;p<u;p++)(t=this.faces[p])instanceof THREE.Face3?(i[t.a].add(t.normal),i[t.b].add(t.normal),i[t.c].add(t.normal)):t instanceof THREE.Face4&&(i[t.a].add(t.normal),i[t.b].add(t.normal),i[t.c].add(t.normal),i[t.d].add(t.normal));for(p=0,u=this.vertices.length;p<u;p++)i[p].normalize();for(p=0,u=this.faces.length;p<u;p++)(t=this.faces[p])instanceof THREE.Face3?(t.vertexNormals[0].copy(i[t.a]),t.vertexNormals[1].copy(i[t.b]),t.vertexNormals[2].copy(i[t.c])):t instanceof THREE.Face4&&(t.vertexNormals[0].copy(i[t.a]),t.vertexNormals[1].copy(i[t.b]),t.vertexNormals[2].copy(i[t.c]),t.vertexNormals[3].copy(i[t.d]))},computeMorphNormals:function(){var e,t,i;for(h=0,l=this.faces.length;h<l;h++)for((i=this.faces[h]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var r=new THREE.Geometry;for(r.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];for(var n,o,a=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals,h=0,l=this.faces.length;h<l;h++)i=this.faces[h],n=new THREE.Vector3,o=i instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},a.push(n),s.push(o)}for(a=this.morphNormals[e],r.vertices=this.morphTargets[e].vertices,r.computeFaceNormals(),r.computeVertexNormals(),h=0,l=this.faces.length;h<l;h++)i=this.faces[h],n=a.faceNormals[h],o=a.vertexNormals[h],n.copy(i.normal),i instanceof THREE.Face3?(o.a.copy(i.vertexNormals[0]),o.b.copy(i.vertexNormals[1]),o.c.copy(i.vertexNormals[2])):(o.a.copy(i.vertexNormals[0]),o.b.copy(i.vertexNormals[1]),o.c.copy(i.vertexNormals[2]),o.d.copy(i.vertexNormals[3]))}for(h=0,l=this.faces.length;h<l;h++)(i=this.faces[h]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){function e(e,t,i,r,n,o,a){h=e.vertices[t],l=e.vertices[i],c=e.vertices[r],p=s[n],u=s[o],f=s[a],d=l.x-h.x,E=c.x-h.x,m=l.y-h.y,g=c.y-h.y,T=l.z-h.z,v=c.z-h.z,y=u.x-p.x,R=f.x-p.x,x=u.y-p.y,H=f.y-p.y,w=1/(y*H-R*x),S.set((H*d-x*E)*w,(H*m-x*g)*w,(H*T-x*v)*w),M.set((y*E-R*d)*w,(y*g-R*m)*w,(y*v-R*T)*w),_[t].add(S),_[i].add(S),_[r].add(S),b[t].add(M),b[i].add(M),b[r].add(M)}for(var t,i,r,s,h,l,c,p,u,f,d,E,m,g,T,v,y,R,x,H,w,n,_=[],b=[],S=new THREE.Vector3,M=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3,A=new THREE.Vector3,C=0,P=this.vertices.length;C<P;C++)_[C]=new THREE.Vector3,b[C]=new THREE.Vector3;for(C=0,P=this.faces.length;C<P;C++)r=this.faces[C],s=this.faceVertexUvs[0][C],r instanceof THREE.Face3?e(this,r.a,r.b,r.c,0,1,2):r instanceof THREE.Face4&&(e(this,r.a,r.b,r.d,0,1,3),e(this,r.b,r.c,r.d,1,2,3));var L=["a","b","c","d"];for(C=0,P=this.faces.length;C<P;C++)for(r=this.faces[C],t=0;t<r.vertexNormals.length;t++)A.copy(r.vertexNormals[t]),i=r[L[t]],n=_[i],o.copy(n),o.sub(A.multiplyScalar(A.dot(n))).normalize(),a.crossVectors(r.vertexNormals[t],n),i=(i=a.dot(b[i]))<0?-1:1,r.vertexTangents[t]=new THREE.Vector4(o.x,o.y,o.z,i);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;i<r;i++)0<i&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e,t,i,r,n={},o=[],a=[],s=Math.pow(10,4);for(this.__tmpVertices=void 0,t=0,i=this.vertices.length;t<i;t++)e=this.vertices[t],void 0===n[e=[Math.round(e.x*s),Math.round(e.y*s),Math.round(e.z*s)].join("_")]?(n[e]=t,o.push(this.vertices[t]),a[t]=o.length-1):a[t]=a[n[e]];for(s=[],t=0,i=this.faces.length;t<i;t++)if((n=this.faces[t])instanceof THREE.Face3){for(n.a=a[n.a],n.b=a[n.b],n.c=a[n.c],l=[n.a,n.b,n.c],e=-1,c=0;c<3;c++)if(l[c]==l[(c+1)%3]){s.push(t);break}}else if(n instanceof THREE.Face4){for(n.a=a[n.a],n.b=a[n.b],n.c=a[n.c],n.d=a[n.d],l=[n.a,n.b,n.c,n.d],e=-1,c=0;c<4;c++)l[c]==l[(c+1)%4]&&(0<=e&&s.push(t),e=c);if(0<=e){l.splice(e,1);for(var h=new THREE.Face3(l[0],l[1],l[2],n.normal,n.color,n.materialIndex),l=0,c=this.faceVertexUvs.length;l<c;l++)(r=this.faceVertexUvs[l][t])&&r.splice(e,1);n.vertexNormals&&0<n.vertexNormals.length&&(h.vertexNormals=n.vertexNormals,h.vertexNormals.splice(e,1)),n.vertexColors&&0<n.vertexColors.length&&(h.vertexColors=n.vertexColors,h.vertexColors.splice(e,1)),this.faces[t]=h}}for(t=s.length-1;0<=t;t--)for(this.faces.splice(t,1),l=0,c=this.faceVertexUvs.length;l<c;l++)this.faceVertexUvs[l].splice(t,1);return a=this.vertices.length-o.length,this.vertices=o,a},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,i=0,r=t.length;i<r;i++)e.vertices.push(t[i].clone());for(i=0,r=(t=this.faces).length;i<r;i++)e.faces.push(t[i].clone());for(i=0,r=(t=this.faceVertexUvs[0]).length;i<r;i++){for(var n=t[i],o=[],a=0,s=n.length;a<s;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,i;this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(i=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==i&&((t=new THREE.Matrix3).getInverse(e).transpose(),t.multiplyVector3Array(i),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,i,r,n=this.boundingBox;3<=e.length&&(n.min.x=n.max.x=e[0],n.min.y=n.max.y=e[1],n.min.z=n.max.z=e[2]);for(var o=3,a=e.length;o<a;o+=3)t=e[o],i=e[o+1],r=e[o+2],t<n.min.x?n.min.x=t:t>n.max.x&&(n.max.x=t),i<n.min.y?n.min.y=i:i>n.max.y&&(n.max.y=i),r<n.min.z?n.min.z=r:r>n.max.z&&(n.max.z=r)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,i,r,n=0,o=0,a=e.length;o<a;o+=3)n<(t=(t=e[o])*t+(i=e[o+1])*i+(r=e[o+2])*r)&&(n=t);this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position){var e;if(v=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(v),numItems:v};else for(v=0,e=this.attributes.normal.array.length;v<e;v++)this.attributes.normal.array[v]=0;var t,i,r,n,o,a,s=this.attributes.position.array,h=this.attributes.normal.array,l=new THREE.Vector3,c=new THREE.Vector3,p=new THREE.Vector3,u=new THREE.Vector3,f=new THREE.Vector3;if(this.attributes.index)for(var d=this.attributes.index.array,E=this.offsets,m=0,g=E.length;m<g;++m){e=E[m].start,t=E[m].count;var T=E[m].index,v=e;for(e+=t;v<e;v+=3)t=T+d[v],i=T+d[v+1],r=T+d[v+2],n=s[3*t],o=s[3*t+1],a=s[3*t+2],l.set(n,o,a),n=s[3*i],o=s[3*i+1],a=s[3*i+2],c.set(n,o,a),n=s[3*r],o=s[3*r+1],a=s[3*r+2],p.set(n,o,a),u.subVectors(p,c),f.subVectors(l,c),u.cross(f),h[3*t]+=u.x,h[3*t+1]+=u.y,h[3*t+2]+=u.z,h[3*i]+=u.x,h[3*i+1]+=u.y,h[3*i+2]+=u.z,h[3*r]+=u.x,h[3*r+1]+=u.y,h[3*r+2]+=u.z}else for(v=0,e=s.length;v<e;v+=9)n=s[v],o=s[v+1],a=s[v+2],l.set(n,o,a),n=s[v+3],o=s[v+4],a=s[v+5],c.set(n,o,a),n=s[v+6],o=s[v+7],a=s[v+8],p.set(n,o,a),u.subVectors(p,c),f.subVectors(l,c),u.cross(f),h[v]=u.x,h[v+1]=u.y,h[v+2]=u.z,h[v+3]=u.x,h[v+4]=u.y,h[v+5]=u.z,h[v+6]=u.x,h[v+7]=u.y,h[v+8]=u.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,i,r=this.attributes.normal.array,n=0,o=r.length;n<o;n+=3)e=r[n],t=r[n+1],i=r[n+2],e=1/Math.sqrt(e*e+t*t+i*i),r[n]*=e,r[n+1]*=e,r[n+2]*=e},computeTangents:function(){function e(e){B.x=r[3*e],B.y=r[3*e+1],B.z=r[3*e+2],I.copy(B),U=s[e],V.copy(U),V.sub(B.multiplyScalar(B.dot(U))).normalize(),N.crossVectors(I,U),z=N.dot(h[e]),F=z<0?-1:1,a[4*e]=V.x,a[4*e+1]=V.y,a[4*e+2]=V.z,a[4*e+3]=F}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,i=this.attributes.position.array,r=this.attributes.normal.array,n=this.attributes.uv.array,o=i.length/3;void 0===this.attributes.tangent&&(l=4*o,this.attributes.tangent={itemSize:4,array:new Float32Array(l),numItems:l});for(var a=this.attributes.tangent.array,s=[],h=[],l=0;l<o;l++)s[l]=new THREE.Vector3,h[l]=new THREE.Vector3;for(var c,p,u,f,d,E,m,g,T,v,y,R,x,H,w,_,b,S,M,o=new THREE.Vector3,l=new THREE.Vector3,A=this.offsets,C=0,P=A.length;C<P;++C){_=A[C].start,b=A[C].count;var L=A[C].index,D=_;for(_+=b;D<_;D+=3)b=L+t[D],S=L+t[D+1],M=L+t[D+2],c=i[3*b],p=i[3*b+1],u=i[3*b+2],f=i[3*S],d=i[3*S+1],E=i[3*S+2],m=i[3*M],g=i[3*M+1],T=i[3*M+2],v=n[2*b],y=n[2*b+1],R=n[2*S],x=n[2*S+1],H=n[2*M],f-=c,c=m-c,d-=p,p=g-p,E-=u,u=T-u,x-=y,w=1/((R-=v)*(y=(w=n[2*M+1])-y)-(v=H-v)*x),o.set((y*f-x*c)*w,(y*d-x*p)*w,(y*E-x*u)*w),l.set((R*c-v*f)*w,(R*p-v*d)*w,(R*u-v*E)*w),s[b].add(o),s[S].add(o),s[M].add(o),h[b].add(l),h[S].add(l),h[M].add(l)}var F,U,z,V=new THREE.Vector3,N=new THREE.Vector3,B=new THREE.Vector3,I=new THREE.Vector3;for(C=0,P=A.length;C<P;++C)for(_=A[C].start,b=A[C].count,L=A[C].index,D=_,_+=b;D<_;D+=3)b=L+t[D],S=L+t[D+1],M=L+t[D+2],e(b),e(S),e(M);this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,i,r,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,o){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e,t,i,r;this.fullWidth?(t=(i=this.fullWidth/this.fullHeight)*(r=-(e=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near)),i=Math.abs(i*e-t),r=Math.abs(e-r),this.projectionMatrix.makeFrustum(t+this.x*i/this.fullWidth,t+(this.x+this.width)*i/this.fullWidth,e-(this.y+this.height)*r/this.fullHeight,e-this.y*r/this.fullHeight,this.near,this.far)):this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,i){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==i?i:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,i,r,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return(e=e.split("/")).pop(),(e.length<1?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var i=[],r=0;r<e.length;++r)i[r]=THREE.Loader.prototype.createMaterial(e[r],t);return i},needsTangents:function(e){for(var t=0,i=e.length;t<i;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,p){function u(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function f(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function t(e,t,i,r,n,o,a){var s,h,l=/\.dds$/i.test(i),c=p+"/"+i;l?(s=THREE.ImageUtils.loadCompressedTexture(c),e[t]=s):(s=document.createElement("canvas"),e[t]=new THREE.Texture(s)),e[t].sourceFile=i,r&&(e[t].repeat.set(r[0],r[1]),1!==r[0]&&(e[t].wrapS=THREE.RepeatWrapping),1!==r[1]&&(e[t].wrapT=THREE.RepeatWrapping)),n&&e[t].offset.set(n[0],n[1]),o&&(void 0!==(i={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[o[0]]&&(e[t].wrapS=i[o[0]]),void 0!==i[o[1]]&&(e[t].wrapT=i[o[1]])),a&&(e[t].anisotropy=a),l||(h=e[t],(e=new Image).onload=function(){var e,t;u(this.width)&&u(this.height)?h.image=this:(e=f(this.width),t=f(this.height),h.image.width=e,h.image.height=t,h.image.getContext("2d").drawImage(this,0,0,e,t)),h.needsUpdate=!0},e.crossOrigin=d.crossOrigin,e.src=c)}function i(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var r,d=this,n="MeshLambertMaterial",o={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};return e.shading&&("phong"===(r=e.shading.toLowerCase())?n="MeshPhongMaterial":"basic"===r&&(n="MeshBasicMaterial")),void 0!==e.blending&&void 0!==THREE[e.blending]&&(o.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(o.transparent=e.transparent),void 0!==e.depthTest&&(o.depthTest=e.depthTest),void 0!==e.depthWrite&&(o.depthWrite=e.depthWrite),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.flipSided&&(o.side=THREE.BackSide),void 0!==e.doubleSided&&(o.side=THREE.DoubleSide),void 0!==e.wireframe&&(o.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?o.vertexColors=THREE.FaceColors:e.vertexColors&&(o.vertexColors=THREE.VertexColors)),e.colorDiffuse?o.color=i(e.colorDiffuse):e.DbgColor&&(o.color=e.DbgColor),e.colorSpecular&&(o.specular=i(e.colorSpecular)),e.colorAmbient&&(o.ambient=i(e.colorAmbient)),e.transparency&&(o.opacity=e.transparency),e.specularCoef&&(o.shininess=e.specularCoef),e.mapDiffuse&&p&&t(o,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&p&&t(o,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&p&&t(o,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&p&&t(o,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&p&&t(o,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(o.bumpScale=e.mapBumpScale),e.mapNormal?(n=THREE.ShaderLib.normalmap,(r=THREE.UniformsUtils.clone(n.uniforms)).tNormal.value=o.normalMap,e.mapNormalFactor&&r.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),o.map&&(r.tDiffuse.value=o.map,r.enableDiffuse.value=!0),o.specularMap&&(r.tSpecular.value=o.specularMap,r.enableSpecular.value=!0),o.lightMap&&(r.tAO.value=o.lightMap,r.enableAO.value=!0),r.uDiffuseColor.value.setHex(o.color),r.uSpecularColor.value.setHex(o.specular),r.uAmbientColor.value.setHex(o.ambient),r.uShininess.value=o.shininess,void 0!==o.opacity&&(r.uOpacity.value=o.opacity),n=new THREE.ShaderMaterial({fragmentShader:n.fragmentShader,vertexShader:n.vertexShader,uniforms:r,lights:!0,fog:!0}),o.transparent&&(n.transparent=!0)):n=new THREE[n](o),void 0!==e.DbgName&&(n.name=e.DbgName),n}},THREE.ImageLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var i=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){i.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){i.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),i.crossOrigin&&(t.crossOrigin=i.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(t,i,r,n,o){var a=new XMLHttpRequest,s=0;a.onreadystatechange=function(){var e;a.readyState===a.DONE?200===a.status||0===a.status?(a.responseText?(e=JSON.parse(a.responseText),t.createModel(e,r,n)):console.warn("THREE.JSONLoader: ["+i+"] seems to be unreachable or file there is empty"),t.onLoadComplete()):console.error("THREE.JSONLoader: Couldn't load ["+i+"] ["+a.status+"]"):a.readyState===a.LOADING?o&&(0===s&&(s=a.getResponseHeader("Content-Length")),o({total:s,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&(s=a.getResponseHeader("Content-Length"))},a.open("GET",i,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,i){for(var r,n,o,a,s,h,l,c,p,u,f,d,E,m=new THREE.Geometry,g=void 0!==e.scale?1/e.scale:1,T=e.faces,v=e.vertices,y=e.normals,R=e.colors,x=0,H=0;H<e.uvs.length;H++)e.uvs[H].length&&x++;for(H=0;H<x;H++)m.faceUvs[H]=[],m.faceVertexUvs[H]=[];for(o=0,a=v.length;o<a;)(s=new THREE.Vector3).x=v[o++]*g,s.y=v[o++]*g,s.z=v[o++]*g,m.vertices.push(s);for(o=0,a=T.length;o<a;){if(s=1&(v=T[o++]),n=2&v,H=4&v,r=8&v,l=16&v,h=32&v,p=64&v,v&=128,s=s?((u=new THREE.Face4).a=T[o++],u.b=T[o++],u.c=T[o++],u.d=T[o++],4):((u=new THREE.Face3).a=T[o++],u.b=T[o++],u.c=T[o++],3),n&&(n=T[o++],u.materialIndex=n),n=m.faces.length,H)for(H=0;H<x;H++)E=(f=e.uvs[H])[2*(c=T[o++])],c=f[2*c+1],m.faceUvs[H][n]=new THREE.Vector2(E,c);if(r)for(H=0;H<x;H++){for(f=e.uvs[H],d=[],r=0;r<s;r++)E=f[2*(c=T[o++])],c=f[2*c+1],d[r]=new THREE.Vector2(E,c);m.faceVertexUvs[H][n]=d}if(l&&(l=3*T[o++],(r=new THREE.Vector3).x=y[l++],r.y=y[l++],r.z=y[l],u.normal=r),h)for(H=0;H<s;H++)l=3*T[o++],(r=new THREE.Vector3).x=y[l++],r.y=y[l++],r.z=y[l],u.vertexNormals.push(r);if(p&&(h=T[o++],h=new THREE.Color(R[h]),u.color=h),v)for(H=0;H<s;H++)h=T[o++],h=new THREE.Color(R[h]),u.vertexColors.push(h);m.faces.push(u)}if(e.skinWeights)for(o=0,a=e.skinWeights.length;o<a;o+=2)T=e.skinWeights[o],y=e.skinWeights[o+1],m.skinWeights.push(new THREE.Vector4(T,y,0,0));if(e.skinIndices)for(o=0,a=e.skinIndices.length;o<a;o+=2)T=e.skinIndices[o],y=e.skinIndices[o+1],m.skinIndices.push(new THREE.Vector4(T,y,0,0));if(m.bones=e.bones,m.animation=e.animation,void 0!==e.morphTargets)for(o=0,a=e.morphTargets.length;o<a;o++)for(m.morphTargets[o]={},m.morphTargets[o].name=e.morphTargets[o].name,m.morphTargets[o].vertices=[],R=m.morphTargets[o].vertices,T=0,y=(x=e.morphTargets[o].vertices).length;T<y;T+=3)(v=new THREE.Vector3).x=x[T]*g,v.y=x[T+1]*g,v.z=x[T+2]*g,R.push(v);if(void 0!==e.morphColors)for(o=0,a=e.morphColors.length;o<a;o++)for(m.morphColors[o]={},m.morphColors[o].name=e.morphColors[o].name,m.morphColors[o].colors=[],y=m.morphColors[o].colors,g=0,T=(R=e.morphColors[o].colors).length;g<T;g+=3)(x=new THREE.Color(16755200)).setRGB(R[g],R[g+1],R[g+2]),y.push(x);m.computeCentroids(),m.computeFaceNormals(),e=this.initMaterials(e.materials,i),this.needsTangents(e)&&m.computeTangents(),t(m,e)},THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);function t(){i++,e.dispatchEvent({type:"progress",loaded:i,total:r}),i===r&&e.dispatchEvent({type:"load"})}var e=this,i=0,r=0;this.add=function(e){r++,e.addEventListener("load",t,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(t,i){var r=this,n=new XMLHttpRequest;n.onreadystatechange=function(){var e;4===n.readyState&&(200===n.status||0===n.status?(e=JSON.parse(n.responseText),r.parse(e,i,t)):console.error("THREE.SceneLoader: Couldn't load ["+t+"] ["+n.status+"]"))},n.open("GET",t,!0),n.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,r,t){function d(e,t){return"relativeToHTML"==t?e:w+"/"+e}function c(){!function e(t,i){var r,n,o,a,s,h,l;for(l in i)if(void 0===x.objects[l]){var c=i[l],p=null;if(c.type&&c.type in H.hierarchyHandlerMap){if(void 0===c.loading){for(var u in n={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},o={},c)u in n||(o[u]=c[u]);g=x.materials[c.material],c.loading=!0,(n=H.hierarchyHandlerMap[c.type].loaderObject).options?n.load(d(c.url,b.urlBaseType),E(l,t,g,c)):n.load(d(c.url,b.urlBaseType),E(l,t,g,c),o)}}else if(void 0!==c.geometry){if(m=x.geometries[c.geometry]){if(p=!1,g=x.materials[c.material],p=g instanceof THREE.ShaderMaterial,o=c.position,a=c.rotation,s=c.scale,r=c.matrix,h=c.quaternion,c.material||(g=new THREE.MeshFaceMaterial(x.face_materials[c.geometry])),g instanceof THREE.MeshFaceMaterial&&0===g.materials.length&&(g=new THREE.MeshFaceMaterial(x.face_materials[c.geometry])),g instanceof THREE.MeshFaceMaterial)for(n=0;n<g.materials.length;n++)p=p||g.materials[n]instanceof THREE.ShaderMaterial;p&&m.computeTangents(),c.skin?p=new THREE.SkinnedMesh(m,g):c.morph?(p=new THREE.MorphAnimMesh(m,g),void 0!==c.duration&&(p.duration=c.duration),void 0!==c.time&&(p.time=c.time),void 0!==c.mirroredLoop&&(p.mirroredLoop=c.mirroredLoop),g.morphNormals&&m.computeMorphNormals()):p=new THREE.Mesh(m,g),p.name=l,r?(p.matrixAutoUpdate=!1,p.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(p.position.set(o[0],o[1],o[2]),h?(p.quaternion.set(h[0],h[1],h[2],h[3]),p.useQuaternion=!0):p.rotation.set(a[0],a[1],a[2]),p.scale.set(s[0],s[1],s[2])),p.visible=c.visible,p.castShadow=c.castShadow,p.receiveShadow=c.receiveShadow,t.add(p),x.objects[l]=p}}else"DirectionalLight"===c.type||"PointLight"===c.type||"AmbientLight"===c.type?(y=void 0!==c.color?c.color:16777215,R=void 0!==c.intensity?c.intensity:1,"DirectionalLight"===c.type?(o=c.direction,(v=new THREE.DirectionalLight(y,R)).position.set(o[0],o[1],o[2]),c.target&&(_.push({object:v,targetName:c.target}),v.target=null)):"PointLight"===c.type?(o=c.position,n=c.distance,(v=new THREE.PointLight(y,R,n)).position.set(o[0],o[1],o[2])):"AmbientLight"===c.type&&(v=new THREE.AmbientLight(y)),t.add(v),v.name=l,x.lights[l]=v,x.objects[l]=v):"PerspectiveCamera"===c.type||"OrthographicCamera"===c.type?("PerspectiveCamera"===c.type?T=new THREE.PerspectiveCamera(c.fov,c.aspect,c.near,c.far):"OrthographicCamera"===c.type&&(T=new THREE.OrthographicCamera(c.left,c.right,c.top,c.bottom,c.near,c.far)),o=c.position,T.position.set(o[0],o[1],o[2]),t.add(T),T.name=l,x.cameras[l]=T,x.objects[l]=T):(o=c.position,a=c.rotation,s=c.scale,h=c.quaternion,(p=new THREE.Object3D).name=l,p.position.set(o[0],o[1],o[2]),h?(p.quaternion.set(h[0],h[1],h[2],h[3]),p.useQuaternion=!0):p.rotation.set(a[0],a[1],a[2]),p.scale.set(s[0],s[1],s[2]),p.visible=void 0!==c.visible&&c.visible,t.add(p),x.objects[l]=p,x.empties[l]=p);if(p){if(void 0!==c.properties)for(var f in c.properties)p.properties[f]=c.properties[f];if(void 0!==c.groups)for(n=0;n<c.groups.length;n++)o=c.groups[n],void 0===x.groups[o]&&(x.groups[o]=[]),x.groups[o].push(l);void 0!==c.children&&e(p,c.children)}}}(x.scene,b.objects)}function E(a,s,h,l){return function(e){var e=e.content?e.content:e.dae?e.scene:e,t=l.position,i=l.rotation,r=l.quaternion,n=l.scale;e.position.set(t[0],t[1],t[2]),r?(e.quaternion.set(r[0],r[1],r[2],r[3]),e.useQuaternion=!0):e.rotation.set(i[0],i[1],i[2]),e.scale.set(n[0],n[1],n[2]),h&&e.traverse(function(e){e.material=h});var o=void 0===l.visible||l.visible;e.traverse(function(e){e.visible=o}),s.add(e),e.name=a,x.objects[a]=e,c(),--u,H.onLoadComplete(),p()}}function p(){if(H.callbackProgress({totalModels:a,totalTextures:s,loadedModels:a-u,loadedTextures:s-o},x),H.onLoadProgress(),0===u&&0===o){for(var e=0;e<_.length;e++){var t=_[e],i=x.objects[t.targetName];i?t.object.target=i:(t.object.target=new THREE.Object3D,x.scene.add(t.object.target)),t.object.target.properties.targetInverse=t.object}r(x)}}var m,g,T,i,n,v,y,R,u,o,a,s,x,h,l,f,H=this,w=THREE.Loader.prototype.extractUrlBase(t),_=[],b=e;for(h in this.geometryHandlerMap)e=this.geometryHandlerMap[h].loaderClass,this.geometryHandlerMap[h].loaderObject=new e;for(h in this.hierarchyHandlerMap)e=this.hierarchyHandlerMap[h].loaderClass,this.hierarchyHandlerMap[h].loaderObject=new e;for(var S in o=u=0,x={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},b.transform&&(h=b.transform.position,e=b.transform.rotation,t=b.transform.scale,h&&x.scene.position.set(h[0],h[1],h[2]),e&&x.scene.rotation.set(e[0],e[1],e[2]),t&&x.scene.scale.set(t[0],t[1],t[2]),h||e||t)&&(x.scene.updateMatrix(),x.scene.updateMatrixWorld()),h=function(e){return function(){o-=e,p(),H.onLoadComplete()}},b.fogs)"linear"===(e=b.fogs[S]).type?i=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(i=new THREE.FogExp2(0,e.density)),e=e.color,i.color.setRGB(e[0],e[1],e[2]),x.fogs[S]=i;for(var M in b.geometries)(i=b.geometries[M]).type in this.geometryHandlerMap&&(u+=1,H.onLoadStart());for(var A in b.objects)(i=b.objects[A]).type&&i.type in this.hierarchyHandlerMap&&(u+=1,H.onLoadStart());for(M in a=u,b.geometries)if("cube"===(i=b.geometries[M]).type)m=new THREE.CubeGeometry(i.width,i.height,i.depth,i.widthSegments,i.heightSegments,i.depthSegments),x.geometries[M]=m;else if("plane"===i.type)m=new THREE.PlaneGeometry(i.width,i.height,i.widthSegments,i.heightSegments),x.geometries[M]=m;else if("sphere"===i.type)m=new THREE.SphereGeometry(i.radius,i.widthSegments,i.heightSegments),x.geometries[M]=m;else if("cylinder"===i.type)m=new THREE.CylinderGeometry(i.topRad,i.botRad,i.height,i.radSegs,i.heightSegs),x.geometries[M]=m;else if("torus"===i.type)m=new THREE.TorusGeometry(i.radius,i.tube,i.segmentsR,i.segmentsT),x.geometries[M]=m;else if("icosahedron"===i.type)m=new THREE.IcosahedronGeometry(i.radius,i.subdivisions),x.geometries[M]=m;else if(i.type in this.geometryHandlerMap){for(n in A={},i)"type"!==n&&"url"!==n&&(A[n]=i[n]);this.geometryHandlerMap[i.type].loaderObject.load(d(i.url,b.urlBaseType),function(i){return function(e,t){x.geometries[i]=e,x.face_materials[i]=t,c(),--u,H.onLoadComplete(),p()}}(M),A)}else"embedded"===i.type&&((A=b.embeds[i.id]).metadata=b.metadata,A&&this.geometryHandlerMap.ascii.loaderObject.createModel(A,function(i){return function(e,t){x.geometries[i]=e,x.face_materials[i]=t}}(M),""));for(var C in b.textures)if((M=b.textures[C]).url instanceof Array)for(o+=M.url.length,n=0;n<M.url.length;n++)H.onLoadStart();else o+=1,H.onLoadStart();for(C in s=o,b.textures){if(void 0!==(M=b.textures[C]).mapping&&void 0!==THREE[M.mapping]&&(M.mapping=new THREE[M.mapping]),M.url instanceof Array){for(A=M.url.length,i=[],n=0;n<A;n++)i[n]=d(M.url[n],b.urlBaseType);n=(n=/\.dds$/i.test(i[0]))?THREE.ImageUtils.loadCompressedTextureCube(i,M.mapping,h(A)):THREE.ImageUtils.loadTextureCube(i,M.mapping,h(A))}else n=/\.dds$/i.test(M.url),A=d(M.url,b.urlBaseType),i=h(1),n=n?THREE.ImageUtils.loadCompressedTexture(A,M.mapping,i):THREE.ImageUtils.loadTexture(A,M.mapping,i),void 0!==THREE[M.minFilter]&&(n.minFilter=THREE[M.minFilter]),void 0!==THREE[M.magFilter]&&(n.magFilter=THREE[M.magFilter]),M.anisotropy&&(n.anisotropy=M.anisotropy),M.repeat&&(n.repeat.set(M.repeat[0],M.repeat[1]),1!==M.repeat[0]&&(n.wrapS=THREE.RepeatWrapping),1!==M.repeat[1]&&(n.wrapT=THREE.RepeatWrapping)),M.offset&&n.offset.set(M.offset[0],M.offset[1]),M.wrap&&(void 0!==(A={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[M.wrap[0]]&&(n.wrapS=A[M.wrap[0]]),void 0!==A[M.wrap[1]]&&(n.wrapT=A[M.wrap[1]]));x.textures[C]=n}for(l in b.materials){for(f in(C=b.materials[l]).parameters)"envMap"===f||"map"===f||"lightMap"===f||"bumpMap"===f?C.parameters[f]=x.textures[C.parameters[f]]:"shading"===f?C.parameters[f]="flat"===C.parameters[f]?THREE.FlatShading:THREE.SmoothShading:"side"===f?C.parameters[f]="double"==C.parameters[f]?THREE.DoubleSide:"back"==C.parameters[f]?THREE.BackSide:THREE.FrontSide:"blending"===f?C.parameters[f]=C.parameters[f]in THREE?THREE[C.parameters[f]]:THREE.NormalBlending:"combine"===f?C.parameters[f]=C.parameters[f]in THREE?THREE[C.parameters[f]]:THREE.MultiplyOperation:"vertexColors"===f?"face"==C.parameters[f]?C.parameters[f]=THREE.FaceColors:C.parameters[f]&&(C.parameters[f]=THREE.VertexColors):"wrapRGB"===f&&(h=C.parameters[f],C.parameters[f]=new THREE.Vector3(h[0],h[1],h[2]));void 0!==C.parameters.opacity&&C.parameters.opacity<1&&(C.parameters.transparent=!0),g=C.parameters.normalMap?(h=THREE.ShaderLib.normalmap,M=THREE.UniformsUtils.clone(h.uniforms),n=C.parameters.color,A=C.parameters.specular,i=C.parameters.ambient,S=C.parameters.shininess,M.tNormal.value=x.textures[C.parameters.normalMap],C.parameters.normalScale&&M.uNormalScale.value.set(C.parameters.normalScale[0],C.parameters.normalScale[1]),C.parameters.map&&(M.tDiffuse.value=C.parameters.map,M.enableDiffuse.value=!0),C.parameters.envMap&&(M.tCube.value=C.parameters.envMap,M.enableReflection.value=!0,M.uReflectivity.value=C.parameters.reflectivity),C.parameters.lightMap&&(M.tAO.value=C.parameters.lightMap,M.enableAO.value=!0),C.parameters.specularMap&&(M.tSpecular.value=x.textures[C.parameters.specularMap],M.enableSpecular.value=!0),C.parameters.displacementMap&&(M.tDisplacement.value=x.textures[C.parameters.displacementMap],M.enableDisplacement.value=!0,M.uDisplacementBias.value=C.parameters.displacementBias,M.uDisplacementScale.value=C.parameters.displacementScale),M.uDiffuseColor.value.setHex(n),M.uSpecularColor.value.setHex(A),M.uAmbientColor.value.setHex(i),M.uShininess.value=S,C.parameters.opacity&&(M.uOpacity.value=C.parameters.opacity),new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:M,lights:!0,fog:!0})):new THREE[C.type](C.parameters),x.materials[l]=g}for(l in b.materials)if((C=b.materials[l]).parameters.materials){for(f=[],n=0;n<C.parameters.materials.length;n++)f.push(x.materials[C.parameters.materials[n]]);x.materials[l].materials=f}c(),x.cameras&&b.defaults.camera&&(x.currentCamera=x.cameras[b.defaults.camera]),x.fogs&&b.defaults.fog&&(x.scene.fog=x.fogs[b.defaults.fog]),H.callbackSync(x),p()},THREE.TextureLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,i=new Image;i.addEventListener("load",function(){var e=new THREE.Texture(i);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),i.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(i.crossOrigin=t.crossOrigin),i.src=e}},THREE.Material=function(){THREE.EventDispatcher.call(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.overdraw=!1,this.needsUpdate=this.visible=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var i,r=e[t];void 0===r?console.warn("THREE.Material: '"+t+"' parameter is undefined."):t in this&&((i=this[t])instanceof THREE.Color&&r instanceof THREE.Color?i.copy(r):i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]=r)}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),void 0===(e=e||{}).depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,i,r,n,o,a,s,h){THREE.EventDispatcher.call(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),t=!(this.matrixWorldNeedsUpdate=!1));for(var i=this.children.length,r=0;r<i;r++)this.children[r].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,i){var r,n,o;if(THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0===i||i,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[],this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)r=(i=this.geometry.bones[e]).pos,n=i.rotq,o=i.scl,(t=this.addBone()).name=i.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(n[0],n[1],n[2],n[3]),t.useQuaternion=!0,void 0!==o?t.scale.set(o[0],o[1],o[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)i=this.geometry.bones[e],t=this.bones[e],-1===i.parent?this.add(t):this.bones[i.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<e?64:64<e?32:16<e?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1);for(var e=0,t=this.children.length;e<t;e++){var i=this.children[e];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}if(null==this.boneInverses)for(this.boneInverses=[],e=0,t=this.bones.length;e<t;e++)(i=new THREE.Matrix4).getInverse(this.bones[e].skinMatrix),this.boneInverses.push(i);for(e=0,t=this.bones.length;e<t;e++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!=i?t.multiplyScalar(i):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;n<o;n++){var a,s=e.morphTargets[n].name.match(r);s&&1<s.length&&(i[s=s[1]]||(i[s]={start:1/0,end:-1/0}),n<(a=i[s]).start&&(a.start=n),n>a.end&&(a.end=n),t=t||s)}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i?(this.setFrameRange(i.start,i.end),this.duration=(i.end-i.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,this.time<0&&(this.time+=this.duration)),(e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1))!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),i=0;i<this.LODs.length&&!(t<this.LODs[i].visibleAtDistance);i++);this.LODs.splice(i,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(1<this.LODs.length){e.matrixWorldInverse.getInverse(e.matrixWorld),e=-((e=e.matrixWorldInverse).elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;t<this.LODs.length&&e>=this.LODs[t].visibleAtDistance;t++)this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0;for(;t<this.LODs.length;t++)this.LODs[t].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),1===this.scale.x&&1===this.scale.y||this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){var t;for(e instanceof THREE.Light?(-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target)):e instanceof THREE.Camera||e instanceof THREE.Bone||-1!==this.__objects.indexOf(e)||(this.__objects.push(e),this.__objectsAdded.push(e),-1!==(t=this.__objectsRemoved.indexOf(e))&&this.__objectsRemoved.splice(t,1)),t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){var t;for(e instanceof THREE.Light?-1!==(t=this.__lights.indexOf(e))&&this.__lights.splice(t,1):e instanceof THREE.Camera||-1!==(t=this.__objects.indexOf(e))&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),-1!==(t=this.__objectsAdded.indexOf(e))&&this.__objectsAdded.splice(t,1)),t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,i){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function w(e){s!==e&&(s=ge.globalAlpha=e)}function _(e){h!==e&&(e===THREE.NormalBlending?ge.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?ge.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(ge.globalCompositeOperation="darker"),h=e)}function b(e){p!==e&&(p=ge.lineWidth=e)}function S(e){u!==e&&(u=ge.lineCap=e)}function M(e){f!==e&&(f=ge.lineJoin=e)}function A(e){l!==e&&(l=ge.strokeStyle=e)}function C(e){c!==e&&(c=ge.fillStyle=e)}function P(e,t){d===e&&E===t||(ge.setLineDash([e,t]),d=e,E=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var L,D,F,i,r,U,z,V,N,B,I,O,G,k,W,j,X,Y,q,K,Q,Z,J,$,ee,te,ie,re,ne,oe,ae,se,he,le,ce,pe,ue,fe,de=THREE.Math.smoothstep,e=e||{},Ee=this,me=new THREE.Projector,n=void 0!==e.canvas?e.canvas:document.createElement("canvas"),ge=n.getContext("2d"),o=new THREE.Color(0),a=0,s=1,h=0,l=null,c=null,p=null,u=null,f=null,d=null,E=0,Te=new THREE.RenderableVertex,ve=new THREE.RenderableVertex,ye=new THREE.Color,Re=new THREE.Color,xe=new THREE.Color,He=new THREE.Color,we=new THREE.Color,_e=new THREE.Color,be=new THREE.Color,Se=new THREE.Color,Me={},Ae={},Ce=new THREE.Box2,Pe=new THREE.Box2,Le=new THREE.Box2,De=!1,Fe=new THREE.Color,Ue=new THREE.Color,ze=new THREE.Color,Ve=new THREE.Vector3,t=16,Ne=document.createElement("canvas");Ne.width=Ne.height=2,(le=Ne.getContext("2d")).fillStyle="rgba(0,0,0,1)",le.fillRect(0,0,2,2),ce=le.getImageData(0,0,2,2),pe=ce.data,(ue=document.createElement("canvas")).width=ue.height=t,(fe=ue.getContext("2d")).translate(-t/2,-t/2),fe.scale(t,t),t--,void 0===ge.setLineDash&&(ge.setLineDash=void 0!==ge.mozDash?function(e){ge.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=n,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){i=e*this.devicePixelRatio,r=t*this.devicePixelRatio,U=Math.floor(i/2),z=Math.floor(r/2),n.width=i,n.height=r,n.style.width=e+"px",n.style.height=t+"px",Ce.set(new THREE.Vector2(-U,-z),new THREE.Vector2(U,z)),Pe.set(new THREE.Vector2(-U,-z),new THREE.Vector2(U,z)),s=1,h=0,f=u=p=c=l=null},this.setClearColor=function(e,t){o.copy(e),a=void 0!==t?t:1,Pe.set(new THREE.Vector2(-U,-z),new THREE.Vector2(U,z))},this.setClearColorHex=function(e,t){o.setHex(e),a=void 0!==t?t:1,Pe.set(new THREE.Vector2(-U,-z),new THREE.Vector2(U,z))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){ge.setTransform(1,0,0,-1,U,z),!1===Pe.empty()&&(Pe.intersect(Ce),Pe.expandByScalar(2),a<1&&ge.clearRect(0|Pe.min.x,0|Pe.min.y,Pe.max.x-Pe.min.x|0,Pe.max.y-Pe.min.y|0),0<a&&(_(THREE.NormalBlending),w(1),C("rgba("+Math.floor(255*o.r)+","+Math.floor(255*o.g)+","+Math.floor(255*o.b)+","+a+")"),ge.fillRect(0|Pe.min.x,0|Pe.min.y,Pe.max.x-Pe.min.x|0,Pe.max.y-Pe.min.y|0)),Pe.makeEmpty())},this.render=function(e,h){function l(e,t,i){for(var r=0,n=F.length;r<n;r++){var o,a,s=F[r];Se.copy(s.color),s instanceof THREE.DirectionalLight?(o=Ve.getPositionFromMatrix(s.matrixWorld).normalize(),(a=t.dot(o))<=0||(a*=s.intensity,i.add(Se.multiplyScalar(a)))):s instanceof THREE.PointLight&&(o=Ve.getPositionFromMatrix(s.matrixWorld),(a=t.dot(Ve.subVectors(o,e).normalize()))<=0||0!=(a*=0==s.distance?1:1-Math.min(e.distanceTo(o)/s.distance,1))&&(a*=s.intensity,i.add(Se.multiplyScalar(a))))}}function t(e,t,i,r,n,o,a,s){Ee.info.render.vertices+=3,Ee.info.render.faces++,w(s.opacity),_(s.blending),O=e.positionScreen.x,G=e.positionScreen.y,k=t.positionScreen.x,W=t.positionScreen.y,j=i.positionScreen.x,X=i.positionScreen.y,c(O,G,k,W,j,X),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map?(_e.copy(s.color),be.copy(s.emissive),s.vertexColors===THREE.FaceColors&&_e.multiply(a.color),!0===De?!1===s.wireframe&&s.shading==THREE.SmoothShading&&3==a.vertexNormalsLength?(Re.copy(Fe),xe.copy(Fe),He.copy(Fe),l(a.v1.positionWorld,a.vertexNormalsModel[0],Re),l(a.v2.positionWorld,a.vertexNormalsModel[1],xe),l(a.v3.positionWorld,a.vertexNormalsModel[2],He),Re.multiply(_e).add(be),xe.multiply(_e).add(be),He.multiply(_e).add(be),we.addColors(xe,He).multiplyScalar(.5),te=d(Re,xe,He,we),f(O,G,k,W,j,X,0,0,1,0,0,1,te)):(ye.copy(Fe),l(a.centroidModel,a.normalModel,ye),ye.multiply(_e).add(be),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye)):!0===s.wireframe?p(s.color,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(s.color)):s instanceof THREE.MeshBasicMaterial||s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial?null!==s.map?s.map.mapping instanceof THREE.UVMapping&&(ie=a.uvs[0],u(O,G,k,W,j,X,ie[r].x,ie[r].y,ie[n].x,ie[n].y,ie[o].x,ie[o].y,s.map)):null!==s.envMap?s.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Ve.copy(a.vertexNormalsModelView[r]),re=.5*Ve.x+.5,ne=.5*Ve.y+.5,Ve.copy(a.vertexNormalsModelView[n]),oe=.5*Ve.x+.5,ae=.5*Ve.y+.5,Ve.copy(a.vertexNormalsModelView[o]),se=.5*Ve.x+.5,he=.5*Ve.y+.5,u(O,G,k,W,j,X,re,ne,oe,ae,se,he,s.envMap)):(ye.copy(s.color),s.vertexColors===THREE.FaceColors&&ye.multiply(a.color),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye)):s instanceof THREE.MeshDepthMaterial?($=h.near,ee=h.far,Re.r=Re.g=Re.b=1-de(e.positionScreen.z*e.positionScreen.w,$,ee),xe.r=xe.g=xe.b=1-de(t.positionScreen.z*t.positionScreen.w,$,ee),He.r=He.g=He.b=1-de(i.positionScreen.z*i.positionScreen.w,$,ee),we.addColors(xe,He).multiplyScalar(.5),te=d(Re,xe,He,we),f(O,G,k,W,j,X,0,0,1,0,0,1,te)):s instanceof THREE.MeshNormalMaterial&&(s.shading==THREE.FlatShading?(e=a.normalModelView,ye.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye)):s.shading==THREE.SmoothShading&&(e=a.vertexNormalsModelView[r],Re.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),e=a.vertexNormalsModelView[n],xe.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),e=a.vertexNormalsModelView[o],He.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),we.addColors(xe,He).multiplyScalar(.5),te=d(Re,xe,He,we),f(O,G,k,W,j,X,0,0,1,0,0,1,te)))}function c(e,t,i,r,n,o){ge.beginPath(),ge.moveTo(e,t),ge.lineTo(i,r),ge.lineTo(n,o),ge.closePath()}function i(e,t,i,r,n,o,a,s){ge.beginPath(),ge.moveTo(e,t),ge.lineTo(i,r),ge.lineTo(n,o),ge.lineTo(a,s),ge.closePath()}function p(e,t,i,r){b(t),S(i),M(r),A(e.getStyle()),ge.stroke(),Le.expandByScalar(2*t)}function g(e){C(e.getStyle()),ge.fill()}function u(e,t,i,r,n,o,a,s,h,l,c,p,u){var f,d,E,m;u instanceof THREE.DataTexture||void 0===u.image||0==u.image.width||(!0===u.needsUpdate&&(m=u.wrapS==THREE.RepeatWrapping,f=u.wrapT==THREE.RepeatWrapping,Me[u.id]=ge.createPattern(u.image,!0===m&&!0===f?"repeat":!0===m&&!1===f?"repeat-x":!1===m&&!0===f?"repeat-y":"no-repeat"),u.needsUpdate=!1),void 0===Me[u.id]?C("rgba(0,0,0,1)"):C(Me[u.id]),m=u.offset.x/u.repeat.x,f=u.offset.y/u.repeat.y,i-=e,r-=t,n-=e,o-=t,0===(m=(h=(h+m)*(d=u.image.width*u.repeat.x)-(a=(a+m)*d))*(p=(1-p+f)*(E=u.image.height*u.repeat.y)-(s=(1-s+f)*E))-(c=(c+m)*d-a)*(l=(1-l+f)*E-s))?(void 0===Ae[u.id]&&((t=document.createElement("canvas")).width=u.image.width,t.height=u.image.height,(t=t.getContext("2d")).drawImage(u.image,0,0),Ae[u.id]=t.getImageData(0,0,u.image.width,u.image.height).data),t=Ae[u.id],a=4*(Math.floor(a)+Math.floor(s)*u.image.width),ye.setRGB(t[a]/255,t[a+1]/255,t[a+2]/255),g(ye)):(e=e-(u=(p*i-l*n)*(m=1/m))*a-(i=(h*n-c*i)*m)*s,a=t-(l=(p*r-l*o)*m)*a-(r=(h*o-c*r)*m)*s,ge.save(),ge.transform(u,l,i,r,e,a),ge.fill(),ge.restore()))}function f(e,t,i,r,n,o,a,s,h,l,c,p,u){var f=u.width-1,d=u.height-1;e=e-(f=((p=p*d-(s*=d))*(i-=e)-(l=l*d-s)*(n-=e))*(d=1/((h=h*f-(a*=f))*p-(c=c*f-a)*l)))*a-(i=(h*n-c*i)*d)*s,t=t-(l=(p*(r-=t)-l*(o-=t))*d)*a-(r=(h*o-c*r)*d)*s,ge.save(),ge.transform(f,l,i,r,e,t),ge.clip(),ge.drawImage(u,0,0),ge.restore()}function d(e,t,i,r){return pe[0]=255*e.r|0,pe[1]=255*e.g|0,pe[2]=255*e.b|0,pe[4]=255*t.r|0,pe[5]=255*t.g|0,pe[6]=255*t.b|0,pe[8]=255*i.r|0,pe[9]=255*i.g|0,pe[10]=255*i.b|0,pe[12]=255*r.r|0,pe[13]=255*r.g|0,pe[14]=255*r.b|0,le.putImageData(ce,0,0),fe.drawImage(Ne,0,0),ue}function r(e,t){var i=t.x-e.x,r=t.y-e.y,n=i*i+r*r;0!==n&&(i*=n=1/Math.sqrt(n),r*=n,t.x+=i,t.y+=r,e.x-=i,e.y-=r)}if(!1==h instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{if(!0===this.autoClear&&this.clear(),ge.setTransform(1,0,0,-1,U,z),Ee.info.render.vertices=0,Ee.info.render.faces=0,L=me.projectScene(e,h,this.sortObjects,this.sortElements),D=L.elements,F=L.lights,!0===(De=0<F.length)){Fe.setRGB(0,0,0),Ue.setRGB(0,0,0),ze.setRGB(0,0,0);for(var n=0,o=F.length;n<o;n++){var a=(s=F[n]).color;s instanceof THREE.AmbientLight?Fe.add(a):s instanceof THREE.DirectionalLight?Ue.add(a):s instanceof THREE.PointLight&&ze.add(a)}}for(n=0,o=D.length;n<o;n++){var s,E=D[n];if(void 0!==(s=E.material)&&!1!==s.visible){if(Le.makeEmpty(),E instanceof THREE.RenderableParticle){(V=E).x*=U,V.y*=z;var a=V,m=E;w(s.opacity),_(s.blending);var T=void 0,v=void 0,y=void 0,R=void 0,x=E=void 0,H=void 0;s instanceof THREE.ParticleBasicMaterial?null===s.map?(y=m.object.scale.x,R=m.object.scale.y,y*=m.scale.x*U,R*=m.scale.y*z,Le.min.set(a.x-y,a.y-R),Le.max.set(a.x+y,a.y+R),!1!==Ce.isIntersectionBox(Le)&&(C(s.color.getStyle()),ge.save(),ge.translate(a.x,a.y),ge.rotate(-m.rotation),ge.scale(y,R),ge.fillRect(-1,-1,2,2),ge.restore())):(x=(E=s.map.image).width>>1,H=E.height>>1,T=(y=m.scale.x*U)*x,v=(R=m.scale.y*z)*H,Le.min.set(a.x-T,a.y-v),Le.max.set(a.x+T,a.y+v),!1!==Ce.isIntersectionBox(Le)&&(ge.save(),ge.translate(a.x,a.y),ge.rotate(-m.rotation),ge.scale(y,-R),ge.translate(-x,-H),ge.drawImage(E,0,0),ge.restore())):s instanceof THREE.ParticleCanvasMaterial&&(T=m.scale.x*U,v=m.scale.y*z,Le.min.set(a.x-T,a.y-v),Le.max.set(a.x+T,a.y+v),!1!==Ce.isIntersectionBox(Le)&&(A(s.color.getStyle()),C(s.color.getStyle()),ge.save(),ge.translate(a.x,a.y),ge.rotate(-m.rotation),ge.scale(T,v),s.program(ge),ge.restore()))}else if(E instanceof THREE.RenderableLine)V=E.v1,N=E.v2,V.positionScreen.x*=U,V.positionScreen.y*=z,N.positionScreen.x*=U,N.positionScreen.y*=z,Le.setFromPoints([V.positionScreen,N.positionScreen]),!0===Ce.isIntersectionBox(Le)&&(a=V,m=N,w(s.opacity),_(s.blending),ge.beginPath(),ge.moveTo(a.positionScreen.x,a.positionScreen.y),ge.lineTo(m.positionScreen.x,m.positionScreen.y),s instanceof THREE.LineBasicMaterial?(b(s.linewidth),S(s.linecap),M(s.linejoin),A(s.color.getStyle()),P(null,null),ge.stroke(),Le.expandByScalar(2*s.linewidth)):s instanceof THREE.LineDashedMaterial&&(b(s.linewidth),S(s.linecap),M(s.linejoin),A(s.color.getStyle()),P(s.dashSize,s.gapSize),ge.stroke(),Le.expandByScalar(2*s.linewidth)));else if(E instanceof THREE.RenderableFace3){if(V=E.v1,N=E.v2,B=E.v3,V.positionScreen.z<-1||1<V.positionScreen.z)continue;if(N.positionScreen.z<-1||1<N.positionScreen.z)continue;if(B.positionScreen.z<-1||1<B.positionScreen.z)continue;V.positionScreen.x*=U,V.positionScreen.y*=z,N.positionScreen.x*=U,N.positionScreen.y*=z,B.positionScreen.x*=U,B.positionScreen.y*=z,!0===s.overdraw&&(r(V.positionScreen,N.positionScreen),r(N.positionScreen,B.positionScreen),r(B.positionScreen,V.positionScreen)),Le.setFromPoints([V.positionScreen,N.positionScreen,B.positionScreen]),t(V,N,B,0,1,2,E,s)}else if(E instanceof THREE.RenderableFace4){if(V=E.v1,N=E.v2,B=E.v3,I=E.v4,V.positionScreen.z<-1||1<V.positionScreen.z)continue;if(N.positionScreen.z<-1||1<N.positionScreen.z)continue;if(B.positionScreen.z<-1||1<B.positionScreen.z)continue;if(I.positionScreen.z<-1||1<I.positionScreen.z)continue;V.positionScreen.x*=U,V.positionScreen.y*=z,N.positionScreen.x*=U,N.positionScreen.y*=z,B.positionScreen.x*=U,B.positionScreen.y*=z,I.positionScreen.x*=U,I.positionScreen.y*=z,Te.positionScreen.copy(N.positionScreen),ve.positionScreen.copy(I.positionScreen),!0===s.overdraw&&(r(V.positionScreen,N.positionScreen),r(N.positionScreen,I.positionScreen),r(I.positionScreen,V.positionScreen),r(B.positionScreen,Te.positionScreen),r(B.positionScreen,ve.positionScreen)),Le.setFromPoints([V.positionScreen,N.positionScreen,B.positionScreen,I.positionScreen]),a=V,m=N,T=B,v=I,y=Te,R=ve,Ee.info.render.vertices+=4,Ee.info.render.faces++,w(s.opacity),_(s.blending),void 0!==s.map&&null!==s.map||void 0!==s.envMap&&null!==s.envMap?(t(a,m,v,0,1,3,E,s),t(y,T,R,1,2,3,E,s)):(O=a.positionScreen.x,G=a.positionScreen.y,k=m.positionScreen.x,W=m.positionScreen.y,j=T.positionScreen.x,X=T.positionScreen.y,Y=v.positionScreen.x,q=v.positionScreen.y,K=y.positionScreen.x,Q=y.positionScreen.y,Z=R.positionScreen.x,J=R.positionScreen.y,s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial?(_e.copy(s.color),be.copy(s.emissive),s.vertexColors===THREE.FaceColors&&_e.multiply(E.color),!0===De?!1===s.wireframe&&s.shading==THREE.SmoothShading&&4==E.vertexNormalsLength?(Re.copy(Fe),xe.copy(Fe),He.copy(Fe),we.copy(Fe),l(E.v1.positionWorld,E.vertexNormalsModel[0],Re),l(E.v2.positionWorld,E.vertexNormalsModel[1],xe),l(E.v4.positionWorld,E.vertexNormalsModel[3],He),l(E.v3.positionWorld,E.vertexNormalsModel[2],we),Re.multiply(_e).add(be),xe.multiply(_e).add(be),He.multiply(_e).add(be),we.multiply(_e).add(be),te=d(Re,xe,He,we),c(O,G,k,W,Y,q),f(O,G,k,W,Y,q,0,0,1,0,0,1,te),c(K,Q,j,X,Z,J),f(K,Q,j,X,Z,J,1,0,1,1,0,1,te)):(ye.copy(Fe),l(E.centroidModel,E.normalModel,ye),ye.multiply(_e).add(be),i(O,G,k,W,j,X,Y,q),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye)):(ye.addColors(_e,be),i(O,G,k,W,j,X,Y,q),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye))):s instanceof THREE.MeshBasicMaterial?(ye.copy(s.color),s.vertexColors===THREE.FaceColors&&ye.multiply(E.color),i(O,G,k,W,j,X,Y,q),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye)):s instanceof THREE.MeshNormalMaterial?(a=void 0,s.shading==THREE.FlatShading?(a=E.normalModelView,ye.setRGB(a.x,a.y,a.z).multiplyScalar(.5).addScalar(.5),i(O,G,k,W,j,X,Y,q),!0===s.wireframe?p(ye,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):g(ye)):s.shading==THREE.SmoothShading&&(a=E.vertexNormalsModelView[0],Re.setRGB(a.x,a.y,a.z).multiplyScalar(.5).addScalar(.5),a=E.vertexNormalsModelView[1],xe.setRGB(a.x,a.y,a.z).multiplyScalar(.5).addScalar(.5),a=E.vertexNormalsModelView[3],He.setRGB(a.x,a.y,a.z).multiplyScalar(.5).addScalar(.5),a=E.vertexNormalsModelView[2],we.setRGB(a.x,a.y,a.z).multiplyScalar(.5).addScalar(.5),te=d(Re,xe,He,we),c(O,G,k,W,Y,q),f(O,G,k,W,Y,q,0,0,1,0,0,1,te),c(K,Q,j,X,Z,J),f(K,Q,j,X,Z,J,1,0,1,1,0,1,te))):s instanceof THREE.MeshDepthMaterial&&($=h.near,ee=h.far,Re.r=Re.g=Re.b=1-de(a.positionScreen.z*a.positionScreen.w,$,ee),xe.r=xe.g=xe.b=1-de(m.positionScreen.z*m.positionScreen.w,$,ee),He.r=He.g=He.b=1-de(v.positionScreen.z*v.positionScreen.w,$,ee),we.r=we.g=we.b=1-de(T.positionScreen.z*T.positionScreen.w,$,ee),te=d(Re,xe,He,we),c(O,G,k,W,Y,q),f(O,G,k,W,Y,q,0,0,1,0,0,1,te),c(K,Q,j,X,Z,J),f(K,Q,j,X,Z,J,1,0,1,1,0,1,te)))}Pe.union(Le)}}ge.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){for(var t,i,r={},n=0;n<e.length;n++)for(t in i=this.clone(e[n]))r[t]=i[t];return r},clone:function(e){var t,i,r,n={};for(t in e)for(i in n[t]={},e[t])r=e[t][i],n[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function o(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Tr.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function or(e,t){var i=e.vertices.length,r=t.material;if(r.attributes)for(var n in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),r.attributes){var o,a=r.attributes[n];a.__webglInitialized&&!a.createUniqueBuffers||(a.__webglInitialized=!0,o=1,"v2"===a.type?o=2:"v3"===a.type?o=3:"v4"===a.type?o=4:"c"===a.type&&(o=3),a.size=o,a.array=new Float32Array(i*o),a.buffer=Tr.createBuffer(),a.buffer.belongsToAttribute=n,a.needsUpdate=!0),e.__webglCustomAttributesList.push(a)}}function ar(e,t){var i=t.geometry,r=e.faces3,n=e.faces4,o=3*r.length+4*n.length,a=+r.length+2*n.length,n=3*r.length+4*n.length,s=lr(r=sr(t,e)),h=hr(r),l=!!r.vertexColors&&r.vertexColors;if(e.__vertexArray=new Float32Array(3*o),h&&(e.__normalArray=new Float32Array(3*o)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*o)),l&&(e.__colorArray=new Float32Array(3*o)),s&&((0<i.faceUvs.length||0<i.faceVertexUvs.length)&&(e.__uvArray=new Float32Array(2*o)),(1<i.faceUvs.length||1<i.faceVertexUvs.length)&&(e.__uv2Array=new Float32Array(2*o))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*o),e.__skinWeightArray=new Float32Array(4*o)),e.__faceArray=new Uint16Array(3*a),e.__lineArray=new Uint16Array(2*n),e.numMorphTargets)for(e.__morphTargetsArrays=[],i=0,s=e.numMorphTargets;i<s;i++)e.__morphTargetsArrays.push(new Float32Array(3*o));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],i=0,s=e.numMorphNormals;i<s;i++)e.__morphNormalsArrays.push(new Float32Array(3*o));if(e.__webglFaceCount=3*a,e.__webglLineCount=2*n,r.attributes)for(var c in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),r.attributes){var p,a=r.attributes[c],i={};for(p in a)i[p]=a[p];i.__webglInitialized&&!i.createUniqueBuffers||(i.__webglInitialized=!0,n=1,"v2"===i.type?n=2:"v3"===i.type?n=3:"v4"===i.type?n=4:"c"===i.type&&(n=3),i.size=n,i.array=new Float32Array(o*n),i.buffer=Tr.createBuffer(),i.buffer.belongsToAttribute=c,a.needsUpdate=!0,i.__original=a),e.__webglCustomAttributesList.push(i)}e.__inittedArrays=!0}function sr(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function hr(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&(e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading)}function lr(e){return!!(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial)}function cr(e){var t,i,r;for(t in e.attributes)r="index"===t?Tr.ELEMENT_ARRAY_BUFFER:Tr.ARRAY_BUFFER,(i=e.attributes[t]).buffer=Tr.createBuffer(),Tr.bindBuffer(r,i.buffer),Tr.bufferData(r,i.array,Tr.STATIC_DRAW)}function pr(e,t,i){var r=(h=e.attributes).index,n=h.position,o=h.normal,a=h.uv,s=h.color,h=h.tangent;if(e.elementsNeedUpdate&&void 0!==r&&(Tr.bindBuffer(Tr.ELEMENT_ARRAY_BUFFER,r.buffer),Tr.bufferData(Tr.ELEMENT_ARRAY_BUFFER,r.array,t)),e.verticesNeedUpdate&&void 0!==n&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,n.array,t)),e.normalsNeedUpdate&&void 0!==o&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,o.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,o.array,t)),e.uvsNeedUpdate&&void 0!==a&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,a.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,a.array,t)),e.colorsNeedUpdate&&void 0!==s&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,s.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,s.array,t)),e.tangentsNeedUpdate&&void 0!==h&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,h.array,t)),i)for(var l in e.attributes)delete e.attributes[l].array}function p(e){oe[e]||(Tr.enableVertexAttribArray(e),oe[e]=!0)}function u(){for(var e in oe)oe[e]&&(Tr.disableVertexAttribArray(e),oe[e]=!1)}function d(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function ur(e,t){return t[0]-e[0]}function E(e,t,i){if(e.length)for(var r=0,n=e.length;r<n;r++)K=Y=null,q=C=L=P=N=V=D=-1,he=!0,e[r].render(t,i,re,ne),K=Y=null,q=C=L=P=N=V=D=-1,he=!0}function m(e,t,i,r,n,o,a,s){for(var h,l,c,p=t?(l=e.length-1,t=-1):(l=0,t=e.length,1),u=l;u!==t;u+=p)if((h=e[u]).render){if(l=h.object,c=h.buffer,s)h=s;else{if(!(h=h[i]))continue;a&&vr.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),vr.setDepthTest(h.depthTest),vr.setDepthWrite(h.depthWrite),y(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}vr.setMaterialFaces(h),c instanceof THREE.BufferGeometry?vr.renderBufferDirect(r,n,o,h,c,l):vr.renderBuffer(r,n,o,h,c,l)}}function g(e,t,i,r,n,o,a){for(var s,h,l=0,c=e.length;l<c;l++)if((h=(s=e[l]).object).visible){if(a)s=a;else{if(!(s=s[t]))continue;o&&vr.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),vr.setDepthTest(s.depthTest),vr.setDepthWrite(s.depthWrite),y(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}vr.renderImmediateObject(i,r,n,s,h)}}function fr(e,t,i){e.push({buffer:t,object:i,opaque:null,transparent:null})}function dr(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function Er(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function mr(e,t){for(var i=e.length-1;0<=i;i--)e[i].object===t&&e.splice(i,1)}function gr(e,t){for(var i=e.length-1;0<=i;i--)e[i]===t&&e.splice(i,1)}function f(e,t,i,r,n){Q=0,r.needsUpdate&&(r.program&&_e(r),vr.initMaterial(r,t,i,n),r.needsUpdate=!1),r.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(vr.maxMorphTargets));var o,a,s=!1,h=r.program,l=h.uniforms,c=r.uniforms;if(h!==Y&&(Tr.useProgram(h),Y=h,s=!0),r.id!==q&&(q=r.id,s=!0),!s&&e===K||(Tr.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),e!==K&&(K=e)),r.skinning&&(Ee&&n.useVertexTexture?null!==l.boneTexture&&(o=O(),Tr.uniform1i(l.boneTexture,o),vr.setTexture(n.boneTexture,o)):null!==l.boneGlobalMatrices&&Tr.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.boneMatrices)),s){if(i&&r.fog&&(c.fogColor.value=i.color,i instanceof THREE.Fog?(c.fogNear.value=i.near,c.fogFar.value=i.far):i instanceof THREE.FogExp2&&(c.fogDensity.value=i.density)),r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(he){for(var p,u,f,d,E=o=0,m=0,g=le,T=g.directional.colors,v=g.directional.positions,y=g.point.colors,R=g.point.positions,x=g.point.distances,H=g.spot.colors,w=g.spot.positions,_=g.spot.distances,b=g.spot.directions,S=g.spot.anglesCos,M=g.spot.exponents,A=g.hemi.skyColors,C=g.hemi.groundColors,P=g.hemi.positions,L=0,D=0,F=0,U=0,z=0,V=0,N=0,B=0,I=p=0,i=d=I=0,s=t.length;i<s;i++)(p=t[i]).onlyShadow||(u=p.color,f=p.intensity,d=p.distance,p instanceof THREE.AmbientLight?p.visible&&(vr.gammaInput?(o+=u.r*u.r,E+=u.g*u.g,m+=u.b*u.b):(o+=u.r,E+=u.g,m+=u.b)):p instanceof THREE.DirectionalLight?(z+=1,p.visible&&(se.getPositionFromMatrix(p.matrixWorld),Hr.getPositionFromMatrix(p.target.matrixWorld),se.sub(Hr),se.normalize(),0===se.x&&0===se.y&&0===se.z||(v[p=3*L]=se.x,v[p+1]=se.y,v[p+2]=se.z,vr.gammaInput?G(T,p,u,f*f):k(T,p,u,f),L+=1))):p instanceof THREE.PointLight?(V+=1,p.visible&&(I=3*D,vr.gammaInput?G(y,I,u,f*f):k(y,I,u,f),Hr.getPositionFromMatrix(p.matrixWorld),R[I]=Hr.x,R[I+1]=Hr.y,R[I+2]=Hr.z,x[D]=d,D+=1)):p instanceof THREE.SpotLight?(N+=1,p.visible&&(I=3*F,vr.gammaInput?G(H,I,u,f*f):k(H,I,u,f),Hr.getPositionFromMatrix(p.matrixWorld),w[I]=Hr.x,w[I+1]=Hr.y,w[I+2]=Hr.z,_[F]=d,se.copy(Hr),Hr.getPositionFromMatrix(p.target.matrixWorld),se.sub(Hr),se.normalize(),b[I]=se.x,b[I+1]=se.y,b[I+2]=se.z,S[F]=Math.cos(p.angle),M[F]=p.exponent,F+=1)):p instanceof THREE.HemisphereLight&&(B+=1,p.visible&&(se.getPositionFromMatrix(p.matrixWorld),se.normalize(),0===se.x&&0===se.y&&0===se.z||(P[d=3*U]=se.x,P[d+1]=se.y,P[d+2]=se.z,u=p.color,p=p.groundColor,vr.gammaInput?(G(A,d,u,f*=f),G(C,d,p,f)):(k(A,d,u,f),k(C,d,p,f)),U+=1))));for(i=3*L,s=Math.max(T.length,3*z);i<s;i++)T[i]=0;for(i=3*D,s=Math.max(y.length,3*V);i<s;i++)y[i]=0;for(i=3*F,s=Math.max(H.length,3*N);i<s;i++)H[i]=0;for(i=3*U,s=Math.max(A.length,3*B);i<s;i++)A[i]=0;for(i=3*U,s=Math.max(C.length,3*B);i<s;i++)C[i]=0;g.directional.length=L,g.point.length=D,g.spot.length=F,g.hemi.length=U,g.ambient[0]=o,g.ambient[1]=E,g.ambient[2]=m,he=!1}i=le,c.ambientLightColor.value=i.ambient,c.directionalLightColor.value=i.directional.colors,c.directionalLightDirection.value=i.directional.positions,c.pointLightColor.value=i.point.colors,c.pointLightPosition.value=i.point.positions,c.pointLightDistance.value=i.point.distances,c.spotLightColor.value=i.spot.colors,c.spotLightPosition.value=i.spot.positions,c.spotLightDistance.value=i.spot.distances,c.spotLightDirection.value=i.spot.directions,c.spotLightAngleCos.value=i.spot.anglesCos,c.spotLightExponent.value=i.spot.exponents,c.hemisphereLightSkyColor.value=i.hemi.skyColors,c.hemisphereLightGroundColor.value=i.hemi.groundColors,c.hemisphereLightDirection.value=i.hemi.positions}if((r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial)&&(c.opacity.value=r.opacity,vr.gammaInput?c.diffuse.value.copyGammaToLinear(r.color):c.diffuse.value=r.color,c.map.value=r.map,c.lightMap.value=r.lightMap,c.specularMap.value=r.specularMap,r.bumpMap&&(c.bumpMap.value=r.bumpMap,c.bumpScale.value=r.bumpScale),r.normalMap&&(c.normalMap.value=r.normalMap,c.normalScale.value.copy(r.normalScale)),r.map?a=r.map:r.specularMap?a=r.specularMap:r.normalMap?a=r.normalMap:r.bumpMap&&(a=r.bumpMap),void 0!==a&&(i=a.offset,a=a.repeat,c.offsetRepeat.value.set(i.x,i.y,a.x,a.y)),c.envMap.value=r.envMap,c.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,c.reflectivity.value=r.reflectivity,c.refractionRatio.value=r.refractionRatio,c.combine.value=r.combine,c.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping),r instanceof THREE.LineBasicMaterial?(c.diffuse.value=r.color,c.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(c.diffuse.value=r.color,c.opacity.value=r.opacity,c.dashSize.value=r.dashSize,c.totalSize.value=r.dashSize+r.gapSize,c.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(c.psColor.value=r.color,c.opacity.value=r.opacity,c.size.value=r.size,c.scale.value=X.height/2,c.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(c.shininess.value=r.shininess,vr.gammaInput?(c.ambient.value.copyGammaToLinear(r.ambient),c.emissive.value.copyGammaToLinear(r.emissive),c.specular.value.copyGammaToLinear(r.specular)):(c.ambient.value=r.ambient,c.emissive.value=r.emissive,c.specular.value=r.specular),r.wrapAround&&c.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(vr.gammaInput?(c.ambient.value.copyGammaToLinear(r.ambient),c.emissive.value.copyGammaToLinear(r.emissive)):(c.ambient.value=r.ambient,c.emissive.value=r.emissive),r.wrapAround&&c.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(c.mNear.value=e.near,c.mFar.value=e.far,c.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(c.opacity.value=r.opacity),n.receiveShadow&&!r._shadowPass&&c.shadowMatrix)for(i=a=0,s=t.length;i<s;i++)(o=t[i]).castShadow&&(o instanceof THREE.SpotLight||o instanceof THREE.DirectionalLight&&!o.shadowCascade)&&(c.shadowMap.value[a]=o.shadowMap,c.shadowMapSize.value[a]=o.shadowMapSize,c.shadowMatrix.value[a]=o.shadowMatrix,c.shadowDarkness.value[a]=o.shadowDarkness,c.shadowBias.value[a]=o.shadowBias,a++);for(c=0,a=(t=r.uniformsList).length;c<a;c++)if(s=h.uniforms[t[c][1]])if(E=(i=t[c][0]).type,o=i.value,"i"===E)Tr.uniform1i(s,o);else if("f"===E)Tr.uniform1f(s,o);else if("v2"===E)Tr.uniform2f(s,o.x,o.y);else if("v3"===E)Tr.uniform3f(s,o.x,o.y,o.z);else if("v4"===E)Tr.uniform4f(s,o.x,o.y,o.z,o.w);else if("c"===E)Tr.uniform3f(s,o.r,o.g,o.b);else if("iv1"===E)Tr.uniform1iv(s,o);else if("iv"===E)Tr.uniform3iv(s,o);else if("fv1"===E)Tr.uniform1fv(s,o);else if("fv"===E)Tr.uniform3fv(s,o);else if("v2v"===E){for(void 0===i._array&&(i._array=new Float32Array(2*o.length)),E=0,m=o.length;E<m;E++)g=2*E,i._array[g]=o[E].x,i._array[g+1]=o[E].y;Tr.uniform2fv(s,i._array)}else if("v3v"===E){for(void 0===i._array&&(i._array=new Float32Array(3*o.length)),E=0,m=o.length;E<m;E++)g=3*E,i._array[g]=o[E].x,i._array[g+1]=o[E].y,i._array[g+2]=o[E].z;Tr.uniform3fv(s,i._array)}else if("v4v"===E){for(void 0===i._array&&(i._array=new Float32Array(4*o.length)),E=0,m=o.length;E<m;E++)g=4*E,i._array[g]=o[E].x,i._array[g+1]=o[E].y,i._array[g+2]=o[E].z,i._array[g+3]=o[E].w;Tr.uniform4fv(s,i._array)}else if("m4"===E)void 0===i._array&&(i._array=new Float32Array(16)),o.flattenToArray(i._array),Tr.uniformMatrix4fv(s,!1,i._array);else if("m4v"===E){for(void 0===i._array&&(i._array=new Float32Array(16*o.length)),E=0,m=o.length;E<m;E++)o[E].flattenToArrayOffset(i._array,16*E);Tr.uniformMatrix4fv(s,!1,i._array)}else if("t"===E){if(g=o,o=O(),Tr.uniform1i(s,o),g)if(g.image instanceof Array&&6===g.image.length){if(s=o,6===(i=g).image.length)if(i.needsUpdate){for(i.image.__webglTextureCube||(i.image.__webglTextureCube=Tr.createTexture(),vr.info.memory.textures++),Tr.activeTexture(Tr.TEXTURE0+s),Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,i.image.__webglTextureCube),Tr.pixelStorei(Tr.UNPACK_FLIP_Y_WEBGL,i.flipY),s=i instanceof THREE.CompressedTexture,o=[],E=0;E<6;E++)vr.autoScaleCubemaps&&!s?(m=o,g=E,T=i.image[E],y=ue,T.width<=y&&T.height<=y||(R=Math.max(T.width,T.height),v=Math.floor(T.width*y/R),y=Math.floor(T.height*y/R),(R=document.createElement("canvas")).width=v,R.height=y,R.getContext("2d").drawImage(T,0,0,T.width,T.height,0,0,v,y),T=R),m[g]=T):o[E]=i.image[E];for(m=0==((E=o[0]).width&E.width-1)&&0==(E.height&E.height-1),g=j(i.format),T=j(i.type),W(Tr.TEXTURE_CUBE_MAP,i,m),E=0;E<6;E++)if(s)for(R=0,x=(y=o[E].mipmaps).length;R<x;R++)v=y[R],Tr.compressedTexImage2D(Tr.TEXTURE_CUBE_MAP_POSITIVE_X+E,R,g,v.width,v.height,0,v.data);else Tr.texImage2D(Tr.TEXTURE_CUBE_MAP_POSITIVE_X+E,0,g,g,T,o[E]);i.generateMipmaps&&m&&Tr.generateMipmap(Tr.TEXTURE_CUBE_MAP),i.needsUpdate=!1,i.onUpdate&&i.onUpdate()}else Tr.activeTexture(Tr.TEXTURE0+s),Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,i.image.__webglTextureCube)}else g instanceof THREE.WebGLRenderTargetCube?(i=g,Tr.activeTexture(Tr.TEXTURE0+o),Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,i.__webglTexture)):vr.setTexture(g,o)}else if("tv"===E){for(void 0===i._array&&(i._array=[]),E=0,m=i.value.length;E<m;E++)i._array[E]=O();for(Tr.uniform1iv(s,i._array),E=0,m=i.value.length;E<m;E++)g=i.value[E],o=i._array[E],g&&vr.setTexture(g,o)}(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==l.cameraPosition&&(Hr.getPositionFromMatrix(e.matrixWorld),Tr.uniform3f(l.cameraPosition,Hr.x,Hr.y,Hr.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==l.viewMatrix&&Tr.uniformMatrix4fv(l.viewMatrix,!1,e.matrixWorldInverse.elements)}return Tr.uniformMatrix4fv(l.modelViewMatrix,!1,n._modelViewMatrix.elements),l.normalMatrix&&Tr.uniformMatrix3fv(l.normalMatrix,!1,n._normalMatrix.elements),null!==l.modelMatrix&&Tr.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements),h}function O(){var e=Q;return ce<=e&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+ce),Q+=1,e}function T(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function G(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function k(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function v(e){e!==J&&(Tr.lineWidth(e),J=e)}function y(e,t,i){B!==e&&(e?Tr.enable(Tr.POLYGON_OFFSET_FILL):Tr.disable(Tr.POLYGON_OFFSET_FILL),B=e),!e||I===t&&Z===i||(Tr.polygonOffset(t,i),I=t,Z=i)}function R(e,t){var i;return"fragment"===e?i=Tr.createShader(Tr.FRAGMENT_SHADER):"vertex"===e&&(i=Tr.createShader(Tr.VERTEX_SHADER)),Tr.shaderSource(i,t),Tr.compileShader(i),Tr.getShaderParameter(i,Tr.COMPILE_STATUS)?i:(console.error(Tr.getShaderInfoLog(i)),console.error(function(e){for(var t=0,i=(e=e.split("\n")).length;t<i;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t)),null)}function W(e,t,i){i?(Tr.texParameteri(e,Tr.TEXTURE_WRAP_S,j(t.wrapS)),Tr.texParameteri(e,Tr.TEXTURE_WRAP_T,j(t.wrapT)),Tr.texParameteri(e,Tr.TEXTURE_MAG_FILTER,j(t.magFilter)),Tr.texParameteri(e,Tr.TEXTURE_MIN_FILTER,j(t.minFilter))):(Tr.texParameteri(e,Tr.TEXTURE_WRAP_S,Tr.CLAMP_TO_EDGE),Tr.texParameteri(e,Tr.TEXTURE_WRAP_T,Tr.CLAMP_TO_EDGE),Tr.texParameteri(e,Tr.TEXTURE_MAG_FILTER,r(t.magFilter)),Tr.texParameteri(e,Tr.TEXTURE_MIN_FILTER,r(t.minFilter))),_&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(Tr.texParameterf(e,_.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,fe)),t.__oldAnisotropy=t.anisotropy)}function h(e,t){Tr.bindRenderbuffer(Tr.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Tr.renderbufferStorage(Tr.RENDERBUFFER,Tr.DEPTH_COMPONENT16,t.width,t.height),Tr.framebufferRenderbuffer(Tr.FRAMEBUFFER,Tr.DEPTH_ATTACHMENT,Tr.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Tr.renderbufferStorage(Tr.RENDERBUFFER,Tr.DEPTH_STENCIL,t.width,t.height),Tr.framebufferRenderbuffer(Tr.FRAMEBUFFER,Tr.DEPTH_STENCIL_ATTACHMENT,Tr.RENDERBUFFER,e)):Tr.renderbufferStorage(Tr.RENDERBUFFER,Tr.RGBA4,t.width,t.height)}function r(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Tr.NEAREST:Tr.LINEAR}function j(e){if(e===THREE.RepeatWrapping)return Tr.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Tr.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Tr.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Tr.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Tr.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Tr.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Tr.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Tr.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Tr.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Tr.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Tr.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Tr.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Tr.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Tr.BYTE;if(e===THREE.ShortType)return Tr.SHORT;if(e===THREE.UnsignedShortType)return Tr.UNSIGNED_SHORT;if(e===THREE.IntType)return Tr.INT;if(e===THREE.UnsignedIntType)return Tr.UNSIGNED_INT;if(e===THREE.FloatType)return Tr.FLOAT;if(e===THREE.AlphaFormat)return Tr.ALPHA;if(e===THREE.RGBFormat)return Tr.RGB;if(e===THREE.RGBAFormat)return Tr.RGBA;if(e===THREE.LuminanceFormat)return Tr.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Tr.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Tr.FUNC_ADD;if(e===THREE.SubtractEquation)return Tr.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Tr.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Tr.ZERO;if(e===THREE.OneFactor)return Tr.ONE;if(e===THREE.SrcColorFactor)return Tr.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Tr.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Tr.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Tr.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Tr.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Tr.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Tr.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Tr.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Tr.SRC_ALPHA_SATURATE;if(void 0!==b){if(e===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var X=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),x=void 0!==e.precision?e.precision:"highp",t=void 0===e.alpha||e.alpha,i=void 0===e.premultipliedAlpha||e.premultipliedAlpha,n=void 0!==e.antialias&&e.antialias,a=void 0===e.stencil||e.stencil,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),c=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=X,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Tr,H,w,_,b,vr=this,S=[],M=0,Y=null,A=null,q=-1,C=null,K=null,yr=0,Q=0,P=-1,L=-1,D=-1,F=-1,U=-1,z=-1,V=-1,N=-1,B=null,I=null,Z=null,J=null,$=0,ee=0,te=0,ie=0,re=0,ne=0,oe={},ae=new THREE.Frustum,Rr=new THREE.Matrix4,xr=new THREE.Matrix4,Hr=new THREE.Vector3,se=new THREE.Vector3,he=!0,le={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{if(!(Tr=X.getContext("experimental-webgl",{alpha:t,premultipliedAlpha:i,antialias:n,stencil:a,preserveDrawingBuffer:s})))throw"Error creating WebGL context."}catch(e){console.error(e)}H=Tr.getExtension("OES_texture_float"),w=Tr.getExtension("OES_standard_derivatives"),_=Tr.getExtension("EXT_texture_filter_anisotropic")||Tr.getExtension("MOZ_EXT_texture_filter_anisotropic")||Tr.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),b=Tr.getExtension("WEBGL_compressed_texture_s3tc")||Tr.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Tr.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),H||console.log("THREE.WebGLRenderer: Float textures not supported."),w||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),_||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),b||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===Tr.getShaderPrecisionFormat&&(Tr.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),Tr.clearColor(0,0,0,1),Tr.clearDepth(1),Tr.clearStencil(0),Tr.enable(Tr.DEPTH_TEST),Tr.depthFunc(Tr.LEQUAL),Tr.frontFace(Tr.CCW),Tr.cullFace(Tr.BACK),Tr.enable(Tr.CULL_FACE),Tr.enable(Tr.BLEND),Tr.blendEquation(Tr.FUNC_ADD),Tr.blendFunc(Tr.SRC_ALPHA,Tr.ONE_MINUS_SRC_ALPHA),Tr.clearColor(l.r,l.g,l.b,c);var ce=(this.context=Tr).getParameter(Tr.MAX_TEXTURE_IMAGE_UNITS),pe=Tr.getParameter(Tr.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Tr.getParameter(Tr.MAX_TEXTURE_SIZE);var ue=Tr.getParameter(Tr.MAX_CUBE_MAP_TEXTURE_SIZE),fe=_?Tr.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,de=0<pe,Ee=de&&H;b&&Tr.getParameter(Tr.COMPRESSED_TEXTURE_FORMATS);var me=Tr.getShaderPrecisionFormat(Tr.VERTEX_SHADER,Tr.HIGH_FLOAT),ge=Tr.getShaderPrecisionFormat(Tr.VERTEX_SHADER,Tr.MEDIUM_FLOAT);Tr.getShaderPrecisionFormat(Tr.VERTEX_SHADER,Tr.LOW_FLOAT);var Te=Tr.getShaderPrecisionFormat(Tr.FRAGMENT_SHADER,Tr.HIGH_FLOAT),ve=Tr.getShaderPrecisionFormat(Tr.FRAGMENT_SHADER,Tr.MEDIUM_FLOAT);Tr.getShaderPrecisionFormat(Tr.FRAGMENT_SHADER,Tr.LOW_FLOAT),Tr.getShaderPrecisionFormat(Tr.VERTEX_SHADER,Tr.HIGH_INT),Tr.getShaderPrecisionFormat(Tr.VERTEX_SHADER,Tr.MEDIUM_INT),Tr.getShaderPrecisionFormat(Tr.VERTEX_SHADER,Tr.LOW_INT),Tr.getShaderPrecisionFormat(Tr.FRAGMENT_SHADER,Tr.HIGH_INT),Tr.getShaderPrecisionFormat(Tr.FRAGMENT_SHADER,Tr.MEDIUM_INT),Tr.getShaderPrecisionFormat(Tr.FRAGMENT_SHADER,Tr.LOW_INT);var ye=0<me.precision&&0<Te.precision,Re=0<ge.precision&&0<ve.precision;"highp"!==x||ye||(Re?(x="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(x="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==x||Re||(x="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Tr},this.supportsVertexTextures=function(){return de},this.supportsFloatTextures=function(){return H},this.supportsStandardDerivatives=function(){return w},this.supportsCompressedTextureS3TC=function(){return b},this.getMaxAnisotropy=function(){return fe},this.getPrecision=function(){return x},this.setSize=function(e,t){X.width=e*this.devicePixelRatio,X.height=t*this.devicePixelRatio,X.style.width=e+"px",X.style.height=t+"px",this.setViewport(0,0,X.width,X.height)},this.setViewport=function(e,t,i,r){$=void 0!==e?e:0,ee=void 0!==t?t:0,te=void 0!==i?i:X.width,ie=void 0!==r?r:X.height,Tr.viewport($,ee,te,ie)},this.setScissor=function(e,t,i,r){Tr.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?Tr.enable(Tr.SCISSOR_TEST):Tr.disable(Tr.SCISSOR_TEST)},this.setClearColorHex=function(e,t){l.setHex(e),c=t,Tr.clearColor(l.r,l.g,l.b,c)},this.setClearColor=function(e,t){l.copy(e),c=t,Tr.clearColor(l.r,l.g,l.b,c)},this.getClearColor=function(){return l},this.getClearAlpha=function(){return c},this.clear=function(e,t,i){var r=0;void 0!==e&&!e||(r|=Tr.COLOR_BUFFER_BIT),void 0!==t&&!t||(r|=Tr.DEPTH_BUFFER_BIT),void 0!==i&&!i||(r|=Tr.STENCIL_BUFFER_BIT),Tr.clear(r)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){q=C=N=V=D=-1,he=!(Y=null),L=P=-1,this.shadowMapPlugin.update(e,t)};var wr=function(e){if((e=e.target).removeEventListener("dispose",wr),(e.__webglInit=void 0)!==e.__webglVertexBuffer&&Tr.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&Tr.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&Tr.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&Tr.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&Tr.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&Tr.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&Tr.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&Tr.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&Tr.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&Tr.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&Tr.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.geometryGroups)for(var t in e.geometryGroups){var i=e.geometryGroups[t];if(void 0!==i.numMorphTargets)for(var r=0,n=i.numMorphTargets;r<n;r++)Tr.deleteBuffer(i.__webglMorphTargetsBuffers[r]);if(void 0!==i.numMorphNormals)for(r=0,n=i.numMorphNormals;r<n;r++)Tr.deleteBuffer(i.__webglMorphNormalsBuffers[r]);o(i)}o(e),vr.info.memory.geometries--},xe=function(e){(e=e.target).removeEventListener("dispose",xe),e.image&&e.image.__webglTextureCube?Tr.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,Tr.deleteTexture(e.__webglTexture)),vr.info.memory.textures--},He=function(e){if((e=e.target).removeEventListener("dispose",He),e&&e.__webglTexture)if(Tr.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;t<6;t++)Tr.deleteFramebuffer(e.__webglFramebuffer[t]),Tr.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Tr.deleteFramebuffer(e.__webglFramebuffer),Tr.deleteRenderbuffer(e.__webglRenderbuffer);vr.info.memory.textures--},we=function(e){(e=e.target).removeEventListener("dispose",we),_e(e)},_e=function(e){var t=e.program;if(void 0!==t){e.program=void 0;for(var i,r=!1,e=0,n=S.length;e<n;e++)if((i=S[e]).program===t){i.usedTimes--,0===i.usedTimes&&(r=!0);break}if(!0===r){for(r=[],e=0,n=S.length;e<n;e++)(i=S[e]).program!==t&&r.push(i);S=r,Tr.deleteProgram(t),vr.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Tr.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Tr.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Tr.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Tr.createBuffer()),e.hasPositions&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,e.__webglVertexBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,e.positionArray,Tr.DYNAMIC_DRAW),Tr.enableVertexAttribArray(t.attributes.position),Tr.vertexAttribPointer(t.attributes.position,3,Tr.FLOAT,!1,0,0)),e.hasNormals){if(Tr.bindBuffer(Tr.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===THREE.FlatShading)for(var r,n,o,a,s,h,l,c=3*e.count,p=0;p<c;p+=9)r=(l=e.normalArray)[p],n=l[p+1],o=l[p+2],a=l[p+3],s=l[p+4],h=l[p+5],r=(r+a+l[p+6])/3,n=(n+s+l[p+7])/3,o=(o+h+l[p+8])/3,l[p]=r,l[p+1]=n,l[p+2]=o,l[p+3]=r,l[p+4]=n,l[p+5]=o,l[p+6]=r,l[p+7]=n,l[p+8]=o;Tr.bufferData(Tr.ARRAY_BUFFER,e.normalArray,Tr.DYNAMIC_DRAW),Tr.enableVertexAttribArray(t.attributes.normal),Tr.vertexAttribPointer(t.attributes.normal,3,Tr.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,e.__webglUvBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,e.uvArray,Tr.DYNAMIC_DRAW),Tr.enableVertexAttribArray(t.attributes.uv),Tr.vertexAttribPointer(t.attributes.uv,2,Tr.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,e.__webglColorBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,e.colorArray,Tr.DYNAMIC_DRAW),Tr.enableVertexAttribArray(t.attributes.color),Tr.vertexAttribPointer(t.attributes.color,3,Tr.FLOAT,!1,0,0)),Tr.drawArrays(Tr.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,o){if(!1!==r.visible)if(e=(i=f(e,t,i,r,o)).attributes,t=!1,(i=16777215*n.id+2*i.id+(r.wireframe?1:0))!==C&&(C=i,t=!0),t&&u(),o instanceof THREE.Mesh)if(r=n.attributes.index){1<(o=n.offsets).length&&(t=!0);for(var i=0,a=o.length;i<a;i++){var s,h,l,c=o[i].index;t&&(h=(s=n.attributes.position).itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,s.buffer),p(e.position),Tr.vertexAttribPointer(e.position,h,Tr.FLOAT,!1,0,4*c*h),h=n.attributes.normal,0<=e.normal&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.normal),Tr.vertexAttribPointer(e.normal,l,Tr.FLOAT,!1,0,4*c*l)),h=n.attributes.uv,0<=e.uv&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.uv),Tr.vertexAttribPointer(e.uv,l,Tr.FLOAT,!1,0,4*c*l)),h=n.attributes.color,0<=e.color&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.color),Tr.vertexAttribPointer(e.color,l,Tr.FLOAT,!1,0,4*c*l)),h=n.attributes.tangent,0<=e.tangent&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.tangent),Tr.vertexAttribPointer(e.tangent,l,Tr.FLOAT,!1,0,4*c*l)),Tr.bindBuffer(Tr.ELEMENT_ARRAY_BUFFER,r.buffer)),Tr.drawElements(Tr.TRIANGLES,o[i].count,Tr.UNSIGNED_SHORT,2*o[i].start),vr.info.render.calls++,vr.info.render.vertices+=o[i].count,vr.info.render.faces+=o[i].count/3}}else t&&(h=(s=n.attributes.position).itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,s.buffer),p(e.position),Tr.vertexAttribPointer(e.position,h,Tr.FLOAT,!1,0,0),h=n.attributes.normal,0<=e.normal&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.normal),Tr.vertexAttribPointer(e.normal,l,Tr.FLOAT,!1,0,0)),h=n.attributes.uv,0<=e.uv&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.uv),Tr.vertexAttribPointer(e.uv,l,Tr.FLOAT,!1,0,0)),h=n.attributes.color,0<=e.color&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.color),Tr.vertexAttribPointer(e.color,l,Tr.FLOAT,!1,0,0)),h=n.attributes.tangent,0<=e.tangent&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.tangent),Tr.vertexAttribPointer(e.tangent,l,Tr.FLOAT,!1,0,0))),Tr.drawArrays(Tr.TRIANGLES,0,s.numItems/3),vr.info.render.calls++,vr.info.render.vertices+=s.numItems/3,vr.info.render.faces+=s.numItems/3/3;else o instanceof THREE.ParticleSystem?t&&(h=(s=n.attributes.position).itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,s.buffer),p(e.position),Tr.vertexAttribPointer(e.position,h,Tr.FLOAT,!1,0,0),h=n.attributes.color,0<=e.color&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.color),Tr.vertexAttribPointer(e.color,l,Tr.FLOAT,!1,0,0)),Tr.drawArrays(Tr.POINTS,0,s.numItems/3),vr.info.render.calls++,vr.info.render.points+=s.numItems/3):o instanceof THREE.Line&&t&&(h=(s=n.attributes.position).itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,s.buffer),p(e.position),Tr.vertexAttribPointer(e.position,h,Tr.FLOAT,!1,0,0),h=n.attributes.color,0<=e.color&&h&&(l=h.itemSize,Tr.bindBuffer(Tr.ARRAY_BUFFER,h.buffer),p(e.color),Tr.vertexAttribPointer(e.color,l,Tr.FLOAT,!1,0,0)),v(r.linewidth),Tr.drawArrays(Tr.LINE_STRIP,0,s.numItems/3),vr.info.render.calls++,vr.info.render.points+=s.numItems)},this.renderBuffer=function(e,t,i,r,n,o){if(!1!==r.visible){e=(i=f(e,t,i,r,o)).attributes,t=!1;if((i=16777215*n.id+2*i.id+(r.wireframe?1:0))!==C&&(C=i,t=!0),t&&u(),!r.morphTargets&&0<=e.position)t&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglVertexBuffer),p(e.position),Tr.vertexAttribPointer(e.position,3,Tr.FLOAT,!1,0,0));else if(o.morphTargetBase){if(i=r.program.attributes,-1!==o.morphTargetBase&&0<=i.position?(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),p(i.position),Tr.vertexAttribPointer(i.position,3,Tr.FLOAT,!1,0,0)):0<=i.position&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglVertexBuffer),p(i.position),Tr.vertexAttribPointer(i.position,3,Tr.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length)for(var a=0,s=o.morphTargetForcedOrder,h=o.morphTargetInfluences;a<r.numSupportedMorphTargets&&a<s.length;)0<=i["morphTarget"+a]&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[s[a]]),p(i["morphTarget"+a]),Tr.vertexAttribPointer(i["morphTarget"+a],3,Tr.FLOAT,!1,0,0)),0<=i["morphNormal"+a]&&r.morphNormals&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[s[a]]),p(i["morphNormal"+a]),Tr.vertexAttribPointer(i["morphNormal"+a],3,Tr.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[a]=h[s[a]],a++;else{s=[];for(var l=(h=o.morphTargetInfluences).length,c=0;c<l;c++)0<(a=h[c])&&s.push([a,c]);for(s.length>r.numSupportedMorphTargets?(s.sort(ur),s.length=r.numSupportedMorphTargets):s.length>r.numSupportedMorphNormals?s.sort(ur):0===s.length&&s.push([0,0]),a=0;a<r.numSupportedMorphTargets;)s[a]?(c=s[a][1],0<=i["morphTarget"+a]&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[c]),p(i["morphTarget"+a]),Tr.vertexAttribPointer(i["morphTarget"+a],3,Tr.FLOAT,!1,0,0)),0<=i["morphNormal"+a]&&r.morphNormals&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[c]),p(i["morphNormal"+a]),Tr.vertexAttribPointer(i["morphNormal"+a],3,Tr.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[a]=h[c]):o.__webglMorphTargetInfluences[a]=0,a++}null!==r.program.uniforms.morphTargetInfluences&&Tr.uniform1fv(r.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(t){if(n.__webglCustomAttributesList)for(h=0,s=n.__webglCustomAttributesList.length;h<s;h++)0<=e[(i=n.__webglCustomAttributesList[h]).buffer.belongsToAttribute]&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,i.buffer),p(e[i.buffer.belongsToAttribute]),Tr.vertexAttribPointer(e[i.buffer.belongsToAttribute],i.size,Tr.FLOAT,!1,0,0));0<=e.color&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglColorBuffer),p(e.color),Tr.vertexAttribPointer(e.color,3,Tr.FLOAT,!1,0,0)),0<=e.normal&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglNormalBuffer),p(e.normal),Tr.vertexAttribPointer(e.normal,3,Tr.FLOAT,!1,0,0)),0<=e.tangent&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglTangentBuffer),p(e.tangent),Tr.vertexAttribPointer(e.tangent,4,Tr.FLOAT,!1,0,0)),0<=e.uv&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglUVBuffer),p(e.uv),Tr.vertexAttribPointer(e.uv,2,Tr.FLOAT,!1,0,0)),0<=e.uv2&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglUV2Buffer),p(e.uv2),Tr.vertexAttribPointer(e.uv2,2,Tr.FLOAT,!1,0,0)),r.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),p(e.skinIndex),Tr.vertexAttribPointer(e.skinIndex,4,Tr.FLOAT,!1,0,0),Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),p(e.skinWeight),Tr.vertexAttribPointer(e.skinWeight,4,Tr.FLOAT,!1,0,0)),0<=e.lineDistance&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,n.__webglLineDistanceBuffer),p(e.lineDistance),Tr.vertexAttribPointer(e.lineDistance,1,Tr.FLOAT,!1,0,0))}o instanceof THREE.Mesh?(r.wireframe?(v(r.wireframeLinewidth),t&&Tr.bindBuffer(Tr.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Tr.drawElements(Tr.LINES,n.__webglLineCount,Tr.UNSIGNED_SHORT,0)):(t&&Tr.bindBuffer(Tr.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Tr.drawElements(Tr.TRIANGLES,n.__webglFaceCount,Tr.UNSIGNED_SHORT,0)),vr.info.render.calls++,vr.info.render.vertices+=n.__webglFaceCount,vr.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?Tr.LINE_STRIP:Tr.LINES,v(r.linewidth),Tr.drawArrays(o,0,n.__webglLineCount),vr.info.render.calls++):o instanceof THREE.ParticleSystem?(Tr.drawArrays(Tr.POINTS,0,n.__webglParticleCount),vr.info.render.calls++,vr.info.render.points+=n.__webglParticleCount):o instanceof THREE.Ribbon&&(Tr.drawArrays(Tr.TRIANGLE_STRIP,0,n.__webglVertexCount),vr.info.render.calls++)}},this.render=function(e,t,i,r){if(!1==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var n,o,a=e.__lights,s=e.fog;for(q=-1,he=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Rr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ae.setFromMatrix(Rr),this.autoUpdateObjects&&this.initWebGLObjects(e),E(this.renderPluginsPre,e,t),vr.info.render.calls=0,vr.info.render.vertices=0,vr.info.render.faces=0,vr.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),r=0,n=(o=e.__webglObjects).length;r<n;r++){var h,l,c,p,u,f=(u=o[r]).object;u.render=!1,!f.visible||(f instanceof THREE.Mesh||f instanceof THREE.ParticleSystem)&&f.frustumCulled&&!ae.intersectsObject(f)||(T(f,t),l=(h=u).buffer,p=c=c=void 0,(p=h.object.material)instanceof THREE.MeshFaceMaterial?(c=l.materialIndex,(c=p.materials[c]).transparent?(h.transparent=c,h.opaque=null):(h.opaque=c,h.transparent=null)):(c=p)&&(c.transparent?(h.transparent=c,h.opaque=null):(h.opaque=c,h.transparent=null)),(u.render=!0)===this.sortObjects&&(null!==f.renderDepth?u.z=f.renderDepth:(Hr.getPositionFromMatrix(f.matrixWorld),Hr.applyProjection(Rr),u.z=Hr.z),u.id=f.id))}for(this.sortObjects&&o.sort(d),r=0,n=(o=e.__webglObjectsImmediate).length;r<n;r++)(f=(u=o[r]).object).visible&&(T(f,t),(f=u.object.material).transparent?(u.transparent=f,u.opaque=null):(u.opaque=f,u.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),y(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),m(e.__webglObjects,!1,"",t,a,s,!0,r),g(e.__webglObjectsImmediate,"",t,a,s,!1,r)):(r=null,this.setBlending(THREE.NoBlending),m(e.__webglObjects,!0,"opaque",t,a,s,!1,r),g(e.__webglObjectsImmediate,"opaque",t,a,s,!1,r),m(e.__webglObjects,!1,"transparent",t,a,s,!0,r),g(e.__webglObjectsImmediate,"transparent",t,a,s,!0,r)),E(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(i instanceof THREE.WebGLRenderTargetCube?(Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,i.__webglTexture),Tr.generateMipmap(Tr.TEXTURE_CUBE_MAP),Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,null)):(Tr.bindTexture(Tr.TEXTURE_2D,i.__webglTexture),Tr.generateMipmap(Tr.TEXTURE_2D),Tr.bindTexture(Tr.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,i,r,n){var o=f(e,t,i,r,n);C=-1,vr.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(o,Tr,ae):n.render(function(e){vr.renderBufferImmediate(e,o,r)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;){var t,i,r,n,o,a,s,h,l,c,p,u,f=e.__objectsAdded[0],d=e,E=void 0,m=void 0,g=void 0,T=void 0;if(!f.__webglInit)if(f.__webglInit=!0,f._modelViewMatrix=new THREE.Matrix4,f._normalMatrix=new THREE.Matrix3,void 0!==f.geometry&&void 0===f.geometry.__webglInit&&(f.geometry.__webglInit=!0,f.geometry.addEventListener("dispose",wr)),f instanceof THREE.Mesh)if(m=f.geometry,g=f.material,m instanceof THREE.Geometry){if(void 0===m.geometryGroups){var v,y=m,R=void 0,x=void 0,H=void 0,w=void 0,_=void 0,b={},S=y.morphTargets.length,M=y.morphNormals.length,A=g instanceof THREE.MeshFaceMaterial;for(y.geometryGroups={},R=0,v=y.faces.length;R<v;R++)x=y.faces[R],void 0===b[H=A?x.materialIndex:0]&&(b[H]={hash:H,counter:0}),_=b[H].hash+"_"+b[H].counter,void 0===y.geometryGroups[_]&&(y.geometryGroups[_]={faces3:[],faces4:[],materialIndex:H,vertices:0,numMorphTargets:S,numMorphNormals:M}),w=x instanceof THREE.Face3?3:4,65535<y.geometryGroups[_].vertices+w&&(b[H].counter+=1,_=b[H].hash+"_"+b[H].counter,void 0===y.geometryGroups[_]&&(y.geometryGroups[_]={faces3:[],faces4:[],materialIndex:H,vertices:0,numMorphTargets:S,numMorphNormals:M})),x instanceof THREE.Face3?y.geometryGroups[_].faces3.push(R):y.geometryGroups[_].faces4.push(R),y.geometryGroups[_].vertices+=w;y.geometryGroupsList=[];var C=void 0;for(C in y.geometryGroups)y.geometryGroups[C].id=yr++,y.geometryGroupsList.push(y.geometryGroups[C])}for(E in m.geometryGroups)if(!(T=m.geometryGroups[E]).__webglVertexBuffer){var P=T;P.__webglVertexBuffer=Tr.createBuffer(),P.__webglNormalBuffer=Tr.createBuffer(),P.__webglTangentBuffer=Tr.createBuffer(),P.__webglColorBuffer=Tr.createBuffer(),P.__webglUVBuffer=Tr.createBuffer(),P.__webglUV2Buffer=Tr.createBuffer(),P.__webglSkinIndicesBuffer=Tr.createBuffer(),P.__webglSkinWeightsBuffer=Tr.createBuffer(),P.__webglFaceBuffer=Tr.createBuffer(),P.__webglLineBuffer=Tr.createBuffer();var L=void 0,D=void 0;if(P.numMorphTargets)for(P.__webglMorphTargetsBuffers=[],L=0,D=P.numMorphTargets;L<D;L++)P.__webglMorphTargetsBuffers.push(Tr.createBuffer());if(P.numMorphNormals)for(P.__webglMorphNormalsBuffers=[],L=0,D=P.numMorphNormals;L<D;L++)P.__webglMorphNormalsBuffers.push(Tr.createBuffer());vr.info.memory.geometries++,ar(T,f),m.verticesNeedUpdate=!0,m.morphTargetsNeedUpdate=!0,m.elementsNeedUpdate=!0,m.uvsNeedUpdate=!0,m.normalsNeedUpdate=!0,m.tangentsNeedUpdate=!0,m.colorsNeedUpdate=!0}}else m instanceof THREE.BufferGeometry&&cr(m);else{f instanceof THREE.Ribbon?(m=f.geometry).__webglVertexBuffer||((t=m).__webglVertexBuffer=Tr.createBuffer(),t.__webglColorBuffer=Tr.createBuffer(),t.__webglNormalBuffer=Tr.createBuffer(),vr.info.memory.geometries++,r=f,n=(i=m).vertices.length,i.__vertexArray=new Float32Array(3*n),i.__colorArray=new Float32Array(3*n),i.__normalArray=new Float32Array(3*n),i.__webglVertexCount=n,or(i,r),m.verticesNeedUpdate=!0,m.colorsNeedUpdate=!0,m.normalsNeedUpdate=!0):f instanceof THREE.Line?(m=f.geometry).__webglVertexBuffer||(m instanceof THREE.Geometry?((o=m).__webglVertexBuffer=Tr.createBuffer(),o.__webglColorBuffer=Tr.createBuffer(),o.__webglLineDistanceBuffer=Tr.createBuffer(),vr.info.memory.geometries++,s=f,h=(a=m).vertices.length,a.__vertexArray=new Float32Array(3*h),a.__colorArray=new Float32Array(3*h),a.__lineDistanceArray=new Float32Array(+h),a.__webglLineCount=h,or(a,s),m.verticesNeedUpdate=!0,m.colorsNeedUpdate=!0,m.lineDistancesNeedUpdate=!0):m instanceof THREE.BufferGeometry&&cr(m)):f instanceof THREE.ParticleSystem&&!(m=f.geometry).__webglVertexBuffer&&(m instanceof THREE.Geometry?((l=m).__webglVertexBuffer=Tr.createBuffer(),l.__webglColorBuffer=Tr.createBuffer(),vr.info.memory.geometries++,p=f,u=(c=m).vertices.length,c.__vertexArray=new Float32Array(3*u),c.__colorArray=new Float32Array(3*u),c.__sortArray=[],c.__webglParticleCount=u,or(c,p),m.verticesNeedUpdate=!0,m.colorsNeedUpdate=!0):m instanceof THREE.BufferGeometry&&cr(m))}if(!f.__webglActive){if(f instanceof THREE.Mesh){if((m=f.geometry)instanceof THREE.BufferGeometry)fr(d.__webglObjects,m,f);else if(m instanceof THREE.Geometry)for(E in m.geometryGroups)T=m.geometryGroups[E],fr(d.__webglObjects,T,f)}else f instanceof THREE.Ribbon||f instanceof THREE.Line||f instanceof THREE.ParticleSystem?(m=f.geometry,fr(d.__webglObjects,m,f)):f instanceof THREE.ImmediateRenderObject||f.immediateRenderCallback?d.__webglObjectsImmediate.push({object:f,opaque:null,transparent:null}):f instanceof THREE.Sprite?d.__webglSprites.push(f):f instanceof THREE.LensFlare&&d.__webglFlares.push(f);f.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var F=e.__objectsRemoved[0],U=e;F instanceof THREE.Mesh||F instanceof THREE.ParticleSystem||F instanceof THREE.Ribbon||F instanceof THREE.Line?mr(U.__webglObjects,F):F instanceof THREE.Sprite?gr(U.__webglSprites,F):F instanceof THREE.LensFlare?gr(U.__webglFlares,F):(F instanceof THREE.ImmediateRenderObject||F.immediateRenderCallback)&&mr(U.__webglObjectsImmediate,F),F.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var z=0,V=e.__webglObjects.length;z<V;z++){var N=e.__webglObjects[z].object,B=N.geometry,I=void 0,O=void 0,G=void 0;if(N instanceof THREE.Mesh)if(B instanceof THREE.BufferGeometry)(B.verticesNeedUpdate||B.elementsNeedUpdate||B.uvsNeedUpdate||B.normalsNeedUpdate||B.colorsNeedUpdate||B.tangentsNeedUpdate)&&pr(B,Tr.DYNAMIC_DRAW,!B.dynamic),B.verticesNeedUpdate=!1,B.elementsNeedUpdate=!1,B.uvsNeedUpdate=!1,B.normalsNeedUpdate=!1,B.colorsNeedUpdate=!1,B.tangentsNeedUpdate=!1;else{for(var k=0,W=B.geometryGroupsList.length;k<W;k++)if(G=sr(N,I=B.geometryGroupsList[k]),B.buffersNeedUpdate&&ar(I,N),O=G.attributes&&dr(G),B.verticesNeedUpdate||B.morphTargetsNeedUpdate||B.elementsNeedUpdate||B.uvsNeedUpdate||B.normalsNeedUpdate||B.colorsNeedUpdate||B.tangentsNeedUpdate||O){var j=I,X=Tr.DYNAMIC_DRAW,Y=!B.dynamic,q=G;if(j.__inittedArrays){var K=hr(q),Q=!!q.vertexColors&&q.vertexColors,Z=lr(q),J=K===THREE.SmoothShading,$=void 0,ee=void 0,te=void 0,ie=void 0,re=void 0,ne=void 0,oe=void 0,ae=void 0,se=void 0,he=void 0,le=void 0,ce=void 0,pe=void 0,ue=void 0,fe=void 0,de=void 0,Ee=void 0,me=void 0,ge=void 0,Te=void 0,ve=void 0,ye=void 0,Re=void 0,xe=void 0,He=void 0,we=void 0,_e=void 0,be=void 0,Se=void 0,Me=void 0,Ae=void 0,Ce=void 0,Pe=void 0,Le=void 0,De=void 0,Fe=void 0,Ue=void 0,ze=void 0,Ve=void 0,Ne=void 0,Be=void 0,Ie=void 0,Oe=void 0,Ge=void 0,ke=void 0,We=0,je=0,Xe=0,Ye=0,qe=0,Ke=0,Qe=0,Ze=0,Je=0,$e=0,et=0,tt=0,it=void 0,rt=j.__vertexArray,nt=j.__uvArray,ot=j.__uv2Array,at=j.__normalArray,st=j.__tangentArray,ht=j.__colorArray,lt=j.__skinIndexArray,ct=j.__skinWeightArray,pt=j.__morphTargetsArrays,ut=j.__morphNormalsArrays,ft=j.__webglCustomAttributesList,dt=void 0,Et=j.__faceArray,mt=j.__lineArray,gt=N.geometry,Tt=gt.elementsNeedUpdate,vt=gt.uvsNeedUpdate,yt=gt.normalsNeedUpdate,Rt=gt.tangentsNeedUpdate,xt=gt.colorsNeedUpdate,Ht=gt.morphTargetsNeedUpdate,wt=gt.vertices,_t=j.faces3,bt=j.faces4,St=gt.faces,Mt=gt.faceVertexUvs[0],At=gt.faceVertexUvs[1],Ct=gt.skinIndices,Pt=gt.skinWeights,Lt=gt.morphTargets,Dt=gt.morphNormals;if(gt.verticesNeedUpdate){for($=0,ee=_t.length;$<ee;$++)le=wt[(te=St[_t[$]]).a],ce=wt[te.b],pe=wt[te.c],rt[je]=le.x,rt[je+1]=le.y,rt[je+2]=le.z,rt[je+3]=ce.x,rt[je+4]=ce.y,rt[je+5]=ce.z,rt[je+6]=pe.x,rt[je+7]=pe.y,rt[je+8]=pe.z,je+=9;for($=0,ee=bt.length;$<ee;$++)le=wt[(te=St[bt[$]]).a],ce=wt[te.b],pe=wt[te.c],ue=wt[te.d],rt[je]=le.x,rt[je+1]=le.y,rt[je+2]=le.z,rt[je+3]=ce.x,rt[je+4]=ce.y,rt[je+5]=ce.z,rt[je+6]=pe.x,rt[je+7]=pe.y,rt[je+8]=pe.z,rt[je+9]=ue.x,rt[je+10]=ue.y,rt[je+11]=ue.z,je+=12;Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglVertexBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,rt,X)}if(Ht)for(Ne=0,Be=Lt.length;Ne<Be;Ne++){for($=et=0,ee=_t.length;$<ee;$++)te=St[Ge=_t[$]],le=Lt[Ne].vertices[te.a],ce=Lt[Ne].vertices[te.b],pe=Lt[Ne].vertices[te.c],(Ie=pt[Ne])[et]=le.x,Ie[et+1]=le.y,Ie[et+2]=le.z,Ie[et+3]=ce.x,Ie[et+4]=ce.y,Ie[et+5]=ce.z,Ie[et+6]=pe.x,Ie[et+7]=pe.y,Ie[et+8]=pe.z,q.morphNormals&&(ve=J?(ge=(ke=Dt[Ne].vertexNormals[Ge]).a,Te=ke.b,ke.c):Te=ge=Dt[Ne].faceNormals[Ge],(Oe=ut[Ne])[et]=ge.x,Oe[et+1]=ge.y,Oe[et+2]=ge.z,Oe[et+3]=Te.x,Oe[et+4]=Te.y,Oe[et+5]=Te.z,Oe[et+6]=ve.x,Oe[et+7]=ve.y,Oe[et+8]=ve.z),et+=9;for($=0,ee=bt.length;$<ee;$++)te=St[Ge=bt[$]],le=Lt[Ne].vertices[te.a],ce=Lt[Ne].vertices[te.b],pe=Lt[Ne].vertices[te.c],ue=Lt[Ne].vertices[te.d],(Ie=pt[Ne])[et]=le.x,Ie[et+1]=le.y,Ie[et+2]=le.z,Ie[et+3]=ce.x,Ie[et+4]=ce.y,Ie[et+5]=ce.z,Ie[et+6]=pe.x,Ie[et+7]=pe.y,Ie[et+8]=pe.z,Ie[et+9]=ue.x,Ie[et+10]=ue.y,Ie[et+11]=ue.z,q.morphNormals&&(ye=J?(ge=(ke=Dt[Ne].vertexNormals[Ge]).a,Te=ke.b,ve=ke.c,ke.d):ve=Te=ge=Dt[Ne].faceNormals[Ge],(Oe=ut[Ne])[et]=ge.x,Oe[et+1]=ge.y,Oe[et+2]=ge.z,Oe[et+3]=Te.x,Oe[et+4]=Te.y,Oe[et+5]=Te.z,Oe[et+6]=ve.x,Oe[et+7]=ve.y,Oe[et+8]=ve.z,Oe[et+9]=ye.x,Oe[et+10]=ye.y,Oe[et+11]=ye.z),et+=12;Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglMorphTargetsBuffers[Ne]),Tr.bufferData(Tr.ARRAY_BUFFER,pt[Ne],X),q.morphNormals&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglMorphNormalsBuffers[Ne]),Tr.bufferData(Tr.ARRAY_BUFFER,ut[Ne],X))}if(Pt.length){for($=0,ee=_t.length;$<ee;$++)_e=Pt[(te=St[_t[$]]).a],be=Pt[te.b],Se=Pt[te.c],ct[$e]=_e.x,ct[$e+1]=_e.y,ct[$e+2]=_e.z,ct[$e+3]=_e.w,ct[$e+4]=be.x,ct[$e+5]=be.y,ct[$e+6]=be.z,ct[$e+7]=be.w,ct[$e+8]=Se.x,ct[$e+9]=Se.y,ct[$e+10]=Se.z,ct[$e+11]=Se.w,Ae=Ct[te.a],Ce=Ct[te.b],Pe=Ct[te.c],lt[$e]=Ae.x,lt[$e+1]=Ae.y,lt[$e+2]=Ae.z,lt[$e+3]=Ae.w,lt[$e+4]=Ce.x,lt[$e+5]=Ce.y,lt[$e+6]=Ce.z,lt[$e+7]=Ce.w,lt[$e+8]=Pe.x,lt[$e+9]=Pe.y,lt[$e+10]=Pe.z,lt[$e+11]=Pe.w,$e+=12;for($=0,ee=bt.length;$<ee;$++)_e=Pt[(te=St[bt[$]]).a],be=Pt[te.b],Se=Pt[te.c],Me=Pt[te.d],ct[$e]=_e.x,ct[$e+1]=_e.y,ct[$e+2]=_e.z,ct[$e+3]=_e.w,ct[$e+4]=be.x,ct[$e+5]=be.y,ct[$e+6]=be.z,ct[$e+7]=be.w,ct[$e+8]=Se.x,ct[$e+9]=Se.y,ct[$e+10]=Se.z,ct[$e+11]=Se.w,ct[$e+12]=Me.x,ct[$e+13]=Me.y,ct[$e+14]=Me.z,ct[$e+15]=Me.w,Ae=Ct[te.a],Ce=Ct[te.b],Pe=Ct[te.c],Le=Ct[te.d],lt[$e]=Ae.x,lt[$e+1]=Ae.y,lt[$e+2]=Ae.z,lt[$e+3]=Ae.w,lt[$e+4]=Ce.x,lt[$e+5]=Ce.y,lt[$e+6]=Ce.z,lt[$e+7]=Ce.w,lt[$e+8]=Pe.x,lt[$e+9]=Pe.y,lt[$e+10]=Pe.z,lt[$e+11]=Pe.w,lt[$e+12]=Le.x,lt[$e+13]=Le.y,lt[$e+14]=Le.z,lt[$e+15]=Le.w,$e+=16;0<$e&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglSkinIndicesBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,lt,X),Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglSkinWeightsBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,ct,X))}if(xt&&Q){for($=0,ee=_t.length;$<ee;$++)ne=(te=St[_t[$]]).vertexColors,oe=te.color,He=3===ne.length&&Q===THREE.VertexColors?(Re=ne[0],xe=ne[1],ne[2]):xe=Re=oe,ht[Je]=Re.r,ht[Je+1]=Re.g,ht[Je+2]=Re.b,ht[Je+3]=xe.r,ht[Je+4]=xe.g,ht[Je+5]=xe.b,ht[Je+6]=He.r,ht[Je+7]=He.g,ht[Je+8]=He.b,Je+=9;for($=0,ee=bt.length;$<ee;$++)ne=(te=St[bt[$]]).vertexColors,oe=te.color,we=4===ne.length&&Q===THREE.VertexColors?(Re=ne[0],xe=ne[1],He=ne[2],ne[3]):He=xe=Re=oe,ht[Je]=Re.r,ht[Je+1]=Re.g,ht[Je+2]=Re.b,ht[Je+3]=xe.r,ht[Je+4]=xe.g,ht[Je+5]=xe.b,ht[Je+6]=He.r,ht[Je+7]=He.g,ht[Je+8]=He.b,ht[Je+9]=we.r,ht[Je+10]=we.g,ht[Je+11]=we.b,Je+=12;0<Je&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglColorBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,ht,X))}if(Rt&&gt.hasTangents){for($=0,ee=_t.length;$<ee;$++)fe=(ae=(te=St[_t[$]]).vertexTangents)[0],de=ae[1],Ee=ae[2],st[Qe]=fe.x,st[Qe+1]=fe.y,st[Qe+2]=fe.z,st[Qe+3]=fe.w,st[Qe+4]=de.x,st[Qe+5]=de.y,st[Qe+6]=de.z,st[Qe+7]=de.w,st[Qe+8]=Ee.x,st[Qe+9]=Ee.y,st[Qe+10]=Ee.z,st[Qe+11]=Ee.w,Qe+=12;for($=0,ee=bt.length;$<ee;$++)fe=(ae=(te=St[bt[$]]).vertexTangents)[0],de=ae[1],Ee=ae[2],me=ae[3],st[Qe]=fe.x,st[Qe+1]=fe.y,st[Qe+2]=fe.z,st[Qe+3]=fe.w,st[Qe+4]=de.x,st[Qe+5]=de.y,st[Qe+6]=de.z,st[Qe+7]=de.w,st[Qe+8]=Ee.x,st[Qe+9]=Ee.y,st[Qe+10]=Ee.z,st[Qe+11]=Ee.w,st[Qe+12]=me.x,st[Qe+13]=me.y,st[Qe+14]=me.z,st[Qe+15]=me.w,Qe+=16;Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglTangentBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,st,X)}if(yt&&K){for($=0,ee=_t.length;$<ee;$++)if(ie=(te=St[_t[$]]).vertexNormals,re=te.normal,3===ie.length&&J)for(De=0;De<3;De++)Ue=ie[De],at[Ke]=Ue.x,at[Ke+1]=Ue.y,at[Ke+2]=Ue.z,Ke+=3;else for(De=0;De<3;De++)at[Ke]=re.x,at[Ke+1]=re.y,at[Ke+2]=re.z,Ke+=3;for($=0,ee=bt.length;$<ee;$++)if(ie=(te=St[bt[$]]).vertexNormals,re=te.normal,4===ie.length&&J)for(De=0;De<4;De++)Ue=ie[De],at[Ke]=Ue.x,at[Ke+1]=Ue.y,at[Ke+2]=Ue.z,Ke+=3;else for(De=0;De<4;De++)at[Ke]=re.x,at[Ke+1]=re.y,at[Ke+2]=re.z,Ke+=3;Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglNormalBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,at,X)}if(vt&&Mt&&Z){for($=0,ee=_t.length;$<ee;$++)if(void 0!==(se=Mt[_t[$]]))for(De=0;De<3;De++)ze=se[De],nt[Xe]=ze.x,nt[Xe+1]=ze.y,Xe+=2;for($=0,ee=bt.length;$<ee;$++)if(void 0!==(se=Mt[bt[$]]))for(De=0;De<4;De++)ze=se[De],nt[Xe]=ze.x,nt[Xe+1]=ze.y,Xe+=2;0<Xe&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglUVBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,nt,X))}if(vt&&At&&Z){for($=0,ee=_t.length;$<ee;$++)if(void 0!==(he=At[_t[$]]))for(De=0;De<3;De++)Ve=he[De],ot[Ye]=Ve.x,ot[Ye+1]=Ve.y,Ye+=2;for($=0,ee=bt.length;$<ee;$++)if(void 0!==(he=At[bt[$]]))for(De=0;De<4;De++)Ve=he[De],ot[Ye]=Ve.x,ot[Ye+1]=Ve.y,Ye+=2;0<Ye&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,j.__webglUV2Buffer),Tr.bufferData(Tr.ARRAY_BUFFER,ot,X))}if(Tt){for($=0,ee=_t.length;$<ee;$++)Et[qe]=We,Et[qe+1]=We+1,Et[qe+2]=We+2,qe+=3,mt[Ze]=We,mt[Ze+1]=We+1,mt[Ze+2]=We,mt[Ze+3]=We+2,mt[Ze+4]=We+1,mt[Ze+5]=We+2,Ze+=6,We+=3;for($=0,ee=bt.length;$<ee;$++)Et[qe]=We,Et[qe+1]=We+1,Et[qe+2]=We+3,Et[qe+3]=We+1,Et[qe+4]=We+2,Et[qe+5]=We+3,qe+=6,mt[Ze]=We,mt[Ze+1]=We+1,mt[Ze+2]=We,mt[Ze+3]=We+3,mt[Ze+4]=We+1,mt[Ze+5]=We+2,mt[Ze+6]=We+2,mt[Ze+7]=We+3,Ze+=8,We+=4;Tr.bindBuffer(Tr.ELEMENT_ARRAY_BUFFER,j.__webglFaceBuffer),Tr.bufferData(Tr.ELEMENT_ARRAY_BUFFER,Et,X),Tr.bindBuffer(Tr.ELEMENT_ARRAY_BUFFER,j.__webglLineBuffer),Tr.bufferData(Tr.ELEMENT_ARRAY_BUFFER,mt,X)}if(ft)for(De=0,Fe=ft.length;De<Fe;De++)if((dt=ft[De]).__original.needsUpdate){if(tt=0,1===dt.size){if(void 0===dt.boundTo||"vertices"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)te=St[_t[$]],dt.array[tt]=dt.value[te.a],dt.array[tt+1]=dt.value[te.b],dt.array[tt+2]=dt.value[te.c],tt+=3;for($=0,ee=bt.length;$<ee;$++)te=St[bt[$]],dt.array[tt]=dt.value[te.a],dt.array[tt+1]=dt.value[te.b],dt.array[tt+2]=dt.value[te.c],dt.array[tt+3]=dt.value[te.d],tt+=4}else if("faces"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)it=dt.value[_t[$]],dt.array[tt]=it,dt.array[tt+1]=it,dt.array[tt+2]=it,tt+=3;for($=0,ee=bt.length;$<ee;$++)it=dt.value[bt[$]],dt.array[tt]=it,dt.array[tt+1]=it,dt.array[tt+2]=it,dt.array[tt+3]=it,tt+=4}}else if(2===dt.size){if(void 0===dt.boundTo||"vertices"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)te=St[_t[$]],le=dt.value[te.a],ce=dt.value[te.b],pe=dt.value[te.c],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=ce.x,dt.array[tt+3]=ce.y,dt.array[tt+4]=pe.x,dt.array[tt+5]=pe.y,tt+=6;for($=0,ee=bt.length;$<ee;$++)te=St[bt[$]],le=dt.value[te.a],ce=dt.value[te.b],pe=dt.value[te.c],ue=dt.value[te.d],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=ce.x,dt.array[tt+3]=ce.y,dt.array[tt+4]=pe.x,dt.array[tt+5]=pe.y,dt.array[tt+6]=ue.x,dt.array[tt+7]=ue.y,tt+=8}else if("faces"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)pe=ce=le=it=dt.value[_t[$]],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=ce.x,dt.array[tt+3]=ce.y,dt.array[tt+4]=pe.x,dt.array[tt+5]=pe.y,tt+=6;for($=0,ee=bt.length;$<ee;$++)ue=pe=ce=le=it=dt.value[bt[$]],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=ce.x,dt.array[tt+3]=ce.y,dt.array[tt+4]=pe.x,dt.array[tt+5]=pe.y,dt.array[tt+6]=ue.x,dt.array[tt+7]=ue.y,tt+=8}}else if(3===dt.size){var Ft="c"===dt.type?["r","g","b"]:["x","y","z"];if(void 0===dt.boundTo||"vertices"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)te=St[_t[$]],le=dt.value[te.a],ce=dt.value[te.b],pe=dt.value[te.c],dt.array[tt]=le[Ft[0]],dt.array[tt+1]=le[Ft[1]],dt.array[tt+2]=le[Ft[2]],dt.array[tt+3]=ce[Ft[0]],dt.array[tt+4]=ce[Ft[1]],dt.array[tt+5]=ce[Ft[2]],dt.array[tt+6]=pe[Ft[0]],dt.array[tt+7]=pe[Ft[1]],dt.array[tt+8]=pe[Ft[2]],tt+=9;for($=0,ee=bt.length;$<ee;$++)te=St[bt[$]],le=dt.value[te.a],ce=dt.value[te.b],pe=dt.value[te.c],ue=dt.value[te.d],dt.array[tt]=le[Ft[0]],dt.array[tt+1]=le[Ft[1]],dt.array[tt+2]=le[Ft[2]],dt.array[tt+3]=ce[Ft[0]],dt.array[tt+4]=ce[Ft[1]],dt.array[tt+5]=ce[Ft[2]],dt.array[tt+6]=pe[Ft[0]],dt.array[tt+7]=pe[Ft[1]],dt.array[tt+8]=pe[Ft[2]],dt.array[tt+9]=ue[Ft[0]],dt.array[tt+10]=ue[Ft[1]],dt.array[tt+11]=ue[Ft[2]],tt+=12}else if("faces"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)pe=ce=le=it=dt.value[_t[$]],dt.array[tt]=le[Ft[0]],dt.array[tt+1]=le[Ft[1]],dt.array[tt+2]=le[Ft[2]],dt.array[tt+3]=ce[Ft[0]],dt.array[tt+4]=ce[Ft[1]],dt.array[tt+5]=ce[Ft[2]],dt.array[tt+6]=pe[Ft[0]],dt.array[tt+7]=pe[Ft[1]],dt.array[tt+8]=pe[Ft[2]],tt+=9;for($=0,ee=bt.length;$<ee;$++)ue=pe=ce=le=it=dt.value[bt[$]],dt.array[tt]=le[Ft[0]],dt.array[tt+1]=le[Ft[1]],dt.array[tt+2]=le[Ft[2]],dt.array[tt+3]=ce[Ft[0]],dt.array[tt+4]=ce[Ft[1]],dt.array[tt+5]=ce[Ft[2]],dt.array[tt+6]=pe[Ft[0]],dt.array[tt+7]=pe[Ft[1]],dt.array[tt+8]=pe[Ft[2]],dt.array[tt+9]=ue[Ft[0]],dt.array[tt+10]=ue[Ft[1]],dt.array[tt+11]=ue[Ft[2]],tt+=12}else if("faceVertices"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)le=(it=dt.value[_t[$]])[0],ce=it[1],pe=it[2],dt.array[tt]=le[Ft[0]],dt.array[tt+1]=le[Ft[1]],dt.array[tt+2]=le[Ft[2]],dt.array[tt+3]=ce[Ft[0]],dt.array[tt+4]=ce[Ft[1]],dt.array[tt+5]=ce[Ft[2]],dt.array[tt+6]=pe[Ft[0]],dt.array[tt+7]=pe[Ft[1]],dt.array[tt+8]=pe[Ft[2]],tt+=9;for($=0,ee=bt.length;$<ee;$++)le=(it=dt.value[bt[$]])[0],ce=it[1],pe=it[2],ue=it[3],dt.array[tt]=le[Ft[0]],dt.array[tt+1]=le[Ft[1]],dt.array[tt+2]=le[Ft[2]],dt.array[tt+3]=ce[Ft[0]],dt.array[tt+4]=ce[Ft[1]],dt.array[tt+5]=ce[Ft[2]],dt.array[tt+6]=pe[Ft[0]],dt.array[tt+7]=pe[Ft[1]],dt.array[tt+8]=pe[Ft[2]],dt.array[tt+9]=ue[Ft[0]],dt.array[tt+10]=ue[Ft[1]],dt.array[tt+11]=ue[Ft[2]],tt+=12}}else if(4===dt.size)if(void 0===dt.boundTo||"vertices"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)te=St[_t[$]],le=dt.value[te.a],ce=dt.value[te.b],pe=dt.value[te.c],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=le.z,dt.array[tt+3]=le.w,dt.array[tt+4]=ce.x,dt.array[tt+5]=ce.y,dt.array[tt+6]=ce.z,dt.array[tt+7]=ce.w,dt.array[tt+8]=pe.x,dt.array[tt+9]=pe.y,dt.array[tt+10]=pe.z,dt.array[tt+11]=pe.w,tt+=12;for($=0,ee=bt.length;$<ee;$++)te=St[bt[$]],le=dt.value[te.a],ce=dt.value[te.b],pe=dt.value[te.c],ue=dt.value[te.d],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=le.z,dt.array[tt+3]=le.w,dt.array[tt+4]=ce.x,dt.array[tt+5]=ce.y,dt.array[tt+6]=ce.z,dt.array[tt+7]=ce.w,dt.array[tt+8]=pe.x,dt.array[tt+9]=pe.y,dt.array[tt+10]=pe.z,dt.array[tt+11]=pe.w,dt.array[tt+12]=ue.x,dt.array[tt+13]=ue.y,dt.array[tt+14]=ue.z,dt.array[tt+15]=ue.w,tt+=16}else if("faces"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)pe=ce=le=it=dt.value[_t[$]],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=le.z,dt.array[tt+3]=le.w,dt.array[tt+4]=ce.x,dt.array[tt+5]=ce.y,dt.array[tt+6]=ce.z,dt.array[tt+7]=ce.w,dt.array[tt+8]=pe.x,dt.array[tt+9]=pe.y,dt.array[tt+10]=pe.z,dt.array[tt+11]=pe.w,tt+=12;for($=0,ee=bt.length;$<ee;$++)ue=pe=ce=le=it=dt.value[bt[$]],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=le.z,dt.array[tt+3]=le.w,dt.array[tt+4]=ce.x,dt.array[tt+5]=ce.y,dt.array[tt+6]=ce.z,dt.array[tt+7]=ce.w,dt.array[tt+8]=pe.x,dt.array[tt+9]=pe.y,dt.array[tt+10]=pe.z,dt.array[tt+11]=pe.w,dt.array[tt+12]=ue.x,dt.array[tt+13]=ue.y,dt.array[tt+14]=ue.z,dt.array[tt+15]=ue.w,tt+=16}else if("faceVertices"===dt.boundTo){for($=0,ee=_t.length;$<ee;$++)le=(it=dt.value[_t[$]])[0],ce=it[1],pe=it[2],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=le.z,dt.array[tt+3]=le.w,dt.array[tt+4]=ce.x,dt.array[tt+5]=ce.y,dt.array[tt+6]=ce.z,dt.array[tt+7]=ce.w,dt.array[tt+8]=pe.x,dt.array[tt+9]=pe.y,dt.array[tt+10]=pe.z,dt.array[tt+11]=pe.w,tt+=12;for($=0,ee=bt.length;$<ee;$++)le=(it=dt.value[bt[$]])[0],ce=it[1],pe=it[2],ue=it[3],dt.array[tt]=le.x,dt.array[tt+1]=le.y,dt.array[tt+2]=le.z,dt.array[tt+3]=le.w,dt.array[tt+4]=ce.x,dt.array[tt+5]=ce.y,dt.array[tt+6]=ce.z,dt.array[tt+7]=ce.w,dt.array[tt+8]=pe.x,dt.array[tt+9]=pe.y,dt.array[tt+10]=pe.z,dt.array[tt+11]=pe.w,dt.array[tt+12]=ue.x,dt.array[tt+13]=ue.y,dt.array[tt+14]=ue.z,dt.array[tt+15]=ue.w,tt+=16}Tr.bindBuffer(Tr.ARRAY_BUFFER,dt.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,dt.array,X)}Y&&(delete j.__inittedArrays,delete j.__colorArray,delete j.__normalArray,delete j.__tangentArray,delete j.__uvArray,delete j.__uv2Array,delete j.__faceArray,delete j.__vertexArray,delete j.__lineArray,delete j.__skinIndexArray,delete j.__skinWeightArray)}}B.verticesNeedUpdate=!1,B.morphTargetsNeedUpdate=!1,B.elementsNeedUpdate=!1,B.uvsNeedUpdate=!1,B.normalsNeedUpdate=!1,B.colorsNeedUpdate=!1,B.tangentsNeedUpdate=!1,B.buffersNeedUpdate=!1,G.attributes&&Er(G)}else if(N instanceof THREE.Ribbon){if(O=(G=sr(N,B)).attributes&&dr(G),B.verticesNeedUpdate||B.colorsNeedUpdate||B.normalsNeedUpdate||O){var Ut=B,zt=Tr.DYNAMIC_DRAW,Vt=void 0,Nt=void 0,Bt=void 0,It=void 0,Ot=void 0,Gt=void 0,kt=void 0,Wt=void 0,jt=void 0,Xt=void 0,Yt=void 0,qt=void 0,Kt=void 0,Qt=Ut.vertices,Zt=Ut.colors,Jt=Ut.normals,$t=Qt.length,ei=Zt.length,ti=Jt.length,ii=Ut.__vertexArray,ri=Ut.__colorArray,ni=Ut.__normalArray,oi=Ut.colorsNeedUpdate,ai=Ut.normalsNeedUpdate,si=Ut.__webglCustomAttributesList;if(Ut.verticesNeedUpdate){for(Vt=0;Vt<$t;Vt++)It=Qt[Vt],ii[Ot=3*Vt]=It.x,ii[Ot+1]=It.y,ii[Ot+2]=It.z;Tr.bindBuffer(Tr.ARRAY_BUFFER,Ut.__webglVertexBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,ii,zt)}if(oi){for(Nt=0;Nt<ei;Nt++)Gt=Zt[Nt],ri[Ot=3*Nt]=Gt.r,ri[Ot+1]=Gt.g,ri[Ot+2]=Gt.b;Tr.bindBuffer(Tr.ARRAY_BUFFER,Ut.__webglColorBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,ri,zt)}if(ai){for(Bt=0;Bt<ti;Bt++)kt=Jt[Bt],ni[Ot=3*Bt]=kt.x,ni[Ot+1]=kt.y,ni[Ot+2]=kt.z;Tr.bindBuffer(Tr.ARRAY_BUFFER,Ut.__webglNormalBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,ni,zt)}if(si)for(Wt=0,jt=si.length;Wt<jt;Wt++)if((qt=si[Wt]).needsUpdate&&(void 0===qt.boundTo||"vertices"===qt.boundTo)){if(Ot=0,Yt=qt.value.length,1===qt.size)for(Xt=0;Xt<Yt;Xt++)qt.array[Xt]=qt.value[Xt];else if(2===qt.size)for(Xt=0;Xt<Yt;Xt++)Kt=qt.value[Xt],qt.array[Ot]=Kt.x,qt.array[Ot+1]=Kt.y,Ot+=2;else if(3===qt.size)if("c"===qt.type)for(Xt=0;Xt<Yt;Xt++)Kt=qt.value[Xt],qt.array[Ot]=Kt.r,qt.array[Ot+1]=Kt.g,qt.array[Ot+2]=Kt.b,Ot+=3;else for(Xt=0;Xt<Yt;Xt++)Kt=qt.value[Xt],qt.array[Ot]=Kt.x,qt.array[Ot+1]=Kt.y,qt.array[Ot+2]=Kt.z,Ot+=3;else if(4===qt.size)for(Xt=0;Xt<Yt;Xt++)Kt=qt.value[Xt],qt.array[Ot]=Kt.x,qt.array[Ot+1]=Kt.y,qt.array[Ot+2]=Kt.z,qt.array[Ot+3]=Kt.w,Ot+=4;Tr.bindBuffer(Tr.ARRAY_BUFFER,qt.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,qt.array,zt)}}B.verticesNeedUpdate=!1,B.colorsNeedUpdate=!1,B.normalsNeedUpdate=!1,G.attributes&&Er(G)}else if(N instanceof THREE.Line)if(B instanceof THREE.BufferGeometry)(B.verticesNeedUpdate||B.colorsNeedUpdate)&&pr(B,Tr.DYNAMIC_DRAW,!B.dynamic),B.verticesNeedUpdate=!1,B.colorsNeedUpdate=!1;else{if(O=(G=sr(N,B)).attributes&&dr(G),B.verticesNeedUpdate||B.colorsNeedUpdate||B.lineDistancesNeedUpdate||O){var hi=B,li=Tr.DYNAMIC_DRAW,ci=void 0,pi=void 0,ui=void 0,fi=void 0,di=void 0,Ei=void 0,mi=hi.vertices,gi=hi.colors,Ti=hi.lineDistances,vi=mi.length,yi=gi.length,Ri=Ti.length,xi=hi.__vertexArray,Hi=hi.__colorArray,wi=hi.__lineDistanceArray,_i=hi.colorsNeedUpdate,bi=hi.lineDistancesNeedUpdate,Si=hi.__webglCustomAttributesList,Mi=void 0,Ai=void 0,Ci=void 0,Pi=void 0,Li=void 0,Di=void 0;if(hi.verticesNeedUpdate){for(ci=0;ci<vi;ci++)fi=mi[ci],xi[di=3*ci]=fi.x,xi[di+1]=fi.y,xi[di+2]=fi.z;Tr.bindBuffer(Tr.ARRAY_BUFFER,hi.__webglVertexBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,xi,li)}if(_i){for(pi=0;pi<yi;pi++)Ei=gi[pi],Hi[di=3*pi]=Ei.r,Hi[di+1]=Ei.g,Hi[di+2]=Ei.b;Tr.bindBuffer(Tr.ARRAY_BUFFER,hi.__webglColorBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,Hi,li)}if(bi){for(ui=0;ui<Ri;ui++)wi[ui]=Ti[ui];Tr.bindBuffer(Tr.ARRAY_BUFFER,hi.__webglLineDistanceBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,wi,li)}if(Si)for(Mi=0,Ai=Si.length;Mi<Ai;Mi++)if((Di=Si[Mi]).needsUpdate&&(void 0===Di.boundTo||"vertices"===Di.boundTo)){if(di=0,Pi=Di.value.length,1===Di.size)for(Ci=0;Ci<Pi;Ci++)Di.array[Ci]=Di.value[Ci];else if(2===Di.size)for(Ci=0;Ci<Pi;Ci++)Li=Di.value[Ci],Di.array[di]=Li.x,Di.array[di+1]=Li.y,di+=2;else if(3===Di.size)if("c"===Di.type)for(Ci=0;Ci<Pi;Ci++)Li=Di.value[Ci],Di.array[di]=Li.r,Di.array[di+1]=Li.g,Di.array[di+2]=Li.b,di+=3;else for(Ci=0;Ci<Pi;Ci++)Li=Di.value[Ci],Di.array[di]=Li.x,Di.array[di+1]=Li.y,Di.array[di+2]=Li.z,di+=3;else if(4===Di.size)for(Ci=0;Ci<Pi;Ci++)Li=Di.value[Ci],Di.array[di]=Li.x,Di.array[di+1]=Li.y,Di.array[di+2]=Li.z,Di.array[di+3]=Li.w,di+=4;Tr.bindBuffer(Tr.ARRAY_BUFFER,Di.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,Di.array,li)}}B.verticesNeedUpdate=!1,B.colorsNeedUpdate=!1,B.lineDistancesNeedUpdate=!1,G.attributes&&Er(G)}else if(N instanceof THREE.ParticleSystem)if(B instanceof THREE.BufferGeometry)(B.verticesNeedUpdate||B.colorsNeedUpdate)&&pr(B,Tr.DYNAMIC_DRAW,!B.dynamic),B.verticesNeedUpdate=!1,B.colorsNeedUpdate=!1;else{if(O=(G=sr(N,B)).attributes&&dr(G),B.verticesNeedUpdate||B.colorsNeedUpdate||N.sortParticles||O){var Fi=B,Ui=Tr.DYNAMIC_DRAW,zi=N,Vi=void 0,Ni=void 0,Bi=void 0,Ii=void 0,Oi=void 0,Gi=void 0,ki=Fi.vertices,Wi=ki.length,ji=Fi.colors,Xi=ji.length,Yi=Fi.__vertexArray,qi=Fi.__colorArray,Ki=Fi.__sortArray,Qi=Fi.verticesNeedUpdate,Zi=Fi.colorsNeedUpdate,Ji=Fi.__webglCustomAttributesList,$i=void 0,er=void 0,tr=void 0,ir=void 0,rr=void 0,nr=void 0;if(zi.sortParticles){for(xr.copy(Rr),xr.multiply(zi.matrixWorld),Vi=0;Vi<Wi;Vi++)Bi=ki[Vi],Hr.copy(Bi),Hr.applyProjection(xr),Ki[Vi]=[Hr.z,Vi];for(Ki.sort(ur),Vi=0;Vi<Wi;Vi++)Bi=ki[Ki[Vi][1]],Yi[Ii=3*Vi]=Bi.x,Yi[Ii+1]=Bi.y,Yi[Ii+2]=Bi.z;for(Ni=0;Ni<Xi;Ni++)Ii=3*Ni,Gi=ji[Ki[Ni][1]],qi[Ii]=Gi.r,qi[Ii+1]=Gi.g,qi[Ii+2]=Gi.b;if(Ji)for($i=0,er=Ji.length;$i<er;$i++)if(void 0===(nr=Ji[$i]).boundTo||"vertices"===nr.boundTo)if(Ii=0,ir=nr.value.length,1===nr.size)for(tr=0;tr<ir;tr++)Oi=Ki[tr][1],nr.array[tr]=nr.value[Oi];else if(2===nr.size)for(tr=0;tr<ir;tr++)Oi=Ki[tr][1],rr=nr.value[Oi],nr.array[Ii]=rr.x,nr.array[Ii+1]=rr.y,Ii+=2;else if(3===nr.size)if("c"===nr.type)for(tr=0;tr<ir;tr++)Oi=Ki[tr][1],rr=nr.value[Oi],nr.array[Ii]=rr.r,nr.array[Ii+1]=rr.g,nr.array[Ii+2]=rr.b,Ii+=3;else for(tr=0;tr<ir;tr++)Oi=Ki[tr][1],rr=nr.value[Oi],nr.array[Ii]=rr.x,nr.array[Ii+1]=rr.y,nr.array[Ii+2]=rr.z,Ii+=3;else if(4===nr.size)for(tr=0;tr<ir;tr++)Oi=Ki[tr][1],rr=nr.value[Oi],nr.array[Ii]=rr.x,nr.array[Ii+1]=rr.y,nr.array[Ii+2]=rr.z,nr.array[Ii+3]=rr.w,Ii+=4}else{if(Qi)for(Vi=0;Vi<Wi;Vi++)Bi=ki[Vi],Yi[Ii=3*Vi]=Bi.x,Yi[Ii+1]=Bi.y,Yi[Ii+2]=Bi.z;if(Zi)for(Ni=0;Ni<Xi;Ni++)Gi=ji[Ni],qi[Ii=3*Ni]=Gi.r,qi[Ii+1]=Gi.g,qi[Ii+2]=Gi.b;if(Ji)for($i=0,er=Ji.length;$i<er;$i++)if((nr=Ji[$i]).needsUpdate&&(void 0===nr.boundTo||"vertices"===nr.boundTo))if(ir=nr.value.length,Ii=0,1===nr.size)for(tr=0;tr<ir;tr++)nr.array[tr]=nr.value[tr];else if(2===nr.size)for(tr=0;tr<ir;tr++)rr=nr.value[tr],nr.array[Ii]=rr.x,nr.array[Ii+1]=rr.y,Ii+=2;else if(3===nr.size)if("c"===nr.type)for(tr=0;tr<ir;tr++)rr=nr.value[tr],nr.array[Ii]=rr.r,nr.array[Ii+1]=rr.g,nr.array[Ii+2]=rr.b,Ii+=3;else for(tr=0;tr<ir;tr++)rr=nr.value[tr],nr.array[Ii]=rr.x,nr.array[Ii+1]=rr.y,nr.array[Ii+2]=rr.z,Ii+=3;else if(4===nr.size)for(tr=0;tr<ir;tr++)rr=nr.value[tr],nr.array[Ii]=rr.x,nr.array[Ii+1]=rr.y,nr.array[Ii+2]=rr.z,nr.array[Ii+3]=rr.w,Ii+=4}if((Qi||zi.sortParticles)&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,Fi.__webglVertexBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,Yi,Ui)),(Zi||zi.sortParticles)&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,Fi.__webglColorBuffer),Tr.bufferData(Tr.ARRAY_BUFFER,qi,Ui)),Ji)for($i=0,er=Ji.length;$i<er;$i++)((nr=Ji[$i]).needsUpdate||zi.sortParticles)&&(Tr.bindBuffer(Tr.ARRAY_BUFFER,nr.buffer),Tr.bufferData(Tr.ARRAY_BUFFER,nr.array,Ui))}B.verticesNeedUpdate=!1,B.colorsNeedUpdate=!1,G.attributes&&Er(G)}}},this.initMaterial=function(e,t,i,r){var n,o,a,s,h,l,c,p,u,f,d,E,m;for(e.addEventListener("dispose",we),e instanceof THREE.MeshDepthMaterial?u="depth":e instanceof THREE.MeshNormalMaterial?u="normal":e instanceof THREE.MeshBasicMaterial?u="basic":e instanceof THREE.MeshLambertMaterial?u="lambert":e instanceof THREE.MeshPhongMaterial?u="phong":e instanceof THREE.LineBasicMaterial?u="basic":e instanceof THREE.LineDashedMaterial?u="dashed":e instanceof THREE.ParticleBasicMaterial&&(u="particle_basic"),u&&(f=THREE.ShaderLib[u],e.uniforms=THREE.UniformsUtils.clone(f.uniforms),e.vertexShader=f.vertexShader,e.fragmentShader=f.fragmentShader),n=a=E=m=f=0,o=t.length;n<o;n++)(d=t[n]).onlyShadow||(d instanceof THREE.DirectionalLight&&a++,d instanceof THREE.PointLight&&E++,d instanceof THREE.SpotLight&&m++,d instanceof THREE.HemisphereLight&&f++);for(n=a,o=E,a=m,s=f,f=d=0,m=t.length;f<m;f++)(E=t[f]).castShadow&&(E instanceof THREE.SpotLight&&d++,E instanceof THREE.DirectionalLight&&!E.shadowCascade&&d++);p=d,c=Ee&&r&&r.useVertexTexture?1024:(t=Tr.getParameter(Tr.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&((t=Math.min(r.bones.length,t))<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),t);e:{E=e.fragmentShader,m=e.vertexShader,f=e.uniforms,t=e.attributes,d=e.defines;var g,T,v,y,i={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:c,useVertexTexture:Ee&&r&&r.useVertexTexture,boneTextureWidth:r&&r.boneTextureWidth,boneTextureHeight:r&&r.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:p,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},r=[];for(T in u?r.push(u):(r.push(E),r.push(m)),d)r.push(T),r.push(d[T]);for(g in i)r.push(g),r.push(i[g]);for(u=r.join(),g=0,T=S.length;g<T;g++)if((r=S[g]).code===u){r.usedTimes++,l=r.program;break e}for(v in g="SHADOWMAP_TYPE_BASIC",i.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT"),T=[],d)!1!==(r=d[v])&&(r="#define "+v+" "+r,T.push(r));for(y in r=T.join("\n"),v=Tr.createProgram(),T=["precision "+x+" float;",r,de?"#define VERTEX_TEXTURES":"",vr.gammaInput?"#define GAMMA_INPUT":"",vr.gammaOutput?"#define GAMMA_OUTPUT":"",vr.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.boneTextureWidth?"#define N_BONE_PIXEL_X "+i.boneTextureWidth.toFixed(1):"",i.boneTextureHeight?"#define N_BONE_PIXEL_Y "+i.boneTextureHeight.toFixed(1):"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),g=R("fragment",(g=["precision "+x+" float;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",r,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",vr.gammaInput?"#define GAMMA_INPUT":"",vr.gammaOutput?"#define GAMMA_OUTPUT":"",vr.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"))+E),T=R("vertex",T+m),Tr.attachShader(v,T),Tr.attachShader(v,g),Tr.linkProgram(v),Tr.getProgramParameter(v,Tr.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+Tr.getProgramParameter(v,Tr.VALIDATE_STATUS)+", gl error ["+Tr.getError()+"]"),Tr.deleteShader(g),Tr.deleteShader(T),v.uniforms={},v.attributes={},g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),i.useVertexTexture?g.push("boneTexture"):g.push("boneGlobalMatrices"),f)g.push(y);for(y=g,g=0,T=y.length;g<T;g++)f=y[g],v.uniforms[f]=Tr.getUniformLocation(v,f);for(g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),y=0;y<i.maxMorphTargets;y++)g.push("morphTarget"+y);for(y=0;y<i.maxMorphNormals;y++)g.push("morphNormal"+y);for(l in t)g.push(l);for(y=0,t=(l=g).length;y<t;y++)g=l[y],v.attributes[g]=Tr.getAttribLocation(v,g);v.id=M++,S.push({program:v,code:u,usedTimes:1}),vr.info.memory.programs=S.length,l=v}if(e.program=l,y=e.program.attributes,e.morphTargets)for(t="morphTarget",l=e.numSupportedMorphTargets=0;l<this.maxMorphTargets;l++)0<=y[v=t+l]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(t="morphNormal",l=e.numSupportedMorphNormals=0;l<this.maxMorphNormals;l++)0<=y[v=t+l]&&e.numSupportedMorphNormals++;for(h in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[h],h])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Tr.disable(Tr.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Tr.frontFace(Tr.CW):Tr.frontFace(Tr.CCW),e===THREE.CullFaceBack?Tr.cullFace(Tr.BACK):e===THREE.CullFaceFront?Tr.cullFace(Tr.FRONT):Tr.cullFace(Tr.FRONT_AND_BACK),Tr.enable(Tr.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;P!==t&&(t?Tr.disable(Tr.CULL_FACE):Tr.enable(Tr.CULL_FACE),P=t),L!==e&&(e?Tr.frontFace(Tr.CW):Tr.frontFace(Tr.CCW),L=e)},this.setDepthTest=function(e){V!==e&&(e?Tr.enable(Tr.DEPTH_TEST):Tr.disable(Tr.DEPTH_TEST),V=e)},this.setDepthWrite=function(e){N!==e&&(Tr.depthMask(e),N=e)},this.setBlending=function(e,t,i,r){e!==D&&(e===THREE.NoBlending?Tr.disable(Tr.BLEND):e===THREE.AdditiveBlending?(Tr.enable(Tr.BLEND),Tr.blendEquation(Tr.FUNC_ADD),Tr.blendFunc(Tr.SRC_ALPHA,Tr.ONE)):e===THREE.SubtractiveBlending?(Tr.enable(Tr.BLEND),Tr.blendEquation(Tr.FUNC_ADD),Tr.blendFunc(Tr.ZERO,Tr.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Tr.enable(Tr.BLEND),Tr.blendEquation(Tr.FUNC_ADD),Tr.blendFunc(Tr.ZERO,Tr.SRC_COLOR)):e===THREE.CustomBlending?Tr.enable(Tr.BLEND):(Tr.enable(Tr.BLEND),Tr.blendEquationSeparate(Tr.FUNC_ADD,Tr.FUNC_ADD),Tr.blendFuncSeparate(Tr.SRC_ALPHA,Tr.ONE_MINUS_SRC_ALPHA,Tr.ONE,Tr.ONE_MINUS_SRC_ALPHA)),D=e),e===THREE.CustomBlending?(t!==F&&(Tr.blendEquation(j(t)),F=t),i===U&&r===z||(Tr.blendFunc(j(i),j(r)),U=i,z=r)):z=U=F=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",xe),e.__webglTexture=Tr.createTexture(),vr.info.memory.textures++),Tr.activeTexture(Tr.TEXTURE0+t),Tr.bindTexture(Tr.TEXTURE_2D,e.__webglTexture),Tr.pixelStorei(Tr.UNPACK_FLIP_Y_WEBGL,e.flipY),Tr.pixelStorei(Tr.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Tr.pixelStorei(Tr.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=0==(i.width&i.width-1)&&0==(i.height&i.height-1),n=j(e.format),o=j(e.type);W(Tr.TEXTURE_2D,e,r);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<a.length&&r){for(var s=0,h=a.length;s<h;s++)i=a[s],Tr.texImage2D(Tr.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);e.generateMipmaps=!1}else Tr.texImage2D(Tr.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;s<h;s++)i=a[s],Tr.compressedTexImage2D(Tr.TEXTURE_2D,s,n,i.width,i.height,0,i.data);else if(0<a.length&&r){for(s=0,h=a.length;s<h;s++)i=a[s],Tr.texImage2D(Tr.TEXTURE_2D,s,n,n,o,i);e.generateMipmaps=!1}else Tr.texImage2D(Tr.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&r&&Tr.generateMipmap(Tr.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Tr.activeTexture(Tr.TEXTURE0+t),Tr.bindTexture(Tr.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",He),e.__webglTexture=Tr.createTexture(),vr.info.memory.textures++;var i=0==(e.width&e.width-1)&&0==(e.height&e.height-1),r=j(e.format),n=j(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,e.__webglTexture),W(Tr.TEXTURE_CUBE_MAP,e,i);for(var o=0;o<6;o++){e.__webglFramebuffer[o]=Tr.createFramebuffer(),e.__webglRenderbuffer[o]=Tr.createRenderbuffer(),Tr.texImage2D(Tr.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,r,e.width,e.height,0,r,n,null);var a=e,s=Tr.TEXTURE_CUBE_MAP_POSITIVE_X+o;Tr.bindFramebuffer(Tr.FRAMEBUFFER,e.__webglFramebuffer[o]),Tr.framebufferTexture2D(Tr.FRAMEBUFFER,Tr.COLOR_ATTACHMENT0,s,a.__webglTexture,0),h(e.__webglRenderbuffer[o],e)}i&&Tr.generateMipmap(Tr.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Tr.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Tr.createRenderbuffer(),Tr.bindTexture(Tr.TEXTURE_2D,e.__webglTexture),W(Tr.TEXTURE_2D,e,i),Tr.texImage2D(Tr.TEXTURE_2D,0,r,e.width,e.height,0,r,n,null),r=Tr.TEXTURE_2D,Tr.bindFramebuffer(Tr.FRAMEBUFFER,e.__webglFramebuffer),Tr.framebufferTexture2D(Tr.FRAMEBUFFER,Tr.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Tr.framebufferRenderbuffer(Tr.FRAMEBUFFER,Tr.DEPTH_ATTACHMENT,Tr.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Tr.framebufferRenderbuffer(Tr.FRAMEBUFFER,Tr.DEPTH_STENCIL_ATTACHMENT,Tr.RENDERBUFFER,e.__webglRenderbuffer):h(e.__webglRenderbuffer,e),i&&Tr.generateMipmap(Tr.TEXTURE_2D);t?Tr.bindTexture(Tr.TEXTURE_CUBE_MAP,null):Tr.bindTexture(Tr.TEXTURE_2D,null),Tr.bindRenderbuffer(Tr.RENDERBUFFER,null),Tr.bindFramebuffer(Tr.FRAMEBUFFER,null)}n=e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,e=e.height,r=0):(t=null,i=te,e=ie,r=$,ee),t!==A&&(Tr.bindFramebuffer(Tr.FRAMEBUFFER,t),Tr.viewport(r,n,i,e),A=t),re=i,ne=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,i){THREE.EventDispatcher.call(this),this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.GeometryUtils={merge:function(e,t){var i,r,n=e.vertices.length,o=t instanceof THREE.Mesh?t.geometry:t,a=e.vertices,s=o.vertices,h=e.faces,l=o.faces,c=e.faceVertexUvs[0],o=o.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,(r=new THREE.Matrix3).getInverse(i),r.transpose());for(var p=0,u=s.length;p<u;p++){var f=s[p].clone();i&&f.applyMatrix4(i),a.push(f)}for(p=0,u=l.length;p<u;p++){var d,E,m=(f=l[p]).vertexNormals,g=f.vertexColors;for(f instanceof THREE.Face3?d=new THREE.Face3(f.a+n,f.b+n,f.c+n):f instanceof THREE.Face4&&(d=new THREE.Face4(f.a+n,f.b+n,f.c+n,f.d+n)),d.normal.copy(f.normal),r&&d.normal.applyMatrix3(r).normalize(),a=0,s=m.length;a<s;a++)E=m[a].clone(),r&&E.applyMatrix3(r).normalize(),d.vertexNormals.push(E);for(d.color.copy(f.color),a=0,s=g.length;a<s;a++)E=g[a],d.vertexColors.push(E.clone());d.materialIndex=f.materialIndex,d.centroid.copy(f.centroid),i&&d.centroid.applyMatrix4(i),h.push(d)}for(p=0,u=o.length;p<u;p++){for(r=[],a=0,s=(i=o[p]).length;a<s;a++)r.push(new THREE.Vector2(i[a].x,i[a].y));c.push(r)}},removeMaterials:function(e,t){for(var i={},r=0,n=t.length;r<n;r++)i[t[r]]=!0;for(var o,a=[],r=0,n=e.faces.length;r<n;r++)(o=e.faces[r]).materialIndex in i||a.push(o);e.faces=a},randomPointInTriangle:function(e,t,i){var r,n=new THREE.Vector3,o=THREE.GeometryUtils.__v1,a=THREE.GeometryUtils.random(),s=THREE.GeometryUtils.random();return 1<a+s&&(a=1-a,s=1-s),r=1-a-s,n.copy(e),n.multiplyScalar(a),o.copy(t),o.multiplyScalar(s),n.add(o),o.copy(i),o.multiplyScalar(r),n.add(o),n},randomPointInFace:function(e,t,i){var r,n,o;if(e instanceof THREE.Face3)return r=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(r,n,o);if(e instanceof THREE.Face4){r=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c];var a,t=t.vertices[e.d];return i?e._area1&&e._area2?(i=e._area1,a=e._area2):(i=THREE.GeometryUtils.triangleArea(r,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t),e._area1=i,e._area2=a):(i=THREE.GeometryUtils.triangleArea(r,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t)),THREE.GeometryUtils.random()*(i+a)<i?THREE.GeometryUtils.randomPointInTriangle(r,n,t):THREE.GeometryUtils.randomPointInTriangle(n,o,t)}},randomPointsInGeometry:function(e,t){for(var i,r,n,o,a,s,h=e.faces,l=e.vertices,c=h.length,p=0,u=[],f=0;f<c;f++)(i=h[f])instanceof THREE.Face3?(r=l[i.a],n=l[i.b],o=l[i.c],i._area=THREE.GeometryUtils.triangleArea(r,n,o)):i instanceof THREE.Face4&&(r=l[i.a],n=l[i.b],o=l[i.c],a=l[i.d],i._area1=THREE.GeometryUtils.triangleArea(r,n,a),i._area2=THREE.GeometryUtils.triangleArea(n,o,a),i._area=i._area1+i._area2),p+=i._area,u[f]=p;for(i=[],f=0;f<t;f++)l=THREE.GeometryUtils.random()*p,s=l,l=function e(t,i){if(i<t)return t;var r=t+Math.floor((i-t)/2);return u[r]>s?e(t,r-1):u[r]<s?e(r+1,i):r}(0,u.length-1),i[f]=THREE.GeometryUtils.randomPointInFace(h[l],e,!0);return i},triangleArea:function(e,t,i){var r=THREE.GeometryUtils.__v1,n=THREE.GeometryUtils.__v2;return r.subVectors(t,e),n.subVectors(i,e),r.cross(n),.5*r.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new THREE.Vector3;return i.addVectors(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},normalizeUVs:function(e){for(var t=0,i=(e=e.faceVertexUvs[0]).length;t<i;t++)for(var r=e[t],n=0,o=r.length;n<o;n++)1!==r[n].x&&(r[n].x-=Math.floor(r[n].x)),1!==r[n].y&&(r[n].y-=Math.floor(r[n].y))},triangulateQuads:function(e){for(var t,i,r=[],n=[],o=[],a=0,s=e.faceUvs.length;a<s;a++)n[a]=[];for(a=0,s=e.faceVertexUvs.length;a<s;a++)o[a]=[];for(a=0,s=e.faces.length;a<s;a++)if((t=e.faces[a])instanceof THREE.Face4){i=t.a;var h=t.b,l=t.c,c=t.d,p=new THREE.Face3,u=new THREE.Face3;for(p.color.copy(t.color),u.color.copy(t.color),p.materialIndex=t.materialIndex,u.materialIndex=t.materialIndex,p.a=i,p.b=h,p.c=c,u.a=h,u.b=l,u.c=c,4===t.vertexColors.length&&(p.vertexColors[0]=t.vertexColors[0].clone(),p.vertexColors[1]=t.vertexColors[1].clone(),p.vertexColors[2]=t.vertexColors[3].clone(),u.vertexColors[0]=t.vertexColors[1].clone(),u.vertexColors[1]=t.vertexColors[2].clone(),u.vertexColors[2]=t.vertexColors[3].clone()),r.push(p,u),t=0,i=e.faceVertexUvs.length;t<i;t++)e.faceVertexUvs[t].length&&(h=(p=e.faceVertexUvs[t][a])[1],l=p[2],c=p[3],p=[p[0].clone(),h.clone(),c.clone()],h=[h.clone(),l.clone(),c.clone()],o[t].push(p,h));for(t=0,i=e.faceUvs.length;t<i;t++)e.faceUvs[t].length&&(h=e.faceUvs[t][a],n[t].push(h,h))}else{for(r.push(t),t=0,i=e.faceUvs.length;t<i;t++)n[t].push(e.faceUvs[t][a]);for(t=0,i=e.faceVertexUvs.length;t<i;t++)o[t].push(e.faceVertexUvs[t][a])}e.faces=r,e.faceUvs=n,e.faceVertexUvs=o,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,i,r){for(e=e.faces,r=r||e.length-1,i=i||0;i<=r;i++)e[i].materialIndex=t}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i,r){var n=new Image,o=new THREE.Texture(n,t);return(t=new THREE.ImageLoader).addEventListener("load",function(e){o.image=e.content,o.needsUpdate=!0,i&&i(o)}),t.addEventListener("error",function(e){r&&r(e.message)}),t.crossOrigin=this.crossOrigin,t.load(e,n),o.sourceFile=e,o},loadCompressedTexture:function(e,t,i,r){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);n.format=e.format,n.mipmaps=e.mipmaps,n.image.width=e.width,n.image.height=e.height,n.generateMipmaps=!1,n.needsUpdate=!0,i&&i(n)},o.onerror=r,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1;for(var t=0,a=e.length;t<a;++t){var s=new Image;(n[t]=s).onload=function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,i&&i(o))},s.onerror=r,s.crossOrigin=this.crossOrigin,s.src=e[t]}return o},loadCompressedTextureCube:function(e,t,n,i){var o=[];o.loadCount=0;var a=new THREE.CompressedTexture;if(a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1,t=function(t,i){return function(){var e=THREE.ImageUtils.parseDDS(t.response,!0);i.format=e.format,i.mipmaps=e.mipmaps,i.width=e.width,i.height=e.height,o.loadCount+=1,6===o.loadCount&&(a.format=e.format,a.needsUpdate=!0,n&&n(a))}},e instanceof Array)for(var r=0,s=e.length;r<s;++r){var h={};o[r]=h;var l=new XMLHttpRequest;l.onload=t(l,h),l.onerror=i,h=e[r],l.open("GET",h,!0),l.responseType="arraybuffer",l.send(null)}else(l=new XMLHttpRequest).onload=function(){var e=THREE.ImageUtils.parseDDS(l.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,i=0;i<t;i++){o[i]={mipmaps:[]};for(var r=0;r<e.mipmapCount;r++)o[i].mipmaps.push(e.mipmaps[i*e.mipmapCount+r]),o[i].format=e.format,o[i].width=e.width,o[i].height=e.height}a.format=e.format,a.needsUpdate=!0,n&&n(a)}},l.onerror=i,l.open("GET",e,!0),l.responseType="arraybuffer",l.send(null);return a},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},n=i("DXT1"),o=i("DXT3"),a=i("DXT5");if(542327876!==(s=new Int32Array(e,0,31))[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(4&!s[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;switch(h=s[21]){case n:n=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case o:n=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case a:n=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&h,h>>8&255,h>>16&255,h>>24&255)),r}r.mipmapCount=1,131072&s[2]&&!1!==t&&(r.mipmapCount=Math.max(1,s[7])),r.isCubemap=!!(512&s[28]),r.width=s[4],r.height=s[3];for(var s=s[1]+4,o=r.width,a=r.height,h=r.isCubemap?6:1,l=0;l<h;l++){for(var c=0;c<r.mipmapCount;c++){var p=Math.max(4,o)/4*Math.max(4,a)/4*n,u={data:new Uint8Array(e,s,p),width:o,height:a};r.mipmaps.push(u),s+=p,o=Math.max(.5*o,1),a=Math.max(.5*a,1)}o=r.width,a=r.height}return r},getNormalMap:function(e,t){var t=1|t,i=e.width,r=e.height,n=document.createElement("canvas");n.width=i,n.height=r;var o=n.getContext("2d");o.drawImage(e,0,0);for(var a,s,h=o.getImageData(0,0,i,r).data,l=o.createImageData(i,r),c=l.data,p=0;p<i;p++)for(var u=0;u<r;u++){var f=u-1<0?0:u-1,d=r-1<u+1?r-1:u+1,E=p-1<0?0:p-1,m=i-1<p+1?i-1:p+1,g=[],T=[0,0,h[4*(u*i+p)]/255*t];for(g.push([-1,0,h[4*(u*i+E)]/255*t]),g.push([-1,-1,h[4*(f*i+E)]/255*t]),g.push([0,-1,h[4*(f*i+p)]/255*t]),g.push([1,-1,h[4*(f*i+m)]/255*t]),g.push([1,0,h[4*(u*i+m)]/255*t]),g.push([1,1,h[4*(d*i+m)]/255*t]),g.push([0,1,h[4*(d*i+p)]/255*t]),g.push([-1,1,h[4*(d*i+E)]/255*t]),f=[],E=g.length,d=0;d<E;d++){var m=g[d],v=g[(d+1)%E],m=[m[0]-T[0],m[1]-T[1],m[2]-T[2]],v=[v[0]-T[0],v[1]-T[1],v[2]-T[2]];f.push((a=[m[1]*v[2]-m[2]*v[1],m[2]*v[0]-m[0]*v[2],m[0]*v[1]-m[1]*v[0]],s=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]),[a[0]/s,a[1]/s,a[2]/s]))}for(g=[0,0,0],d=0;d<f.length;d++)g[0]+=f[d][0],g[1]+=f[d][1],g[2]+=f[d][2];g[0]/=f.length,g[1]/=f.length,g[2]/=f.length,c[T=4*(u*i+p)]=(g[0]+1)/2*255|0,c[T+1]=(g[1]+1)/2*255|0,c[T+2]=255*g[2]|0,c[T+3]=255}return o.putImageData(l,0,0),n},generateDataTexture:function(e,t,i){for(var r=e*t,n=new Uint8Array(3*r),o=Math.floor(255*i.r),a=Math.floor(255*i.g),i=Math.floor(255*i.b),s=0;s<r;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=i;return(e=new THREE.DataTexture(n,e,t,THREE.RGBFormat)).needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new THREE.Object3D,r=0,n=t.length;r<n;r++)i.add(new THREE.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),i=this.size/t.resolution,r=0,n=String(e).split(""),o=n.length,a=[],e=0;e<o;e++){var s=new THREE.Path,r=r+(s=this.extractGlyphPoints(n[e],t,i,r,s)).offset;a.push(s.path)}return{paths:a,offset:r/2}},extractGlyphPoints:function(e,t,i,r,n){var o,a,s,h,l,c,p,u,f,d,E,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(h=(t=g._cachedOutline||(g._cachedOutline=g.o.split(" "))).length,e=0;e<h;)switch(s=t[e++],s){case"m":s=t[e++]*i+r,l=t[e++]*i,n.moveTo(s,l);break;case"l":s=t[e++]*i+r,l=t[e++]*i,n.lineTo(s,l);break;case"q":if(s=t[e++]*i+r,l=t[e++]*i,u=t[e++]*i+r,f=t[e++]*i,n.quadraticCurveTo(u,f,s,l),o=m[m.length-1])for(c=o.x,p=o.y,o=1,a=this.divisions;o<=a;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,u,s),THREE.Shape.Utils.b2(T,p,f,l)}break;case"b":if(s=t[e++]*i+r,l=t[e++]*i,u=t[e++]*i+r,f=t[e++]*-i,d=t[e++]*i+r,E=t[e++]*-i,n.bezierCurveTo(s,l,u,f,d,E),o=m[m.length-1])for(c=o.x,p=o.y,o=1,a=this.divisions;o<=a;o++)T=o/a,THREE.Shape.Utils.b3(T,c,u,d,s),THREE.Shape.Utils.b3(T,p,f,E,l)}return{offset:g.ha*i,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){var i=void 0!==(t=t||{}).curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=i,THREE.FontUtils.face=r,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,r=[],n=0,o=(i=THREE.FontUtils.drawText(e).paths).length;n<o;n++)Array.prototype.push.apply(r,i[n].toShapes());return r},function(e){function A(e){for(var t=e.length,i=0,r=t-1,n=0;n<t;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i}e.Triangulate=function(e,t){var i=e.length;if(i<3)return null;var r,n=[],o=[],a=[];if(0<A(e))for(l=0;l<i;l++)o[l]=l;else for(l=0;l<i;l++)o[l]=i-1-l;for(var s,h=2*i,l=i-1;2<i;){if(h--<=0){console.log("Warning, unable to triangulate polygon!");break}i<=(s=l)&&(s=0),i<=(l=s+1)&&(l=0),i<=(r=l+1)&&(r=0);e:{var c=M=void 0,p=void 0,u=void 0,f=void 0,c=e[o[s]].x,d=e[o[s]].y,E=e[o[l]].x,m=e[o[l]].y,g=e[o[r]].x;if((E-c)*((p=e[o[r]].y)-d)-(m-d)*(g-c)<1e-10)M=!1;else{for(var T=void 0,v=void 0,y=void 0,R=void 0,y=v=T=f=u=void 0,x=g-E,H=p-m,w=c-g,_=d-p,b=E-c,S=m-d,M=0;M<i;M++)if(M!==s&&M!==l&&M!==r&&(y=(u=e[o[M]].x)-E,R=(f=e[o[M]].y)-m,T=b*(v=f-d)-S*(T=u-c),v=w*(f-=p)-_*(u-=g),0<=(y=x*R-H*y)&&0<=v&&0<=T)){M=!1;break e}M=!0}}if(M){for(n.push([e[o[s]],e[o[l]],e[o[r]]]),a.push([o[s],o[l],o[r]]),r=(s=l)+1;r<i;s++,r++)o[s]=o[r];h=2*--i}}return t?a:n},e.Triangulate.area=A}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e=e||5;for(var t=[],i=0;i<=e;i++)t.push(this.getPoint(i/e));return t},THREE.Curve.prototype.getSpacedPoints=function(e){e=e||5;for(var t=[],i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e=e||(this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],n=this.getPoint(0),o=0;for(r.push(0),i=1;i<=e;i++)o+=(t=this.getPoint(i/e)).distanceTo(n),r.push(o),n=t;return this.cacheArcLengths=r},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){for(var i,r=this.getLengths(),n=0,o=r.length,a=t||e*r[o-1],s=0,h=o-1;s<=h;)if((i=r[n=Math.floor(s+(h-s)/2)]-a)<0)s=n+1;else{if(!(0<i)){h=n;break}h=n-1}return r[n=h]==a?n/(o-1):(n+(a-(s=r[n]))/(r[n+1]-s))/(o-1)},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;return t<0&&(t=0),1<(e=e+1e-4)&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);return e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x);return e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),(t=new THREE.Vector2(t,e)).normalize(),t},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);return e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);return e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),(t=new THREE.Vector2(t,e)).normalize(),t},THREE.SplineCurve=function(e){this.points=null==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,i=[],r=this.points,n=(r.length-1)*e;return n-=e=Math.floor(n),i[0]=0==e?e:e-1,i[1]=e,i[2]=e>r.length-2?r.length-1:e+1,i[3]=e>r.length-3?r.length-1:e+2,t.x=THREE.Curve.Utils.interpolate(r[i[0]].x,r[i[1]].x,r[i[2]].x,r[i[3]].x,n),t.y=THREE.Curve.Utils.interpolate(r[i[0]].y,r[i[1]].y,r[i[2]].y,r[i[3]].y,n),t},THREE.EllipseCurve=function(e,t,i,r,n,o,a){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return this.aClockwise||(e=1-e),t=this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,i,r,n,o){THREE.EllipseCurve.call(this,e,t,i,i,r,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,n){var o=n*n;return(2*t-2*i+(e=.5*(i-e))+(r=.5*(r-t)))*n*o+(-3*t+3*i-2*e-r)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,i){this.v0=e,this.v1=t,this.v2=i},function(e){var t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);return e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},function(e){var t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=null==e?[]:e},function(e){var t=new THREE.Vector3,i=[],r=this.points,e=(r.length-1)*e,n=Math.floor(e);e-=n,i[0]=0==n?n:n-1,i[1]=n,i[2]=n>r.length-2?r.length-1:n+1,i[3]=n>r.length-3?r.length-1:n+2,n=r[i[0]];var o=r[i[1]],a=r[i[2]],i=r[i[3]];return t.x=THREE.Curve.Utils.interpolate(n.x,o.x,a.x,i.x,e),t.y=THREE.Curve.Utils.interpolate(n.y,o.y,a.y,i.y,e),t.z=THREE.Curve.Utils.interpolate(n.z,o.z,a.z,i.z,e),t}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=null==e?[]:e},function(e){var t=new THREE.Vector3,i=[],r=this.points,n=r.length*e;return n-=e=Math.floor(n),e+=0<e?0:(Math.floor(Math.abs(e)/r.length)+1)*r.length,i[0]=(e-1)%r.length,i[1]=e%r.length,i[2]=(e+1)%r.length,i[3]=(e+2)%r.length,t.x=THREE.Curve.Utils.interpolate(r[i[0]].x,r[i[1]].x,r[i[2]].x,r[i[3]].x,n),t.y=THREE.Curve.Utils.interpolate(r[i[0]].y,r[i[1]].y,r[i[2]].y,r[i[3]].y,n),t.z=THREE.Curve.Utils.interpolate(r[i[0]].z,r[i[1]].z,r[i[2]].z,r[i[3]].z,n),t}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),i=this.getCurveLengths(),e=0;e<i.length;){if(i[e]>=t)return t=1-(t=i[e]-t)/(e=this.curves[e]).getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;for(var e=[],t=0,i=this.curves.length,r=0;r<i;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e},THREE.CurvePath.prototype.getBoundingBox=function(){for(var e,t,i,r,n,o=this.getPoints(),a=e=Number.NEGATIVE_INFINITY,s=i=Number.POSITIVE_INFINITY,h=o[0]instanceof THREE.Vector3,l=h?new THREE.Vector3:new THREE.Vector2,c=0,p=o.length;c<p;c++)(n=o[c]).x>a?a=n.x:n.x<s&&(s=n.x),n.y>e?e=n.y:n.y<i&&(i=n.y),h&&(n.z>t?t=n.z:n.z<r&&(r=n.z)),l.add(n);return o={minX:s,minY:i,maxX:a,maxY:e,centroid:l.divideScalar(p)},h&&(o.maxZ=t,o.minZ=r),o},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0;i<e.length;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){for(var i=this.getPoints(e),r=0,n=(t=t||this.bends).length;r<n;r++)i=this.getWrapPoints(i,t[r]);return i},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){for(var i=this.getSpacedPoints(e),r=0,n=(t=t||this.bends).length;r<n;r++)i=this.getWrapPoints(i,t[r]);return i},THREE.CurvePath.prototype.getWrapPoints=function(e,t){for(var i,r,n,o,a=this.getBoundingBox(),s=0,h=e.length;s<h;s++)r=(i=e[s]).x,n=i.y,o=r/a.maxX,o=t.getUtoTmapping(o,r),r=t.getPoint(o),n=t.getNormalVector(o).multiplyScalar(n),i.x=r.x+n.x,i.y=r.y+n.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),e=!(this.matrixWorldNeedsUpdate=!1));for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var i=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:i})},THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:i})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),i=new THREE.SplineCurve(i),this.curves.push(i),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],i,r,n,o)},THREE.Path.prototype.absarc=function(e,t,i,r,n,o){this.absellipse(e,t,i,i,r,n,o)},THREE.Path.prototype.ellipse=function(e,t,i,r,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],i,r,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,i,r,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,i,r,n,o,a);this.curves.push(h),h=h.getPoint(a?1:0),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e=e||40;for(var t=[],i=0;i<e;i++)t.push(this.getPoint(i/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);for(var i,r,n,o,a,s,h,l,c,p,u,e=e||12,f=[],d=0,E=this.actions.length;d<E;d++)switch(i=this.actions[d],r=i.action,i=i.args,r){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:f.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(n=i[2],o=i[3],h=i[0],l=i[1],p=0<f.length?(c=(r=f[f.length-1]).x,r.y):(c=(r=this.actions[d-1].args)[r.length-2],r[r.length-1]),i=1;i<=e;i++)u=i/e,r=THREE.Shape.Utils.b2(u,c,h,n),u=THREE.Shape.Utils.b2(u,p,l,o),f.push(new THREE.Vector2(r,u));break;case THREE.PathActions.BEZIER_CURVE_TO:for(n=i[4],o=i[5],h=i[0],l=i[1],a=i[2],s=i[3],p=0<f.length?(c=(r=f[f.length-1]).x,r.y):(c=(r=this.actions[d-1].args)[r.length-2],r[r.length-1]),i=1;i<=e;i++)u=i/e,r=THREE.Shape.Utils.b3(u,c,h,a,n),u=THREE.Shape.Utils.b3(u,p,l,s,o),f.push(new THREE.Vector2(r,u));break;case THREE.PathActions.CSPLINE_THRU:for(r=this.actions[d-1].args,u=[new THREE.Vector2(r[r.length-2],r[r.length-1])],r=e*i[0].length,u=u.concat(i[0]),u=new THREE.SplineCurve(u),i=1;i<=r;i++)f.push(u.getPointAt(i/r));break;case THREE.PathActions.ARC:for(n=i[0],o=i[1],l=i[2],a=i[3],r=i[4],h=!!i[5],c=r-a,p=2*e,i=1;i<=p;i++)u=i/p,h||(u=1-u),u=a+u*c,r=n+l*Math.cos(u),u=o+l*Math.sin(u),f.push(new THREE.Vector2(r,u));break;case THREE.PathActions.ELLIPSE:for(n=i[0],o=i[1],l=i[2],s=i[3],a=i[4],r=i[5],h=!!i[6],c=r-a,p=2*e,i=1;i<=p;i++)u=i/p,h||(u=1-u),u=a+u*c,r=n+l*Math.cos(u),u=o+s*Math.sin(u),f.push(new THREE.Vector2(r,u))}return d=f[f.length-1],Math.abs(d.x-f[0].x)<1e-10&&Math.abs(d.y-f[0].y)<1e-10&&f.splice(f.length-1,1),t&&f.push(f[0]),f},THREE.Path.prototype.toShapes=function(){for(var e,t,i,r=[],n=new THREE.Path,o=0,a=this.actions.length;o<a;o++)t=(e=this.actions[o]).args,(e=e.action)==THREE.PathActions.MOVE_TO&&0!=n.actions.length&&(r.push(n),n=new THREE.Path),n[e].apply(n,t);if(0!=n.actions.length&&r.push(n),0==r.length)return[];if(t=[],o=!THREE.Shape.Utils.isClockWise(r[0].getPoints()),1==r.length)return n=r[0],(i=new THREE.Shape).actions=n.actions,i.curves=n.curves,t.push(i),t;if(o)for(i=new THREE.Shape,o=0,a=r.length;o<a;o++)n=r[o],THREE.Shape.Utils.isClockWise(n.getPoints())?(i.actions=n.actions,i.curves=n.curves,t.push(i),i=new THREE.Shape):i.holes.push(n);else{for(o=0,a=r.length;o<a;o++)n=r[o],THREE.Shape.Utils.isClockWise(n.getPoints())?(i&&t.push(i),(i=new THREE.Shape).actions=n.actions,i.curves=n.curves):i.holes.push(n);t.push(i)}return t},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){for(var t=this.holes.length,i=[],r=0;r<t;r++)i[r]=this.holes[r].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){for(var t=this.holes.length,i=[],r=0;r<t;r++)i[r]=this.holes[r].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){for(var i,r,n,o,a,s=e.concat(),h=s.concat(),l=[],c=0;c<t.length;c++){for(a=t[c],Array.prototype.push.apply(h,a),r=Number.POSITIVE_INFINITY,i=0;i<a.length;i++)for(d=a[i],E=[],u=0;u<s.length;u++)m=s[u],m=d.distanceToSquared(m),E.push(m),m<r&&(r=m,n=i,o=u);i=0<=o-1?o-1:s.length-1,r=0<=n-1?n-1:a.length-1;var p=[a[n],s[o],s[i]],u=THREE.FontUtils.Triangulate.area(p),f=[a[n],a[r],s[o]],d=THREE.FontUtils.Triangulate.area(f),E=o,m=n;n+=-1,(o+=1)<0&&(o+=s.length),o%=s.length,n<0&&(n+=a.length),n%=a.length,i=0<=o-1?o-1:s.length-1,r=0<=n-1?n-1:a.length-1,p=[a[n],s[o],s[i]],p=THREE.FontUtils.Triangulate.area(p),f=[a[n],a[r],s[o]],p+(f=THREE.FontUtils.Triangulate.area(f))<u+d&&(n=m,(o=E)<0&&(o+=s.length),o%=s.length,n<0&&(n+=a.length),n%=a.length,i=0<=o-1?o-1:s.length-1,r=0<=n-1?n-1:a.length-1),u=s.slice(0,o),d=s.slice(o),E=a.slice(n),m=a.slice(0,n),r=[a[n],a[r],s[o]],l.push([a[n],s[o],s[i]]),l.push(r),s=u.concat(E).concat(m).concat(d)}return{shape:s,isolatedPts:l,allpoints:h}},triangulateShape:function(e,t){for(var i,r,n=(a=THREE.Shape.Utils.removeHoles(e,t)).allpoints,o=a.isolatedPts,a=THREE.FontUtils.Triangulate(a.shape,!1),s={},h=0,l=n.length;h<l;h++)void 0!==s[r=n[h].x+":"+n[h].y]&&console.log("Duplicate point",r),s[r]=h;for(h=0,l=a.length;h<l;h++)for(i=a[h],n=0;n<3;n++)void 0!==(r=s[r=i[n].x+":"+i[n].y])&&(i[n]=r);for(h=0,l=o.length;h<l;h++)for(i=o[h],n=0;n<3;n++)void 0!==(r=s[r=i[n].x+":"+i[n].y])&&(i[n]=r);return a.concat(o)},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,n){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,n)}},THREE.AnimationHandler=function(){var i=[],s={},e={update:function(e){for(var t=0;t<i.length;t++)i[t].update(e)},addToUpdate:function(e){-1===i.indexOf(e)&&i.push(e)},removeFromUpdate:function(e){-1!==(e=i.indexOf(e))&&i.splice(e,1)},add:function(e){if(void 0!==s[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),!0!==(s[e.name]=e).initialized){for(var t=0;t<e.hierarchy.length;t++){for(var i,r=0;r<e.hierarchy[t].keys.length;r++){e.hierarchy[t].keys[r].time<0&&(e.hierarchy[t].keys[r].time=0),void 0===e.hierarchy[t].keys[r].rot||e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion||(i=e.hierarchy[t].keys[r].rot,e.hierarchy[t].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3]))}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(i={},r=0;r<e.hierarchy[t].keys.length;r++)for(var n=0;n<e.hierarchy[t].keys[r].morphTargets.length;n++){var o=e.hierarchy[t].keys[r].morphTargets[n];i[o]=-1}for(e.hierarchy[t].usedMorphTargets=i,r=0;r<e.hierarchy[t].keys.length;r++){var a={};for(o in i){for(n=0;n<e.hierarchy[t].keys[r].morphTargets.length;n++)if(e.hierarchy[t].keys[r].morphTargets[n]===o){a[o]=e.hierarchy[t].keys[r].morphTargetsInfluences[n];break}n===e.hierarchy[t].keys[r].morphTargets.length&&(a[o]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=a}}for(r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}for(r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[],t=0;t<e.hierarchy.length;t++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){if("string"==typeof e)return s[e]?s[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.bones.length;i++)t.push(e.bones[i]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var i=0;i<e.children.length;i++)r(e.children[i],t)};return e.LINEAR=0,e.CATMULLROM=1,e.CATMULLROM_FORWARD=2,e}(),THREE.Animation=function(e,t,i){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==i?i:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0;for(var i=this.hierarchy.length,r=0;r<i;r++){o=this.hierarchy[r],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(o.useQuaternion=!0),o.matrixAutoUpdate=!0,void 0===o.animationCache&&(o.animationCache={},o.animationCache.prevKey={pos:0,rot:0,scl:0},o.animationCache.nextKey={pos:0,rot:0,scl:0},o.animationCache.originalMatrix=o instanceof THREE.Bone?o.skinMatrix:o.matrix);var n=o.animationCache.prevKey,o=o.animationCache.nextKey;n.pos=this.data.hierarchy[r].keys[0],n.rot=this.data.hierarchy[r].keys[0],n.scl=this.data.hierarchy[r].keys[0],o.pos=this.getNextKeyWith("pos",r,1),o.rot=this.getNextKeyWith("rot",r,1),o.scl=this.getNextKeyWith("scl",r,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t,i,r,n,o,a,s,h=["pos","rot","scl"],l=this.currentTime+=e*this.timeScale,c=this.currentTime%=this.data.length;parseInt(Math.min(c*this.data.fps,this.data.length*this.data.fps),10);for(var p=0,u=this.hierarchy.length;p<u;p++){s=(e=this.hierarchy[p]).animationCache;for(var f=0;f<3;f++){if(t=h[f],o=s.prevKey[t],(a=s.nextKey[t]).time<=l){if(c<l){if(!this.loop)return void this.stop();for(o=this.data.hierarchy[p].keys[0],a=this.getNextKeyWith(t,p,1);a.time<c;)o=a,a=this.getNextKeyWith(t,p,a.index+1)}else for(;o=a,(a=this.getNextKeyWith(t,p,a.index+1)).time<c;);s.prevKey[t]=o,s.nextKey[t]=a}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,i=(c-o.time)/(a.time-o.time),r=o[t],n=a[t],(i<0||1<i)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+i+" on bone "+p),i=i<0?0:1),"pos"===t?(t=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(t.x=r[0]+(n[0]-r[0])*i,t.y=r[1]+(n[1]-r[1])*i,t.z=r[2]+(n[2]-r[2])*i):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",p,o.index-1).pos,this.points[1]=r,this.points[2]=n,this.points[3]=this.getNextKeyWith("pos",p,a.index+1).pos,i=.33*i+.33,r=this.interpolateCatmullRom(this.points,i),t.x=r[0],t.y=r[1],t.z=r[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(i=this.interpolateCatmullRom(this.points,1.01*i),this.target.set(i[0],i[1],i[2]),this.target.sub(t),this.target.y=0,this.target.normalize(),i=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,i,0)))):"rot"===t?THREE.Quaternion.slerp(r,n,e.quaternion,i):"scl"===t&&((t=e.scale).x=r[0]+(n[0]-r[0])*i,t.y=r[1]+(n[1]-r[1])*i,t.z=r[2]+(n[2]-r[2])*i)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var i,r,n,o,a=[],s=[],h=(e.length-1)*t,l=Math.floor(h);return h-=l,a[0]=0===l?l:l-1,a[1]=l,a[2]=l>e.length-2?l:l+1,a[3]=l>e.length-3?l:l+2,l=e[a[0]],r=e[a[1]],n=e[a[2]],o=e[a[3]],i=h*(a=h*h),s[0]=this.interpolate(l[0],r[0],n[0],o[0],h,a,i),s[1]=this.interpolate(l[1],r[1],n[1],o[1],h,a,i),s[2]=this.interpolate(l[2],r[2],n[2],o[2],h,a,i),s},THREE.Animation.prototype.interpolate=function(e,t,i,r,n,o,a){return(2*(t-i)+(e=.5*(i-e))+(r=.5*(r-t)))*a+(-3*(t-i)-2*e-r)*o+e*n+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<i?i:0:0<=i?i:i+r.length;0<=i;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,i){for(this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0===i||i,e=0,t=this.hierarchy.length;e<t;e++){var i=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&i){for(var n=0;n<i.length;n++){var o=i[n],a=this.getNextKeyWith(o,e,0);a&&a.apply(o)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;for(var i,r,n=this.hierarchy.length,o=0;o<n;o++)i=this.hierarchy[o],r=this.data.hierarchy[o],i.useQuaternion=!0,void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey=null,r.animationCache.nextKey=null,r.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix),(i=this.data.hierarchy[o].keys).length&&(r.animationCache.prevKey=i[0],r.animationCache.nextKey=i[1],this.startTime=Math.min(i[0].time,this.startTime),this.endTime=Math.max(i[i.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t,i=this.hierarchy[e],r=this.data.hierarchy[e];void 0!==r.animationCache&&(t=r.animationCache.originalMatrix,i instanceof THREE.Bone?(t.copy(i.skinMatrix),i.skinMatrix=t):(t.copy(i.matrix),i.matrix=t),delete r.animationCache)}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,i,r,n=this.data.JIT.hierarchy,o=this.currentTime+=e*this.timeScale,a=this.currentTime%=this.data.length;if(a<this.startTimeMs&&(a=this.currentTime=this.startTimeMs+a),c=parseInt(Math.min(a*this.data.fps,this.data.length*this.data.fps),10),(r=a<o)&&!this.loop){for(var e=0,s=this.hierarchy.length;e<s;e++){var h=this.data.hierarchy[e].keys,n=this.data.hierarchy[e].sids,l=h.length-1,c=this.hierarchy[e];if(h.length){for(h=0;h<n.length;h++)a=n[h],(o=this.getPrevKeyWith(a,e,l))&&o.apply(a);this.data.hierarchy[e].node.updateMatrix(),c.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(a<this.startTime)){for(e=0,s=this.hierarchy.length;e<s;e++){l=this.hierarchy[e];var h=(t=this.data.hierarchy[e]).keys,p=t.animationCache;if(this.JITCompile&&void 0!==n[e][c])l instanceof THREE.Bone?(l.skinMatrix=n[e][c],l.matrixWorldNeedsUpdate=!1):(l.matrix=n[e][c],l.matrixWorldNeedsUpdate=!0);else if(h.length){if(this.JITCompile&&p&&(l instanceof THREE.Bone?l.skinMatrix=p.originalMatrix:l.matrix=p.originalMatrix),t=p.prevKey,i=p.nextKey,t&&i){if(i.time<=o){if(r&&this.loop)for(t=h[0],i=h[1];i.time<a;)i=h[(t=i).index+1];else if(!r)for(var u=h.length-1;i.time<a&&i.index!==u;)i=h[(t=i).index+1];p.prevKey=t,p.nextKey=i}i.time>=a?t.interpolate(i,a):t.interpolate(i,i.time)}this.data.hierarchy[e].node.updateMatrix(),l.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===n[0][c])for(this.hierarchy[0].updateMatrixWorld(!0),e=0;e<this.hierarchy.length;e++)n[e][c]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){for(i%=(t=this.data.hierarchy[t].keys).length;i<t.length;i++)if(t[i].hasTarget(e))return t[i];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i=0<=i?i:i+t.length;0<=i;i--)if(t[i].hasTarget(e))return t[i];return t[t.length-1]},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,1),a.lookAt(new THREE.Vector3(0,1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var l=new THREE.PerspectiveCamera(90,1,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,-1)),this.add(l),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,r=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,n,i),i.activeCubeFace=1,e.render(t,o,i),i.activeCubeFace=2,e.render(t,a,i),i.activeCubeFace=3,e.render(t,s,i),i.activeCubeFace=4,e.render(t,h,i),i.generateMipmaps=r,i.activeCubeFace=5,e.render(t,l,i)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,i,r,n,o,a){THREE.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(i,e/t,r,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,e=2*(t=Math.tan(this.fov/2)*t)*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var i=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(i),i},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var i=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[i=.707*e,i,0],[r=.707*t,r,0],[-i,-i,0],[-r,-r,0],[i,-i,0],[r,-r,0],[-i,i,0],[-r,r,0],[i,0,i],[r,0,r],[-i,0,-i],[-r,0,-r],[i,0,-i],[r,0,-r],[-i,0,i],[-r,0,r],[0,i,i],[0,r,r],[0,-i,-i],[0,-r,-r],[0,i,-i],[0,r,-r],[0,-i,i],[0,-r,r]],r=0,n=i.length;r<n;r++)this.vertices.push(new THREE.Vector3(i[r][0],i[r][1],i[r][2]))},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,i,r){THREE.Geometry.call(this);var e=e||50,i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI,t=void 0!==t?Math.max(3,t):8,n=[],o=new THREE.Vector3,a=new THREE.Vector2(.5,.5);for(this.vertices.push(o),n.push(a),o=0;o<=t;o++){var s=new THREE.Vector3;s.x=e*Math.cos(i+o/t*r),s.y=e*Math.sin(i+o/t*r),this.vertices.push(s),n.push(new THREE.Vector2((s.x/e+1)/2,-(s.y/e+1)/2+1))}for(i=new THREE.Vector3(0,0,-1),o=1;o<=t;o++)this.faces.push(new THREE.Face3(o,o+1,0,[i,i,i])),this.faceVertexUvs[0].push([n[o],n[o+1],a]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n,o,a,s){var h,l=y.widthSegments,c=y.heightSegments,p=n/2,u=o/2,f=y.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?h="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(h="y",c=y.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(h="x",l=y.depthSegments);var d=l+1,E=c+1,m=n/l,g=o/c,T=new THREE.Vector3;for(T[h]=0<a?1:-1,n=0;n<E;n++)for(o=0;o<d;o++){var v=new THREE.Vector3;v[e]=(o*m-p)*i,v[t]=(n*g-u)*r,v[h]=a,y.vertices.push(v)}for(n=0;n<c;n++)for(o=0;o<l;o++)(e=new THREE.Face4(o+d*n+f,o+d*(n+1)+f,o+1+d*(n+1)+f,o+1+d*n+f)).normal.copy(T),e.vertexNormals.push(T.clone(),T.clone(),T.clone(),T.clone()),e.materialIndex=s,y.faces.push(e),y.faceVertexUvs[0].push([new THREE.Vector2(o/l,1-n/c),new THREE.Vector2(o/l,1-(n+1)/c),new THREE.Vector2((o+1)/l,1-(n+1)/c),new THREE.Vector2((o+1)/l,1-n/c)])}THREE.Geometry.call(this);var y=this;this.width=e,this.height=t,this.depth=i,this.widthSegments=r||1,this.heightSegments=n||1,this.depthSegments=o||1,e=this.width/2,t=this.height/2,i=this.depth/2,a("z","y",-1,-1,this.depth,this.height,e,0),a("z","y",1,-1,this.depth,this.height,-e,1),a("x","z",1,1,this.width,this.depth,t,2),a("x","z",1,-1,this.width,this.depth,-t,3),a("x","y",1,-1,this.width,this.height,i,4),a("x","y",-1,-1,this.width,this.height,-i,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this);for(var e=void 0!==e?e:20,t=void 0!==t?t:20,a=(i=void 0!==i?i:100)/2,r=r||8,n=n||1,s=[],h=[],l=0;l<=n;l++){for(var c=[],p=[],u=(E=l/n)*(t-e)+e,f=0;f<=r;f++){var d=f/r;(m=new THREE.Vector3).x=u*Math.sin(2*d*Math.PI),m.y=-E*i+a,m.z=u*Math.cos(2*d*Math.PI),this.vertices.push(m),c.push(this.vertices.length-1),p.push(new THREE.Vector2(d,1-E))}s.push(c),h.push(p)}for(i=(t-e)/i,f=0;f<r;f++)for(p=0!==e?(c=this.vertices[s[0][f]].clone(),this.vertices[s[0][f+1]].clone()):(c=this.vertices[s[1][f]].clone(),this.vertices[s[1][f+1]].clone()),c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*i).normalize(),p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*i).normalize(),l=0;l<n;l++){var E=s[l][f],u=s[l+1][f],d=s[l+1][f+1],m=s[l][f+1],g=c.clone(),T=c.clone(),v=p.clone(),y=p.clone(),R=h[l][f].clone(),x=h[l+1][f].clone(),H=h[l+1][f+1].clone(),w=h[l][f+1].clone();this.faces.push(new THREE.Face4(E,u,d,m,[g,T,v,y])),this.faceVertexUvs[0].push([R,x,H,w])}if(!o&&0<e)for(this.vertices.push(new THREE.Vector3(0,a,0)),f=0;f<r;f++)E=s[0][f],u=s[0][f+1],d=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=h[0][f].clone(),x=h[0][f+1].clone(),H=new THREE.Vector2(x.u,0),this.faces.push(new THREE.Face3(E,u,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!o&&0<t)for(this.vertices.push(new THREE.Vector3(0,-a,0)),f=0;f<r;f++)E=s[l][f+1],u=s[l][f],d=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=h[l][f+1].clone(),x=h[l][f].clone(),H=new THREE.Vector2(x.u,1),this.faces.push(new THREE.Face3(E,u,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){void 0!==e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;r<i;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(E,m){function e(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}function t(e,t,i){var r=THREE.ExtrudeGeometry.__v1,n=THREE.ExtrudeGeometry.__v2,o=THREE.ExtrudeGeometry.__v3,a=THREE.ExtrudeGeometry.__v4,s=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),n.set(e.x-i.x,e.y-i.y),r=r.normalize(),n=n.normalize(),o.set(-r.y,r.x),a.set(n.y,-n.x),s.copy(e).add(o),h.copy(e).add(a),s.equals(h)?a.clone():(s.copy(t).add(o),h.copy(i).add(a),o=r.dot(a),a=h.sub(s).dot(a),0===o&&(console.log("Either infinite or no solutions!"),0===a?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),(a/=o)<0?(t=Math.atan2(t.y-e.y,t.x-e.x),(e=Math.atan2(i.y-e.y,i.x-e.x))<t&&(e+=2*Math.PI),i=(t+e)/2,e=-Math.cos(i),i=-Math.sin(i),new THREE.Vector2(e,i)):r.multiplyScalar(a).add(s).sub(e).clone())}function i(e,t){var i,r;for(z=e.length;0<=--z;){(r=(i=z)-1)<0&&(r=e.length-1);for(var n=0,o=T+2*g,n=0;n<o;n++){var a=e,s=n,h=o,l=i,c=r,p=(p=t+i+(u=D*n))+b,u=(u=t+r+u)+b,f=(f=t+r+(d=D*(n+1)))+b,d=(d=t+i+d)+b;_.faces.push(new THREE.Face4(p,u,f,d,null,null,x)),p=H.generateSideWallUV(_,E,a,m,p,u,f,d,s,h,l,c),_.faceVertexUvs[0].push(p)}}}function r(e,t,i){_.vertices.push(new THREE.Vector3(e,t,i))}function n(e,t,i,r){e+=b,t+=b,i+=b,_.faces.push(new THREE.Face3(e,t,i,null,null,R)),e=r?H.generateBottomUV(_,E,m,e,t,i):H.generateTopUV(_,E,m,e,t,i),_.faceVertexUvs[0].push(e)}var o,a,s,h,l,c=void 0!==m.amount?m.amount:100,p=void 0!==m.bevelThickness?m.bevelThickness:6,u=void 0!==m.bevelSize?m.bevelSize:p-2,g=void 0!==m.bevelSegments?m.bevelSegments:3,f=void 0===m.bevelEnabled||m.bevelEnabled,d=void 0!==m.curveSegments?m.curveSegments:12,T=void 0!==m.steps?m.steps:1,v=m.extrudePath,y=!1,R=m.material,x=m.extrudeMaterial,H=void 0!==m.UVGenerator?m.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(o=v.getSpacedPoints(T),f=!(y=!0),a=void 0!==m.frames?m.frames:new THREE.TubeGeometry.FrenetFrames(v,T,!1),s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3),f||(u=p=g=0);var w,_=this,b=this.vertices.length,S=(d=E.extractPoints(d)).shape,d=d.holes;if(v=!THREE.Shape.Utils.isClockWise(S)){for(S=S.reverse(),A=0,C=d.length;A<C;A++)w=d[A],THREE.Shape.Utils.isClockWise(w)&&(d[A]=w.reverse());v=!1}for(var M=THREE.Shape.Utils.triangulateShape(S,d),v=S,A=0,C=d.length;A<C;A++)w=d[A],S=S.concat(w);for(var P,L,D=S.length,F=M.length,U=[],z=0,V=v.length,N=V-1,B=z+1;z<V;z++,N++,B++)N===V&&(N=0),B===V&&(B=0),U[z]=t(v[z],v[N],v[B]);var I,O=[],G=U.concat();for(A=0,C=d.length;A<C;A++){for(w=d[A],I=[],z=0,N=(V=w.length)-1,B=z+1;z<V;z++,N++,B++)N===V&&(N=0),B===V&&(B=0),I[z]=t(w[z],w[N],w[B]);O.push(I),G=G.concat(I)}for(N=0;N<g;N++){for(P=p*(1-(w=N/g)),B=u*Math.sin(w*Math.PI/2),z=0,V=v.length;z<V;z++)r((L=e(v[z],U[z],B)).x,L.y,-P);for(A=0,C=d.length;A<C;A++)for(w=d[A],I=O[A],z=0,V=w.length;z<V;z++)r((L=e(w[z],I[z],B)).x,L.y,-P)}for(B=u,z=0;z<D;z++)L=f?e(S[z],G[z],B):S[z],y?(h.copy(a.normals[0]).multiplyScalar(L.x),s.copy(a.binormals[0]).multiplyScalar(L.y),l.copy(o[0]).add(h).add(s),r(l.x,l.y,l.z)):r(L.x,L.y,0);for(w=1;w<=T;w++)for(z=0;z<D;z++)L=f?e(S[z],G[z],B):S[z],y?(h.copy(a.normals[w]).multiplyScalar(L.x),s.copy(a.binormals[w]).multiplyScalar(L.y),l.copy(o[w]).add(h).add(s),r(l.x,l.y,l.z)):r(L.x,L.y,c/T*w);for(N=g-1;0<=N;N--){for(P=p*(1-(w=N/g)),B=u*Math.sin(w*Math.PI/2),z=0,V=v.length;z<V;z++)r((L=e(v[z],U[z],B)).x,L.y,c+P);for(A=0,C=d.length;A<C;A++)for(w=d[A],I=O[A],z=0,V=w.length;z<V;z++)L=e(w[z],I[z],B),y?r(L.x,L.y+o[T-1].y,o[T-1].x+P):r(L.x,L.y,c+P)}if(f){for(p=0*D,z=0;z<F;z++)n((c=M[z])[2]+p,c[1]+p,c[0]+p,!0);for(p=D*(T+2*g),z=0;z<F;z++)n((c=M[z])[0]+p,c[1]+p,c[2]+p,!1)}else{for(z=0;z<F;z++)n((c=M[z])[2],c[1],c[0],!0);for(z=0;z<F;z++)n((c=M[z])[0]+D*T,c[1]+D*T,c[2]+D*T,!1)}for(i(v,c=0),c+=v.length,A=0,C=d.length;A<C;A++)i(w=d[A],c),c+=w.length},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,o){return t=e.vertices[n].x,n=e.vertices[n].y,i=e.vertices[o].x,o=e.vertices[o].y,[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,n),new THREE.Vector2(i,o)]},generateBottomUV:function(e,t,i,r,n,o){return this.generateTopUV(e,t,i,r,n,o)},generateSideWallUV:function(e,t,i,r,n,o,a,s){var t=e.vertices[n].x,i=e.vertices[n].y,n=e.vertices[n].z,r=e.vertices[o].x,h=e.vertices[o].y,o=e.vertices[o].z,l=e.vertices[a].x,c=e.vertices[a].y,a=e.vertices[a].z,p=e.vertices[s].x,u=e.vertices[s].y,e=e.vertices[s].z;return Math.abs(i-h)<.01?[new THREE.Vector2(t,1-n),new THREE.Vector2(r,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(p,1-e)]:[new THREE.Vector2(i,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(u,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),!1==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;i<r;i++)this.addShape(e[i],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i,r,n=t.material,o=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,a=this.vertices.length,s=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12),h=s.shape,l=s.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),s=0,i=l.length;s<i;s++)r=l[s],THREE.Shape.Utils.isClockWise(r)&&(l[s]=r.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(s=0,i=l.length;s<i;s++)r=l[s],h=h.concat(r);for(l=h.length,i=c.length,s=0;s<l;s++)r=h[s],this.vertices.push(new THREE.Vector3(r.x,r.y,0));for(s=0;s<i;s++)h=(l=c[s])[0]+a,r=l[1]+a,l=l[2]+a,this.faces.push(new THREE.Face3(h,r,l,null,null,n)),this.faceVertexUvs[0].push(o.generateBottomUV(this,e,t,h,r,l))},THREE.LatheGeometry=function(e,t,i,r){THREE.Geometry.call(this);for(var t=t||12,i=i||0,r=r||2*Math.PI,n=1/(e.length-1),o=1/t,a=0,s=t;a<=s;a++)for(var h=i+a*o*r,l=Math.cos(h),c=Math.sin(h),h=0,p=e.length;h<p;h++){var u=e[h],f=new THREE.Vector3;f.x=l*u.x-c*u.y,f.y=c*u.x+l*u.y,f.z=u.z,this.vertices.push(f)}for(i=e.length,a=0,s=t;a<s;a++)for(h=0,p=e.length-1;h<p;h++)r=t=h+i*a,c=t+i,l=t+1+i,this.faces.push(new THREE.Face4(r,c,l,t+1)),r=(l=a*o)+o,c=(t=h*n)+n,this.faceVertexUvs[0].push([new THREE.Vector2(l,t),new THREE.Vector2(r,t),new THREE.Vector2(r,c),new THREE.Vector2(l,c)]);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=i||1,this.heightSegments=r||1;for(var i=e/2,n=t/2,r=this.widthSegments,o=this.heightSegments,a=r+1,s=o+1,h=this.width/r,l=this.height/o,c=new THREE.Vector3(0,0,1),e=0;e<s;e++)for(t=0;t<a;t++)this.vertices.push(new THREE.Vector3(t*h-i,-(e*l-n),0));for(e=0;e<o;e++)for(t=0;t<r;t++)(i=new THREE.Face4(t+a*e,t+a*(e+1),t+1+a*(e+1),t+1+a*e)).normal.copy(c),i.vertexNormals.push(c.clone(),c.clone(),c.clone(),c.clone()),this.faces.push(i),this.faceVertexUvs[0].push([new THREE.Vector2(t/r,1-e/o),new THREE.Vector2(t/r,1-(e+1)/o),new THREE.Vector2((t+1)/r,1-(e+1)/o),new THREE.Vector2((t+1)/r,1-e/o)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(i)||6);for(var r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI,s=[],h=[],i=0;i<=this.heightSegments;i++){for(var l=[],c=[],t=0;t<=this.widthSegments;t++){var p=t/this.widthSegments,u=i/this.heightSegments;(f=new THREE.Vector3).x=-this.radius*Math.cos(r+p*n)*Math.sin(o+u*a),f.y=this.radius*Math.cos(o+u*a),f.z=this.radius*Math.sin(r+p*n)*Math.sin(o+u*a),this.vertices.push(f),l.push(this.vertices.length-1),c.push(new THREE.Vector2(p,1-u))}s.push(l),h.push(c)}for(i=0;i<this.heightSegments;i++)for(t=0;t<this.widthSegments;t++){var r=s[i][t+1],n=s[i][t],o=s[i+1][t],a=s[i+1][t+1],l=this.vertices[r].clone().normalize(),c=this.vertices[n].clone().normalize(),p=this.vertices[o].clone().normalize(),u=this.vertices[a].clone().normalize(),f=h[i][t+1].clone(),d=h[i][t].clone(),E=h[i+1][t].clone(),m=h[i+1][t+1].clone();Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(r,o,a,[l,p,u])),this.faceVertexUvs[0].push([f,E,m])):Math.abs(this.vertices[o].y)===this.radius?(this.faces.push(new THREE.Face3(r,n,o,[l,c,p])),this.faceVertexUvs[0].push([f,d,E])):(this.faces.push(new THREE.Face4(r,n,o,a,[l,c,p,u])),this.faceVertexUvs[0].push([f,d,E,m]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var i=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,i,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,i,r,n){for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=n||2*Math.PI,n=new THREE.Vector3,e=[],t=[],i=0;i<=this.radialSegments;i++)for(r=0;r<=this.tubularSegments;r++){var o=r/this.tubularSegments*this.arc,a=2*i/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(o),n.y=this.radius*Math.sin(o),(s=new THREE.Vector3).x=(this.radius+this.tube*Math.cos(a))*Math.cos(o),s.y=(this.radius+this.tube*Math.cos(a))*Math.sin(o),s.z=this.tube*Math.sin(a),this.vertices.push(s),e.push(new THREE.Vector2(r/this.tubularSegments,i/this.radialSegments)),t.push(s.clone().sub(n).normalize())}for(i=1;i<=this.radialSegments;i++)for(r=1;r<=this.tubularSegments;r++){var n=(this.tubularSegments+1)*i+r-1,o=(this.tubularSegments+1)*(i-1)+r-1,a=(this.tubularSegments+1)*(i-1)+r,s=(this.tubularSegments+1)*i+r,h=new THREE.Face4(n,o,a,s,[t[n],t[o],t[a],t[s]]);h.normal.add(t[n]),h.normal.add(t[o]),h.normal.add(t[a]),h.normal.add(t[s]),h.normal.normalize(),this.faces.push(h),this.faceVertexUvs[0].push([e[n].clone(),e[o].clone(),e[a].clone(),e[s].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,i,r,n,o,a){function s(e,t,i,r,n,o){var a=Math.cos(e);return Math.cos(t),t=Math.sin(e),e*=i/r,a*=.5*n*(2+(i=Math.cos(e))),t*=.5*n*(2+i),n=.5*o*n*Math.sin(e),new THREE.Vector3(a,t,n)}for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||64,this.tubularSegments=r||8,this.p=n||2,this.q=o||3,this.heightScale=a||1,this.grid=Array(this.radialSegments),i=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3,e=0;e<this.radialSegments;++e)for(this.grid[e]=Array(this.tubularSegments),t=0;t<this.tubularSegments;++t){var o=s(h=e/this.radialSegments*2*this.p*Math.PI,a=t/this.tubularSegments*2*Math.PI,this.q,this.p,this.radius,this.heightScale),h=s(h+.01,a,this.q,this.p,this.radius,this.heightScale);i.subVectors(h,o),r.addVectors(h,o),n.crossVectors(i,r),r.crossVectors(n,i),n.normalize(),r.normalize(),h=-this.tube*Math.cos(a),a=this.tube*Math.sin(a),o.x+=h*r.x+a*n.x,o.y+=h*r.y+a*n.y,o.z+=h*r.z+a*n.z,this.grid[e][t]=this.vertices.push(new THREE.Vector3(o.x,o.y,o.z))-1}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){var n=(e+1)%this.radialSegments,o=(t+1)%this.tubularSegments,i=this.grid[e][t],r=this.grid[n][t],n=this.grid[n][o],o=this.grid[e][o],a=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments),h=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),l=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),c=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face4(i,r,n,o)),this.faceVertexUvs[0].push([a,h,l,c])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radiusSegments=r||8,this.closed=n||!1,o&&(this.debug=new THREE.Object3D),this.grid=[];var a,s,h,l,c,n=this.segments+1,o=new THREE.Vector3,p=(t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed)).tangents,u=t.normals,f=t.binormals;for(this.tangents=p,this.normals=u,this.binormals=f,t=0;t<n;t++)for(this.grid[t]=[],r=t/(n-1),c=e.getPointAt(r),r=p[t],a=u[t],s=f[t],this.debug&&(this.debug.add(new THREE.ArrowHelper(r,c,i,255)),this.debug.add(new THREE.ArrowHelper(a,c,i,16711680)),this.debug.add(new THREE.ArrowHelper(s,c,i,65280))),r=0;r<this.radiusSegments;r++)h=r/this.radiusSegments*2*Math.PI,l=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),o.copy(c),o.x+=l*a.x+h*s.x,o.y+=l*a.y+h*s.y,o.z+=l*a.z+h*s.z,this.grid[t][r]=this.vertices.push(new THREE.Vector3(o.x,o.y,o.z))-1;for(t=0;t<this.segments;t++)for(r=0;r<this.radiusSegments;r++)n=this.closed?(t+1)%this.segments:t+1,o=(r+1)%this.radiusSegments,e=this.grid[t][r],i=this.grid[n][r],n=this.grid[n][o],o=this.grid[t][o],p=new THREE.Vector2(t/this.segments,r/this.radiusSegments),u=new THREE.Vector2((t+1)/this.segments,r/this.radiusSegments),f=new THREE.Vector2((t+1)/this.segments,(r+1)/this.radiusSegments),a=new THREE.Vector2(t/this.segments,(r+1)/this.radiusSegments),this.faces.push(new THREE.Face4(e,i,n,o)),this.faceVertexUvs[0].push([p,u,f,a]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,i){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var n,o,a,s=[],h=[],l=[],c=new THREE.Vector3,p=new THREE.Matrix4,t=t+1;for(this.tangents=s,this.normals=h,this.binormals=l,n=0;n<t;n++)o=n/(t-1),s[n]=e.getTangentAt(o),s[n].normalize();for(h[0]=new THREE.Vector3,l[0]=new THREE.Vector3,e=Number.MAX_VALUE,n=Math.abs(s[0].x),o=Math.abs(s[0].y),a=Math.abs(s[0].z),n<=e&&(e=n,r.set(1,0,0)),o<=e&&(e=o,r.set(0,1,0)),a<=e&&r.set(0,0,1),c.crossVectors(s[0],r).normalize(),h[0].crossVectors(s[0],c),l[0].crossVectors(s[0],h[0]),n=1;n<t;n++)h[n]=h[n-1].clone(),l[n]=l[n-1].clone(),c.crossVectors(s[n-1],s[n]),1e-4<c.length()&&(c.normalize(),r=Math.acos(s[n-1].dot(s[n])),h[n].applyMatrix4(p.makeRotationAxis(c,r))),l[n].crossVectors(s[n],h[n]);if(i)for(r=Math.acos(h[0].dot(h[t-1])),r/=t-1,0<s[0].dot(c.crossVectors(h[0],h[t-1]))&&(r=-r),n=1;n<t;n++)h[n].applyMatrix4(p.makeRotationAxis(s[n],r*n)),l[n].crossVectors(s[n],h[n])},THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=s.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.Vector2(i,1-e),t}function o(e,t){c[e.index]||(c[e.index]=[]),c[t.index]||(c[t.index]=[]);var i=c[e.index][t.index];return void 0===i&&(c[e.index][t.index]=c[t.index][e.index]=i=n((new THREE.Vector3).addVectors(e,t).divideScalar(2))),i}function a(e,t,i){return i<0&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(i/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this);for(var i=i||1,r=r||0,s=this,h=0,l=e.length;h<l;h++)n(new THREE.Vector3(e[h][0],e[h][1],e[h][2]));for(var c=[],e=this.vertices,h=0,l=t.length;h<l;h++)!function e(t,i,r,n){n<1?((n=new THREE.Face3(t.index,i.index,r.index,[t.clone(),i.clone(),r.clone()])).centroid.add(t).add(i).add(r).divideScalar(3),n.normal=n.centroid.clone().normalize(),s.faces.push(n),n=Math.atan2(n.centroid.z,-n.centroid.x),s.faceVertexUvs[0].push([a(t.uv,t,n),a(i.uv,i,n),a(r.uv,r,n)])):(--n,e(t,o(t,i),o(t,r),n),e(o(t,i),i,o(i,r),n),e(o(t,r),o(i,r),r,n),e(o(t,i),o(i,r),o(t,r),n))}(e[t[h][0]],e[t[h][1]],e[t[h][2]],r);for(this.mergeVertices(),h=0,l=this.vertices.length;h<l;h++)this.vertices[h].multiplyScalar(i);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,i,r){THREE.Geometry.call(this);for(var n,o,a,s,h,l,c,p=this.vertices,u=this.faces,f=this.faceVertexUvs[0],r=void 0!==r&&r,d=t+1,E=0;E<=i;E++)for(a=E/i,n=0;n<=t;n++)o=e(o=n/t,a),p.push(o);for(E=0;E<i;E++)for(n=0;n<t;n++)p=(e=E*d+n)+1,o=(a=(E+1)*d+n)+1,s=new THREE.Vector2(n/t,E/i),h=new THREE.Vector2((n+1)/t,E/i),l=new THREE.Vector2(n/t,(E+1)/i),c=new THREE.Vector2((n+1)/t,(E+1)/i),r?(u.push(new THREE.Face3(e,p,a)),u.push(new THREE.Face3(p,o,a)),f.push([s,h,l]),f.push([h,c,l])):(u.push(new THREE.Face4(e,p,o,a)),f.push([s,h,c,l]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var i=[[0,1,2],[0,2,1]],r=3;r<e.length;r++){var n=r,o=e[n].clone(),a=o.length();o.x+=2e-6*a*(Math.random()-.5),o.y+=2e-6*a*(Math.random()-.5),o.z+=2e-6*a*(Math.random()-.5);for(var a=[],s=0;s<i.length;){var h=i[s],l=o,c=e[h[0]],p=c,u=e[h[1]],f=e[h[2]],d=new THREE.Vector3,E=new THREE.Vector3;if(d.subVectors(f,u),E.subVectors(p,u),d.cross(E),d.normalize(),c=(p=d).dot(c),p.dot(l)>=c){for(l=0;l<3;l++){for(c=[h[l],h[(l+1)%3]],p=!0,u=0;u<a.length;u++)if(a[u][0]===c[1]&&a[u][1]===c[0]){a[u]=a[a.length-1],a.pop(),p=!1;break}p&&a.push(c)}i[s]=i[i.length-1],i.pop()}else s++}for(u=0;u<a.length;u++)i.push([a[u][0],a[u][1],n])}for(n=0,o=Array(e.length),r=0;r<i.length;r++)for(a=i[r],s=0;s<3;s++)void 0===o[a[s]]&&(o[a[s]]=n++,this.vertices.push(e[a[s]])),a[s]=o[a[s]];for(r=0;r<i.length;r++)this.faces.push(new THREE.Face3(i[r][0],i[r][1],i[r][2]));for(r=0;r<this.faces.length;r++)a=this.faces[r],this.faceVertexUvs[0].push([t(this.vertices[a.a]),t(this.vertices[a.b]),t(this.vertices[a.c])]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,i,r){THREE.Object3D.call(this),void 0===i&&(i=20),void 0===r&&(r=16776960);var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0)),n.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(n,new THREE.LineBasicMaterial({color:r})),this.add(this.line),n=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(i)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=THREE.ArrowHelper.__v1.copy(e).normalize();.999<t.y?this.rotation.set(0,0,0):t.y<-.999?this.rotation.set(Math.PI,0,0):(e=THREE.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),t=Math.acos(t.y),e=THREE.ArrowHelper.__q1.setFromAxisAngle(e,t),this.rotation.setEulerFromQuaternion(e,this.eulerOrder))},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.ArrowHelper.__v1=new THREE.Vector3,THREE.ArrowHelper.__v2=new THREE.Vector3,THREE.ArrowHelper.__q1=new THREE.Quaternion,THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.geometry.vertices.push(new THREE.Vector3),i.geometry.colors.push(new THREE.Color(t)),void 0===i.pointMap[e]&&(i.pointMap[e]=[]),i.pointMap[e].push(i.geometry.vertices.length-1)}THREE.Line.call(this);var i=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={},t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,t,i,r){if(THREE.CameraHelper.__v.set(t,i,r),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),void 0!==(e=n.pointMap[e]))for(t=0,i=e.length;t<i;t++)n.geometry.vertices[e[t]].copy(THREE.CameraHelper.__v)}var n=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var i=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.LineBasicMaterial({color:i,fog:!1});this.lightSphere=new THREE.Mesh(r,o),this.lightRays=new THREE.Line(n,a,THREE.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,(this.lightSphere.properties.gizmoRoot=this).targetSphere=null,void 0!==e.target.properties.targetInverse&&(r=new THREE.SphereGeometry(t,8,4),n=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(r,n),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,i=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),(r=new THREE.Geometry).vertices.push(this.position.clone()),r.vertices.push(this.targetSphere.position.clone()),r.computeLineDistances(),this.targetLine=new THREE.Line(r,i),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.HemisphereLightHelper=function(e,t,i){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var n=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(r);for(var r=this.groundColor.getHex(),o=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),a=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),s=new THREE.MeshBasicMaterial({color:n,fog:!1}),h=new THREE.MeshBasicMaterial({color:r,fog:!1}),l=0,c=o.faces.length;l<c;l++)o.faces[l].materialIndex=0;for(l=0,c=a.faces.length;l<c;l++)a.faces[l].materialIndex=1;THREE.GeometryUtils.merge(o,a),this.lightSphere=new THREE.Mesh(o,new THREE.MeshFaceMaterial([s,h])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+i),0),i,n),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+i),0),i,r),(t=new THREE.Object3D).rotation.x=.5*-Math.PI,t.add(this.lightSphere),t.add(this.lightArrow),t.add(this.lightArrowGround),this.add(t),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,(this.lightSphere.properties.gizmoRoot=this).properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position;var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var r=this.color.getHex(),i=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.IcosahedronGeometry(1,2),a=new THREE.MeshBasicMaterial({color:r,fog:!1}),s=new THREE.LineBasicMaterial({color:r,fog:!1}),r=new THREE.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(i,a),this.lightRays=new THREE.Line(n,s,THREE.LinePieces),this.lightDistance=new THREE.Mesh(o,r),0===(i=e.distance)?this.lightDistance.visible=!1:this.lightDistance.scale.set(i,i,i),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,(this.lightSphere.properties.gizmoRoot=this).properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color),0===(e=this.light.distance)?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(e,e,e))},THREE.SpotLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var i=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0);(s=new THREE.Matrix4).rotateX(-Math.PI/2),s.translate(new THREE.Vector3(0,-.5,0)),o.applyMatrix(s);var a=new THREE.MeshBasicMaterial({color:i,fog:!1}),s=new THREE.LineBasicMaterial({color:i,fog:!1}),h=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new THREE.Mesh(r,a),this.lightCone=new THREE.Mesh(o,h),o=2*(r=e.distance?e.distance:1e4)*Math.tan(.5*e.angle),this.lightCone.scale.set(o,o,r),this.lightRays=new THREE.Line(n,s,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,(this.lightSphere.properties.gizmoRoot=this).targetSphere=null,void 0!==e.target.properties.targetInverse&&(n=new THREE.SphereGeometry(t,8,4),s=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(n,s),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,i=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),(n=new THREE.Geometry).vertices.push(this.position.clone()),n.vertices.push(this.targetSphere.position.clone()),n.computeLineDistances(),this.targetLine=new THREE.Line(n,i),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e),e=THREE.Math.clamp(this.light.intensity,0,1),this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,(this.customUpdateCallback=void 0)!==e&&this.add(e,t,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,i,r,n,o){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){for(var e,t=this.lensFlares.length,i=2*-this.positionScreen.x,r=2*-this.positionScreen.y,n=0;n<t;n++)(e=this.lensFlares[n]).x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+r*e.distance,e.wantedRotation=.25*e.x*Math.PI,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,+i),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)(\d+)/,r={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s,h=n.morphTargets[o].name.match(i);h&&1<h.length&&(r[s=h[1]]||(r[s]={start:1/0,end:-1/0}),o<(h=r[s]).start&&(h.start=o),o>h.end&&(h.end=o),t=t||s)}for(s in r)h=r[s],this.createAnimation(s,h.start,h.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;t<i;t++){var r,n,o,a=this.animationsList[t];a.active&&(r=a.duration/a.length,a.time+=a.direction*e,a.mirroredLoop?(a.time>a.duration||a.time<0)&&(a.direction*=-1,a.time>a.duration&&(a.time=a.duration,a.directionBackwards=!0),a.time<0&&(a.time=0,a.directionBackwards=!1)):(a.time%=a.duration,a.time<0&&(a.time+=a.duration)),n=a.startFrame+THREE.Math.clamp(Math.floor(a.time/r),0,a.length-1),o=a.weight,n!==a.currentFrame&&(this.morphTargetInfluences[a.lastFrame]=0,this.morphTargetInfluences[a.currentFrame]=+o,this.morphTargetInfluences[n]=0,a.lastFrame=a.currentFrame,a.currentFrame=n),r=a.time%r/r,a.directionBackwards&&(r=1-r),this.morphTargetInfluences[a.currentFrame]=r*o,this.morphTargetInfluences[a.lastFrame]=(1-r)*o)}},THREE.LensFlarePlugin=function(){function t(e,t){var i=v.createProgram(),r=v.createShader(v.FRAGMENT_SHADER),n=v.createShader(v.VERTEX_SHADER),o="precision "+t+" float;\n";return v.shaderSource(r,o+e.fragmentShader),v.shaderSource(n,o+e.vertexShader),v.compileShader(r),v.compileShader(n),v.attachShader(i,r),v.attachShader(i,n),v.linkProgram(i),i}var v,y,i,r,n,R,x,H,w,_,b,S,M;this.init=function(e){v=e.context,i=(y=e).getPrecision(),r=new Float32Array(16),n=new Uint16Array(6),e=0,r[e++]=-1,r[e++]=-1,r[e++]=0,r[e++]=0,r[e++]=1,r[e++]=-1,r[e++]=1,r[e++]=0,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=-1,r[e++]=1,r[e++]=0,r[e++]=1,e=0,n[e++]=0,n[e++]=1,n[e++]=2,n[e++]=0,n[e++]=2,n[e++]=3,R=v.createBuffer(),x=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,R),v.bufferData(v.ARRAY_BUFFER,r,v.STATIC_DRAW),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,x),v.bufferData(v.ELEMENT_ARRAY_BUFFER,n,v.STATIC_DRAW),H=v.createTexture(),w=v.createTexture(),v.bindTexture(v.TEXTURE_2D,H),v.texImage2D(v.TEXTURE_2D,0,v.RGB,16,16,0,v.RGB,v.UNSIGNED_BYTE,null),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST),v.bindTexture(v.TEXTURE_2D,w),v.texImage2D(v.TEXTURE_2D,0,v.RGBA,16,16,0,v.RGBA,v.UNSIGNED_BYTE,null),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST),b=v.getParameter(v.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(_=!1,t(THREE.ShaderFlares.lensFlare,i)):(_=!0,t(THREE.ShaderFlares.lensFlareVertexTexture,i)),M={},(S={}).vertex=v.getAttribLocation(b,"position"),S.uv=v.getAttribLocation(b,"uv"),M.renderType=v.getUniformLocation(b,"renderType"),M.map=v.getUniformLocation(b,"map"),M.occlusionMap=v.getUniformLocation(b,"occlusionMap"),M.opacity=v.getUniformLocation(b,"opacity"),M.color=v.getUniformLocation(b,"color"),M.scale=v.getUniformLocation(b,"scale"),M.rotation=v.getUniformLocation(b,"rotation"),M.screenPosition=v.getUniformLocation(b,"screenPosition")},this.render=function(e,t,i,r){var n=(e=e.__webglFlares).length;if(n){var o,a,s,h,l,c=new THREE.Vector3,p=r/i,u=.5*i,f=.5*r,d=16/r,E=new THREE.Vector2(d*p,d),m=new THREE.Vector3(1,1,0),g=new THREE.Vector2(1,1),T=M,d=S;for(v.useProgram(b),v.enableVertexAttribArray(S.vertex),v.enableVertexAttribArray(S.uv),v.uniform1i(T.occlusionMap,0),v.uniform1i(T.map,1),v.bindBuffer(v.ARRAY_BUFFER,R),v.vertexAttribPointer(d.vertex,2,v.FLOAT,!1,16,0),v.vertexAttribPointer(d.uv,2,v.FLOAT,!1,16,8),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,x),v.disable(v.CULL_FACE),v.depthMask(!1),o=0;o<n;o++)if(d=16/r,E.set(d*p,d),h=e[o],c.set(h.matrixWorld.elements[12],h.matrixWorld.elements[13],h.matrixWorld.elements[14]),c.applyMatrix4(t.matrixWorldInverse),c.applyProjection(t.projectionMatrix),m.copy(c),g.x=m.x*u+u,g.y=m.y*f+f,_||0<g.x&&g.x<i&&0<g.y&&g.y<r)for(v.activeTexture(v.TEXTURE1),v.bindTexture(v.TEXTURE_2D,H),v.copyTexImage2D(v.TEXTURE_2D,0,v.RGB,g.x-8,g.y-8,16,16,0),v.uniform1i(T.renderType,0),v.uniform2f(T.scale,E.x,E.y),v.uniform3f(T.screenPosition,m.x,m.y,m.z),v.disable(v.BLEND),v.enable(v.DEPTH_TEST),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0),v.activeTexture(v.TEXTURE0),v.bindTexture(v.TEXTURE_2D,w),v.copyTexImage2D(v.TEXTURE_2D,0,v.RGBA,g.x-8,g.y-8,16,16,0),v.uniform1i(T.renderType,1),v.disable(v.DEPTH_TEST),v.activeTexture(v.TEXTURE1),v.bindTexture(v.TEXTURE_2D,H),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0),h.positionScreen.copy(m),h.customUpdateCallback?h.customUpdateCallback(h):h.updateLensFlares(),v.uniform1i(T.renderType,2),v.enable(v.BLEND),a=0,s=h.lensFlares.length;a<s;a++).001<(l=h.lensFlares[a]).opacity&&.001<l.scale&&(m.x=l.x,m.y=l.y,m.z=l.z,d=l.size*l.scale/r,E.x=d*p,E.y=d,v.uniform3f(T.screenPosition,m.x,m.y,m.z),v.uniform2f(T.scale,E.x,E.y),v.uniform1f(T.rotation,l.rotation),v.uniform1f(T.opacity,l.opacity),v.uniform3f(T.color,l.color.r,l.color.g,l.color.b),y.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),y.setTexture(l.texture,1),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0));v.enable(v.CULL_FACE),v.enable(v.DEPTH_TEST),v.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var d,E,m,g,T,v,y=new THREE.Frustum,R=new THREE.Matrix4,x=new THREE.Vector3,H=new THREE.Vector3,w=new THREE.Vector3;this.init=function(e){d=e.context,E=e;var e=THREE.ShaderLib.depthRGBA,t=THREE.UniformsUtils.clone(e.uniforms);m=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t}),g=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,morphTargets:!0}),T=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,skinning:!0}),v=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,morphTargets:!0,skinning:!0}),m._shadowPass=!0,g._shadowPass=!0,T._shadowPass=!0,v._shadowPass=!0},this.render=function(e,t){E.shadowMapEnabled&&E.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(e,t){var i,r,n,o,a,s,h,l,c,p=[],u=0;for(d.clearColor(1,1,1,1),d.disable(d.BLEND),d.enable(d.CULL_FACE),d.frontFace(d.CCW),E.shadowMapCullFace===THREE.CullFaceFront?d.cullFace(d.FRONT):d.cullFace(d.BACK),E.setDepthTest(!0),i=0,r=e.__lights.length;i<r;i++)if((n=e.__lights[i]).castShadow)if(n instanceof THREE.DirectionalLight&&n.shadowCascade)for(o=0;o<n.shadowCascadeCount;o++){if(n.shadowCascadeArray[o])c=n.shadowCascadeArray[o];else{l=n,s=o,(c=new THREE.DirectionalLight).isVirtual=!0,c.onlyShadow=!0,c.castShadow=!0,c.shadowCameraNear=l.shadowCameraNear,c.shadowCameraFar=l.shadowCameraFar,c.shadowCameraLeft=l.shadowCameraLeft,c.shadowCameraRight=l.shadowCameraRight,c.shadowCameraBottom=l.shadowCameraBottom,c.shadowCameraTop=l.shadowCameraTop,c.shadowCameraVisible=l.shadowCameraVisible,c.shadowDarkness=l.shadowDarkness,c.shadowBias=l.shadowCascadeBias[s],c.shadowMapWidth=l.shadowCascadeWidth[s],c.shadowMapHeight=l.shadowCascadeHeight[s],c.pointsWorld=[],c.pointsFrustum=[],h=c.pointsWorld,a=c.pointsFrustum;for(var f=0;f<8;f++)h[f]=new THREE.Vector3,a[f]=new THREE.Vector3;h=l.shadowCascadeNearZ[s],l=l.shadowCascadeFarZ[s],a[0].set(-1,-1,h),a[1].set(1,-1,h),a[2].set(-1,1,h),a[3].set(1,1,h),a[4].set(-1,-1,l),a[5].set(1,-1,l),a[6].set(-1,1,l),a[7].set(1,1,l),c.originalCamera=t,(a=new THREE.Gyroscope).position=n.shadowCascadeOffset,a.add(c),a.add(c.target),t.add(a),n.shadowCascadeArray[o]=c,console.log("Created virtualLight",c)}h=o,(l=(s=n).shadowCascadeArray[h]).position.copy(s.position),l.target.position.copy(s.target.position),l.lookAt(l.target),l.shadowCameraVisible=s.shadowCameraVisible,l.shadowDarkness=s.shadowDarkness,l.shadowBias=s.shadowCascadeBias[h],a=s.shadowCascadeNearZ[h],s=s.shadowCascadeFarZ[h],(l=l.pointsFrustum)[0].z=a,l[1].z=a,l[2].z=a,l[3].z=a,l[4].z=s,l[5].z=s,l[6].z=s,l[7].z=s,p[u]=c,u++}else p[u]=n,u++;for(i=0,r=p.length;i<r;i++){if((n=p[i]).shadowMap||(o=THREE.LinearFilter,E.shadowMapType===THREE.PCFSoftShadowMap&&(o=THREE.NearestFilter),n.shadowMap=new THREE.WebGLRenderTarget(n.shadowMapWidth,n.shadowMapHeight,{minFilter:o,magFilter:o,format:THREE.RGBAFormat}),n.shadowMapSize=new THREE.Vector2(n.shadowMapWidth,n.shadowMapHeight),n.shadowMatrix=new THREE.Matrix4),!n.shadowCamera){if(n instanceof THREE.SpotLight)n.shadowCamera=new THREE.PerspectiveCamera(n.shadowCameraFov,n.shadowMapWidth/n.shadowMapHeight,n.shadowCameraNear,n.shadowCameraFar);else{if(!(n instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}n.shadowCamera=new THREE.OrthographicCamera(n.shadowCameraLeft,n.shadowCameraRight,n.shadowCameraTop,n.shadowCameraBottom,n.shadowCameraNear,n.shadowCameraFar)}e.add(n.shadowCamera),E.autoUpdateScene&&e.updateMatrixWorld()}if(n.shadowCameraVisible&&!n.cameraHelper&&(n.cameraHelper=new THREE.CameraHelper(n.shadowCamera),n.shadowCamera.add(n.cameraHelper)),n.isVirtual&&c.originalCamera==t){for(o=t,u=n.shadowCamera,a=n.pointsFrustum,l=n.pointsWorld,x.set(1/0,1/0,1/0),H.set(-1/0,-1/0,-1/0),s=0;s<8;s++)(h=l[s]).copy(a[s]),THREE.ShadowMapPlugin.__projector.unprojectVector(h,o),h.applyMatrix4(u.matrixWorldInverse),h.x<x.x&&(x.x=h.x),h.x>H.x&&(H.x=h.x),h.y<x.y&&(x.y=h.y),h.y>H.y&&(H.y=h.y),h.z<x.z&&(x.z=h.z),h.z>H.z&&(H.z=h.z);u.left=x.x,u.right=H.x,u.top=H.y,u.bottom=x.y,u.updateProjectionMatrix()}for(u=n.shadowMap,a=n.shadowMatrix,(o=n.shadowCamera).position.getPositionFromMatrix(n.matrixWorld),w.getPositionFromMatrix(n.target.matrixWorld),o.lookAt(w),o.updateMatrixWorld(),o.matrixWorldInverse.getInverse(o.matrixWorld),n.cameraHelper&&(n.cameraHelper.visible=n.shadowCameraVisible),n.shadowCameraVisible&&n.cameraHelper.update(),a.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),a.multiply(o.projectionMatrix),a.multiply(o.matrixWorldInverse),R.multiplyMatrices(o.projectionMatrix,o.matrixWorldInverse),y.setFromMatrix(R),E.setRenderTarget(u),E.clear(),n=0,u=(l=e.__webglObjects).length;n<u;n++)a=(s=l[n]).object,s.render=!1,!a.visible||!a.castShadow||(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)&&a.frustumCulled&&!y.intersectsObject(a)||(a._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,a.matrixWorld),s.render=!0);for(n=0,u=l.length;n<u;n++)(s=l[n]).render&&(a=s.object,s=s.buffer,f=a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material,h=0<a.geometry.morphTargets.length&&f.morphTargets,f=a instanceof THREE.SkinnedMesh&&f.skinning,h=a.customDepthMaterial?a.customDepthMaterial:f?h?v:T:h?g:m,s instanceof THREE.BufferGeometry?E.renderBufferDirect(o,e.__lights,null,h,s,a):E.renderBuffer(o,e.__lights,null,h,s,a));for(n=0,u=(l=e.__webglObjectsImmediate).length;n<u;n++)(a=(s=l[n]).object).visible&&a.castShadow&&(a._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,a.matrixWorld),E.renderImmediateObject(o,e.__lights,null,m,a))}i=E.getClearColor(),r=E.getClearAlpha(),d.clearColor(i.r,i.g,i.b,r),d.enable(d.BLEND),E.shadowMapCullFace===THREE.CullFaceFront&&d.cullFace(d.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function E(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var m,g,o,a,s,T,v,y,R,x;this.init=function(e){m=e.context,o=(g=e).getPrecision(),a=new Float32Array(16),s=new Uint16Array(6),e=0,a[e++]=-1,a[e++]=-1,a[e++]=0,a[e++]=0,a[e++]=1,a[e++]=-1,a[e++]=1,a[e++]=0,a[e++]=1,a[e++]=1,a[e++]=1,a[e++]=1,a[e++]=-1,a[e++]=1,a[e++]=0,a[e++]=1,e=0,s[e++]=0,s[e++]=1,s[e++]=2,s[e++]=0,s[e++]=2,s[e++]=3,T=m.createBuffer(),v=m.createBuffer(),m.bindBuffer(m.ARRAY_BUFFER,T),m.bufferData(m.ARRAY_BUFFER,a,m.STATIC_DRAW),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v),m.bufferData(m.ELEMENT_ARRAY_BUFFER,s,m.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,t=m.createProgram(),i=m.createShader(m.FRAGMENT_SHADER),r=m.createShader(m.VERTEX_SHADER),n="precision "+o+" float;\n";m.shaderSource(i,n+e.fragmentShader),m.shaderSource(r,n+e.vertexShader),m.compileShader(i),m.compileShader(r),m.attachShader(t,i),m.attachShader(t,r),m.linkProgram(t),y=t,x={},(R={}).position=m.getAttribLocation(y,"position"),R.uv=m.getAttribLocation(y,"uv"),x.uvOffset=m.getUniformLocation(y,"uvOffset"),x.uvScale=m.getUniformLocation(y,"uvScale"),x.rotation=m.getUniformLocation(y,"rotation"),x.scale=m.getUniformLocation(y,"scale"),x.alignment=m.getUniformLocation(y,"alignment"),x.color=m.getUniformLocation(y,"color"),x.map=m.getUniformLocation(y,"map"),x.opacity=m.getUniformLocation(y,"opacity"),x.useScreenCoordinates=m.getUniformLocation(y,"useScreenCoordinates"),x.sizeAttenuation=m.getUniformLocation(y,"sizeAttenuation"),x.screenPosition=m.getUniformLocation(y,"screenPosition"),x.modelViewMatrix=m.getUniformLocation(y,"modelViewMatrix"),x.projectionMatrix=m.getUniformLocation(y,"projectionMatrix"),x.fogType=m.getUniformLocation(y,"fogType"),x.fogDensity=m.getUniformLocation(y,"fogDensity"),x.fogNear=m.getUniformLocation(y,"fogNear"),x.fogFar=m.getUniformLocation(y,"fogFar"),x.fogColor=m.getUniformLocation(y,"fogColor"),x.alphaTest=m.getUniformLocation(y,"alphaTest")},this.render=function(e,t,i,r){var n=e.__webglSprites,o=n.length;if(o){var a=R,s=x,h=r/i,i=.5*i,l=.5*r;m.useProgram(y),m.enableVertexAttribArray(a.position),m.enableVertexAttribArray(a.uv),m.disable(m.CULL_FACE),m.enable(m.BLEND),m.bindBuffer(m.ARRAY_BUFFER,T),m.vertexAttribPointer(a.position,2,m.FLOAT,!1,16,0),m.vertexAttribPointer(a.uv,2,m.FLOAT,!1,16,8),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v),m.uniformMatrix4fv(s.projectionMatrix,!1,t.projectionMatrix.elements),m.activeTexture(m.TEXTURE0),m.uniform1i(s.map,0);var c=a=0;(d=e.fog)?(m.uniform3f(s.fogColor,d.color.r,d.color.g,d.color.b),d instanceof THREE.Fog?(m.uniform1f(s.fogNear,d.near),m.uniform1f(s.fogFar,d.far),m.uniform1i(s.fogType,1),c=a=1):d instanceof THREE.FogExp2&&(m.uniform1f(s.fogDensity,d.density),m.uniform1i(s.fogType,2),c=a=2)):(m.uniform1i(s.fogType,0),c=a=0);for(var p,u,f=[],d=0;d<o;d++)u=(p=n[d]).material,p.visible&&0!==u.opacity&&(u.useScreenCoordinates?p.z=-p.position.z:(p._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,p.matrixWorld),p.z=-p._modelViewMatrix.elements[14]));for(n.sort(E),d=0;d<o;d++)u=(p=n[d]).material,p.visible&&0!==u.opacity&&u.map&&u.map.image&&u.map.image.width&&(m.uniform1f(s.alphaTest,u.alphaTest),!0===u.useScreenCoordinates?(m.uniform1i(s.useScreenCoordinates,1),m.uniform3f(s.screenPosition,(p.position.x*g.devicePixelRatio-i)/i,(l-p.position.y*g.devicePixelRatio)/l,Math.max(0,Math.min(1,p.position.z))),f[0]=g.devicePixelRatio,f[1]=g.devicePixelRatio):(m.uniform1i(s.useScreenCoordinates,0),m.uniform1i(s.sizeAttenuation,u.sizeAttenuation?1:0),m.uniformMatrix4fv(s.modelViewMatrix,!1,p._modelViewMatrix.elements),f[0]=1,f[1]=1),a!==(t=e.fog&&u.fog?c:0)&&(m.uniform1i(s.fogType,t),a=t),t=1/(u.scaleByViewport?r:1),f[0]*=t*h*p.scale.x,f[1]*=t*p.scale.y,m.uniform2f(s.uvScale,u.uvScale.x,u.uvScale.y),m.uniform2f(s.uvOffset,u.uvOffset.x,u.uvOffset.y),m.uniform2f(s.alignment,u.alignment.x,u.alignment.y),m.uniform1f(s.opacity,u.opacity),m.uniform3f(s.color,u.color.r,u.color.g,u.color.b),m.uniform1f(s.rotation,p.rotation),m.uniform2fv(s.scale,f),g.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),g.setDepthTest(u.depthTest),g.setDepthWrite(u.depthWrite),g.setTexture(u.map,0),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0));m.enable(m.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var l,c,p,u,f,d,E=new THREE.Frustum,m=new THREE.Matrix4;this.init=function(e){l=e.context,c=e;var e=THREE.ShaderLib.depthRGBA,t=THREE.UniformsUtils.clone(e.uniforms);p=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t}),u=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,morphTargets:!0}),f=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,skinning:!0}),d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,morphTargets:!0,skinning:!0}),p._shadowPass=!0,u._shadowPass=!0,f._shadowPass=!0,d._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(e,t){var i,r,n,o,a,s,h;for(l.clearColor(1,1,1,1),l.disable(l.BLEND),c.setDepthTest(!0),c.autoUpdateScene&&e.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),m.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),E.setFromMatrix(m),c.setRenderTarget(this.renderTarget),c.clear(),i=0,r=(s=e.__webglObjects).length;i<r;i++)a=(n=s[i]).object,n.render=!1,!a.visible||(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)&&a.frustumCulled&&!E.intersectsObject(a)||(a._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,a.matrixWorld),n.render=!0);for(i=0,r=s.length;i<r;i++)!(n=s[i]).render||(a=n.object,n=n.buffer,a instanceof THREE.ParticleSystem&&!a.customDepthMaterial)||((h=a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material)&&c.setMaterialFaces(a.material),o=0<a.geometry.morphTargets.length&&h.morphTargets,h=a instanceof THREE.SkinnedMesh&&h.skinning,o=a.customDepthMaterial?a.customDepthMaterial:h?o?d:f:o?u:p,n instanceof THREE.BufferGeometry?c.renderBufferDirect(t,e.__lights,null,o,n,a):c.renderBuffer(t,e.__lights,null,o,n,a));for(i=0,r=(s=e.__webglObjectsImmediate).length;i<r;i++)(a=(n=s[i]).object).visible&&(a._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,a.matrixWorld),c.renderImmediateObject(t,e.__lights,null,p,a));i=c.getClearColor(),r=c.getClearAlpha(),l.clearColor(i.r,i.g,i.b,r),l.enable(l.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};